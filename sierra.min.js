(function() {
	var a, d, b, c;
	c = "fastly.session=";
	d = "analytics";
	a = "admin";
	b = {
		admin: 1,
		salesadmin: 2,
		internal: 3,
		superuser: 10,
		owner: 10,
		engineer: 30,
		billing: 30
	};
	window.Sierra = (function() {
		var f, g;

		function e() {}
		e.Routers = {};
		e.Views = {
			Resources: {},
			Widgets: {},
			Account: {}
		};
		e.Models = {};
		e.Collections = {};
		e.Layouts = {};
		e.user = null;
		e.customer = null;
		e.menu = null;
		e.templates = null;
		e.status = null;
		e.last_service = null;
		e.last_billing_customer_id = null;
		e.session = null;
		e.env = typeof ENV_NAME !== "undefined" && ENV_NAME !== null ? ENV_NAME : "production";
		e.api_uri = API_URI;
		e.version = __svid;
		g = function() {
			var i, h, j;
			Backbone.history = new e.History;
			new e.Router404();
			j = e.Routers;
			for (i in j) {
				h = j[i];
				new h()
			}
			if (!window.location.hash) {
				e.land()
			}
			return Backbone.history.start({
				pushState: false
			})
		};
		f = function() {
			var h;
			h = e.get_cookie("fastly.session", new RegExp("^fastly.session=([^-]+)--"));
			if (h != null) {
				return JSON.parse(base64.decode(h))
			} else {
				return null
			}
		};
		e.land = function() {
			return e.navigate((e.can_do("internal") ? a : d))
		};
		e.get_cookie = function(i, k) {
			var j, n, m, h, l;
			if (k == null) {
				k = new RegExp("^" + i + "=(.+)$")
			}
			l = document.cookie.split(";");
			for (m = 0, h = l.length; m < h; m++) {
				j = l[m];
				j = $.trim(j);
				if (!(n = j.match(k))) {
					continue
				}
				return n[1]
			}
			return null
		};
		e.set_cookie = function(j, k, l) {
			var i, h;
			if (l) {
				i = new Date;
				i.setTime(i.getTime() + l);
				h = "; expires=" + i.toGMTString()
			} else {
				h = ""
			}
			return document.cookie = j + "=" + k + h + "; path=/"
		};
		e.init = function() {
			e.session = f();
			e.menu = new e.Models.MainMenu();
			e.customer = new e.Models.Customer({});
			Fastly.success("/current_auth", function(h) {
				e.user = new e.Models.User(h.current_user);
				e.customer = new e.Models.Customer(h.current_customer);
				if (e.session == null) {
					e.session = {
						needs_two_factor_auth: h.needs_two_factor_auth
					}
				}
				if (e.assuming = h.assuming) {
					e.logged_in_user = new e.Models.User(h.logged_in_user)
				}
				e.render_zendesk();
				return g()
			});
			Fastly.error("/current_auth", function() {
				e.user = null;
				e.customer = null;
				e.logged_in_user = null;
				e.assuming = false;
				e.render_zendesk();
				return g()
			});
			Fastly.success("/login", function(h) {
				e.session = f();
				h.user.first_name = h.user.name.split(" ").shift();
				e.user = new e.Models.User(h.user);
				e.customer = new e.Models.Customer(h.customer);
				if (e.session == null) {
					e.session = {
						needs_two_factor_auth: h.needs_two_factor_auth
					}
				}
				return e.render_zendesk()
			});
			Fastly.success("/logout", function(h) {
				e.user = null;
				e.customer = new e.Models.Customer({});
				return e.render_zendesk()
			});
			Fastly.success("/two_factor_auth/enable", function(h) {
				if (e.session == null) {
					e.session = {}
				}
				return e.session.needs_two_factor_auth = false
			});
			Fastly.success("/two_factor_auth/verify", function(h) {
				if (e.session == null) {
					e.session = {}
				}
				e.session.needs_two_factor_auth = false;
				return e.land()
			});
			Fastly.success("/two_factor_auth/verify_by_recovery_code", function(h) {
				if (e.session == null) {
					e.session = {}
				}
				e.session.needs_two_factor_auth = false;
				return e.land()
			});
			e.templates = new e.Models.Templates();
			return e.templates.fetch({
				success: function() {
					FUI.app_loading();
					Fastly.current_auth();
					return e.render_zendesk()
				}
			})
		};
		e.set_load_timeout = function() {
			var h;
			h = function() {
				$("#loading_message").hide();
				return $("#reload_sierra").fadeIn(500)
			};
			return setTimeout(h, 10000)
		};
		e.logged_in_user_can_do = function(j) {
			var h, i;
			if (!((e.logged_in_user != null) && (e.logged_in_user.get("role") != null))) {
				return this.can_do(j)
			}
			i = b[j] || 1000;
			h = b[e.logged_in_user.get("role")] || 1000;
			if (i === h) {
				if (j === "owner") {
					if (e.customer == null) {
						return false
					}
					return e.customer.get("owner_id") === e.logged_in_user.get("id")
				} else {
					return j === e.logged_in_user.get("role")
				}
			} else {
				return h < i
			}
		};
		e.can_do = function(j) {
			var h, i;
			if (!((e.user != null) && (e.user.get("role") != null))) {
				return false
			}
			i = b[j] || 1000;
			h = b[e.user.get("role")] || 1000;
			if (i === h) {
				if (j === "owner") {
					if (e.customer == null) {
						return false
					}
					return e.customer.get("owner_id") === e.user.get("id")
				} else {
					return j === e.user.get("role")
				}
			} else {
				return h < i
			}
		};
		e.is_role = function(h) {
			if (e.user == null) {
				return false
			}
			return e.user.get("role") === h
		};
		e.navigate = function(h) {
			return window.location.hash = h
		};
		e.render_zendesk = function() {
			var h;
			if (typeof Zenbox === "undefined" || Zenbox === null) {
				return
			}
			h = {
				dropboxID: "20028707",
				url: "https://fastly.zendesk.com",
				tabID: "support",
				tabColor: "black",
				tabPosition: "Right"
			};
			if (e.user) {
				h.requester_name = e.user.get("name");
				h.requester_email = e.user.get("login")
			}
			return Zenbox.init(h)
		};
		e.serialize = function() {
			var h;
			h = {
				menu: e.menu.serialize(),
				version: e.version,
				browser_name: e.BrowserDebug.browser,
				browser_version: e.BrowserDebug.version,
				browser_os: e.BrowserDebug.os,
				window_location_href: window.location.href
			};
			if (e.user != null) {
				h.user = e.user.serialize()
			}
			if (e.customer != null) {
				h.customer = e.customer.serialize()
			}
			if (e.assuming) {
				h.logged_in_user = e.logged_in_user.serialize();
				h.assuming = true
			}
			if ((e.user != null) && (e.customer != null) && e.can_do("engineer")) {
				h.api_key = e.customer.get("raw_api_key")
			}
			h.current_year = (new Date()).getFullYear();
			return h
		};
		return e
	})()
}).call(this);
(function() {
	window.Fastly = (function() {
		var f, g, i, a, b, h, e, d;

		function c() {}
		i = _.extend({}, Backbone.Events);
		a = function(j, l, k) {
			return i.trigger(j + ":" + l, k)
		};
		f = function(j) {
			var k;
			if (j.url == null) {
				throw "no url"
			}
			j.xhrFields = _.extend({
				withCredentials: true
			}, j.xhrFields);
			if (!j.dontRewriteAPI) {
				k = FUI.parseURL(j.url);
				j.url = Sierra.api_uri + k.path + k.query
			}
			return $.ajax(j)
		};
		d = function(l, k, m, j) {
			return c.ajax({
				url: l,
				type: m,
				dataType: "json",
				data: k,
				success: function(o, p, n) {
					a("success", l, o);
					if (j.success != null) {
						return j.success(o)
					}
				},
				error: function(n, p, o) {
					a("error", l, JSON.parse(n.responseText));
					if (j.error != null) {
						return j.error(JSON.parse(n.responseText))
					}
				},
				complete: function(n, o) {
					a("complete", l, n);
					if (j.complete != null) {
						return j.complete(n)
					}
				}
			})
		};
		h = function(l, k, j) {
			if (j == null) {
				j = {}
			}
			return d(l, k, "POST", j)
		};
		b = function(l, k, j) {
			if (j == null) {
				j = {}
			}
			return d(l, k, "GET", j)
		};
		e = function(l, k, j) {
			if (j == null) {
				j = {}
			}
			return d(l, k, "PUT", j)
		};
		g = function(l, k, j) {
			if (j == null) {
				j = {}
			}
			return d(l, k, "DELETE", j)
		};
		c.ajax = f;
		c.get = b;
		c.post = h;
		c.put = e;
		c.request = d;
		c.login = function(j, l, k) {
			return h("/login", {
				user: j,
				password: l
			}, k)
		};
		c.signup = function(j, k) {
			var l;
			l = {
				"owner[name]": j.name,
				"owner[login]": j.login,
				"owner[password]": j.password,
				name: j.company,
				pricing_plan: j.pricing_plan,
				phone_number: j.phone_number,
				pre_confirmed: j.confirmed
			};
			return h("/signup/and_confirm", l, k)
		};
		c.current_auth = function(j) {
			return b("/current_auth", j)
		};
		c.current_user = function(j) {
			return b("/current_user", j)
		};
		c.current_customer = function(j) {
			return b("/current_customer", j)
		};
		c.password = function(j, l, k) {
			return h("/current_user/password", {
				old_password: j,
				new_password: l
			}, k)
		};
		c.user_password = function(l, k, j) {
			return h("/user/" + l + "/password", {
				new_password: k
			}, j)
		};
		c.edge_check = function(k, j) {
			return b("/content/edge_check", {
				url: k
			}, j)
		};
		c.backend_check = function(j, k, l) {
			return b("/service/" + j + "/version/" + k + "/backend/check_all", {}, l)
		};
		c.edge_check = function(k, j) {
			return b("/content/edge_check", {
				url: k
			}, j)
		};
		c.on = function(j, k, l) {
			return i.on(j + ":" + k, l)
		};
		c.off = function(j, k, l) {
			return i.off(j + ":" + k, l)
		};
		c.success = function(j, k) {
			return this.on("success", j, k)
		};
		c.error = function(j, k) {
			return this.on("error", j, k)
		};
		c.complete = function(j, k) {
			return this.on("complete", j, k)
		};
		c.unassume = function(j) {
			return h("/admin/unassume", {}, j)
		};
		c.poll = function(k, j, l) {
			if (l == null) {
				k.fetch()
			}
			return k._poll_id = setInterval((function() {
				return k.fetch()
			}), j)
		};
		c.unpoll = function(j) {
			if (j._poll_id == null) {
				return
			}
			return clearInterval(j._poll_id)
		};
		c.fetch_all = function(k, z) {
			var l, t, v, j, y, u, n, q, x, w, r, s, p, o;
			s = [k.length, 0, false], q = s[0], t = s[1], y = s[2];
			w = (function() {
				var B, A, m;
				m = [];
				for (B = 0, A = k.length; B < A; B++) {
					n = k[B];
					m.push(null)
				}
				return m
			})();
			if (z == null) {
				z = {}
			}
			x = function(A, m) {
				w[m] = A;
				if (!--q) {
					if (z.success != null) {
						return z.success(w)
					}
				}
			};
			l = function() {
				if (++t !== k.length) {
					return
				}
				if (z.complete != null) {
					return z.complete(w)
				}
			};
			v = function() {
				if (y) {
					return
				}
				y = true;
				if (z.error == null) {
					return
				}
				return z.error.apply(z.error, arguments)
			};
			j = function(m) {
				var A;
				A = {
					success: function(B) {
						return x(B, m)
					},
					error: v,
					complete: function() {
						return l()
					}
				};
				if (_.isFunction(k[m])) {
					return k[m](A)
				}
				return k[m].fetch(A)
			};
			o = [];
			for (u = r = 0, p = k.length; 0 <= p ? r < p : r > p; u = 0 <= p ? ++r : --r) {
				o.push(j(u))
			}
			return o
		};
		return c
	})()
}).call(this);
(function() {
	var b, d = [].slice,
		a = {}.hasOwnProperty,
		c = function(h, f) {
			for (var e in f) {
				if (a.call(f, e)) {
					h[e] = f[e]
				}
			}
			function g() {
				this.constructor = h
			}
			g.prototype = f.prototype;
			h.prototype = new g();
			h.__super__ = f.prototype;
			return h
		};
	window.FUI = {
		util: {},
		anim: {}
	};
	FUI.mixOf = function() {
		var l, j, k, f, e, g, i, h;
		j = arguments[0], e = 2 <= arguments.length ? d.call(arguments, 1) : [];
		l = (function(m) {
			c(n, m);

			function n() {
				return n.__super__.constructor.apply(this, arguments)
			}
			return n
		})(j);
		for (i = e.length - 1; i >= 0; i += -1) {
			f = e[i];
			h = f.prototype;
			for (g in h) {
				k = h[g];
				l.prototype[g] = k
			}
		}
		return l
	};
	$.fn.cid = function() {
		var f, e;
		if ((f = this.attr("data-cid")) != null) {
			return f
		}
		e = this.parents("[data-cid]").first();
		if (e == null) {
			return null
		}
		return e.attr("data-cid")
	};
	$.cid = function(e, f) {
		var g;
		if ((e != null) && _.isString(e)) {
			g = e
		} else {
			if ((e != null) && (e.cid != null)) {
				g = e.cid
			} else {
				return null
			}
		}
		return $("[data-cid=" + g + "]", f)
	};
	$.fn.fadeToggle = function(e) {
		if (this.is(":visible")) {
			return this.fadeOut(e)
		} else {
			return this.fadeIn(e)
		}
	};
	Handlebars.registerHelper("logged_in_user_can_do", function(f, e) {
		if (Sierra.logged_in_user_can_do(f)) {
			return e.fn(this)
		} else {
			if (e.inverse != null) {
				return e.inverse(this)
			}
		}
	});
	Handlebars.registerHelper("can_do", function(f, e) {
		if (Sierra.can_do(f)) {
			return e.fn(this)
		} else {
			if (e.inverse != null) {
				return e.inverse(this)
			}
		}
	});
	Handlebars.registerHelper("unless_role", function(f, e) {
		if (!Sierra.is_role(f)) {
			return e.fn(this)
		} else {
			if (e.inverse != null) {
				return e.inverse(this)
			}
		}
	});
	Handlebars.registerHelper("env", function(f, e) {
		if (Sierra.env === f) {
			return e.fn(this)
		} else {
			if (e.inverse != null) {
				return e.inverse(this)
			}
		}
	});
	b = function(h) {
		var m, o, l, e, q, p, j, k, g, f;
		if (_.isNaN(e = parseFloat(h))) {
			return "NaN"
		}
		k = [e.toString(), [], 0], p = k[0], q = k[1], m = k[2];
		g = p.split("."), p = g[0], o = g[1];
		for (l = j = f = p.length - 1; f <= 0 ? j <= 0 : j >= 0; l = f <= 0 ? ++j : --j) {
			q.unshift(p.charAt(l));
			if ((++m) % 3 === 0 && l !== 0) {
				q.unshift(",")
			}
		}
		if (o == null) {
			return q.join("")
		}
		if (o.length === 1) {
			o += "0"
		}
		return q.join("") + ("." + o)
	};
	Handlebars.registerHelper("format", function(f, e) {
		if (!((f != null) && (_.isNumber(f) || _.isString(f)))) {
			return "0"
		}
		return b(f)
	});
	Handlebars.registerHelper("usd", function(f, e) {
		var g;
		g = parseFloat(f);
		if (g === null || typeof g === "undefined" || _.isNaN(g)) {
			return "0"
		}
		if (g < 0) {
			return "-$" + (b(-g))
		} else {
			return "$" + (b(g))
		}
	});
	Handlebars.registerHelper("extras_suffix", function(e, f) {
		var g;
		g = parseFloat(f);
		if (_.isNaN(g)) {
			return ""
		}
		if (g < 0) {
			return "Credit"
		} else {
			return e
		}
	});
	Handlebars.registerHelper("console", function(f, e) {
		return console.log(f)
	});
	Handlebars.registerHelper("force_leading_slash", function(e) {
		if (e.indexOf("/") === 0) {
			return e
		}
		return "/" + e
	});
	Handlebars.registerHelper("prettify_sumologic_url", function(e) {
		var f, g;
		f = /^https?:\/\/((collectors|www)\.)?sumologic.(com|net)\/(receiver\/)?v\d+\/http\//;
		g = e.replace(f, "").substring(0, 50);
		if (!(g.length < e.length)) {
			return g
		}
		return new Handlebars.SafeString("" + (_.escape(g)) + "&hellip;")
	});
	Handlebars.registerHelper("prettify_splunk_storm_endpoint", function(e) {
		return e.replace(/^(tcp|udp)\.([^.]+)\.data\.splunkstorm\.com$/, "$2")
	});
	Handlebars.registerHelper("yes_no", function(e) {
		if (parseInt(e) === 1) {
			return "yes"
		} else {
			return "no"
		}
	});
	Handlebars.registerHelper("colorBoolean", function(f, e) {
		if (f) {
			return new Handlebars.SafeString('<span style="color: green">Yes</span>')
		} else {
			return new Handlebars.SafeString('<span style="color: red">No</span>')
		}
	});
	Handlebars.registerHelper("form", function() {
		var e, f;
		if (arguments.length > 1) {
			e = Array.prototype.shift.call(arguments)
		} else {
			e = ""
		}
		f = Array.prototype.shift.call(arguments);
		return '<form class="form-horizontal ' + e + '" role="form" method="post">' + (f.fn(this)) + "</form>"
	});
	Handlebars.registerHelper("getGlobal", function(g) {
		var f, j, i, e, h;
		j = window;
		h = g.split(".");
		for (i = 0, e = h.length; i < e; i++) {
			f = h[i];
			j = j[f]
		}
		return j
	});
	Handlebars.registerHelper("ifEqual", function(g, f, e) {
		if (g === f) {
			return e.fn(this)
		}
		return e.inverse(this)
	});
	FUI.format_number = b;
	FUI.format_si = function(f, k) {
		if (!_.isNumber(f)) {
			return "---"
		}
		var l = "";
		if (f >= 1000) {
			var h = "KMGTPEZY";
			for (var g = 0; g < h.length; g++) {
				var j = Math.pow(10, (g + 1) * 3);
				if (f >= j && f < Math.pow(10, (g + 2) * 3)) {
					f = f / j;
					l = h[g];
					break
				}
			}
		}
		var e = k - (new String(Math.floor(f))).length;
		return f.toFixed(Math.max(0, e)) + l
	};
	FUI.parseURL = function(f) {
		var e = document.createElement("a");
		e.href = f;
		return {
			source: f,
			protocol: e.protocol.replace(":", ""),
			host: e.hostname,
			port: e.port,
			query: e.search,
			params: (function() {
				var j = {},
					h = e.search.replace(/^\?/, "").split("&"),
					g = h.length,
					k = 0,
					l;
				for (; k < g; k++) {
					if (!h[k]) {
						continue
					}
					l = h[k].split("=");
					j[l[0]] = l[1]
				}
				return j
			})(),
			file: (e.pathname.match(/\/([^\/?#]+)$/i) || [, ""])[1],
			hash: e.hash.replace("#", ""),
			path: e.pathname.replace(/^([^\/])/, "/$1"),
			relative: (e.href.match(/tps?:\/\/[^\/]+(.+)/) || [, ""])[1],
			segments: e.pathname.replace(/^\//, "").split("/")
		}
	};
	FUI.format_bytes = function(e, h, m) {
		var l, g, f, k, j;
		if (h == null) {
			h = 1
		}
		if (m == null) {
			m = false
		}
		if (e < 1024) {
			return "" + e + " B"
		}
		j = ["KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];
		for (g in j) {
			f = j[g];
			l = Math.pow(1024, (g | 0) + 1);
			if (e >= l && e < Math.pow(1024, (g | 0) + 2)) {
				k = e / l;
				if (!((k | 0) === k && !m)) {
					k = k.toFixed(h)
				}
				return "" + k + " " + f
			}
		}
	};
	FUI.active_parent = null;
	FUI.active_child = null;
	$(window).on("mousedown", "i, .caret, .btn", function(f) {
		if ($(f.target).is("i, .caret")) {
			return FUI.active_parent = $(f.target).parent(".btn")
		} else {
			return FUI.active_child = $("i, .caret", f.target)
		}
	});
	$(window).on("mouseup", "i, .caret, .btn", function(g) {
		var h, f;
		if (((f = FUI.active_parent) != null) && f.is(g.target)) {
			return f.click()
		} else {
			if (((h = FUI.active_child) != null) && h.is(g.target)) {
				return h.click()
			}
		}
	});
	$(window).on("mouseup", function() {
		FUI.active_parent = null;
		return FUI.active_child = null
	});
	FUI.ConfirmDialog = (function() {
		var e, g;

		function f() {}
		g = null;
		e = function() {
			if (g != null) {
				return g
			}
			g = new Sierra.Views.Confirm();
			FUI.render(g);
			return g
		};
		f.form = function() {
			return e().form
		};
		f.flash = function(i, h) {
			return e().flash(i, h)
		};
		f.show = function(h) {
			return e().confirm(h)
		};
		return f
	})();
	FUI.confirm = function(f, e, g) {
		return FUI.ConfirmDialog.show({
			title: f,
			body: e,
			callback: g
		})
	};
	FUI.confirm_delete = function(g, h) {
		var e, f;
		if ((f = g.get("name") || g.get("email") || g.get("id") || null) != null) {
			e = "Are you sure you want to delete <strong>" + (_.escape(f)) + "</strong>?"
		} else {
			e = "Are you sure you want to delete?"
		}
		return FUI.ConfirmDialog.show({
			title: "Confirm Delete",
			body: e,
			escaped: true,
			callback: function() {
				if (h != null) {
					return h(g, FUI.ConfirmDialog.form())
				}
			}
		})
	};
	FUI.Composer = (function() {
		var l, k, h, g, j, e, f;

		function i() {}
		h = "body #layout";
		e = "head title";
		k = null;
		f = function(m, p, o) {
			var r, n, q;
			r = {};
			for (n in o) {
				q = o[n];
				r[n] = Sierra.templates.get(q)
			}
			return Sierra.templates.get(m)(p, {
				partials: r
			})
		};
		l = function(n) {
			var p, o, m;
			if (n.id != null) {
				m = "#" + n.id
			} else {
				if (n.className != null) {
					m = ((function() {
						var t, r, s, q;
						s = n.className.split(/\s+/);
						q = [];
						for (t = 0, r = s.length; t < r; t++) {
							o = s[t];
							q.push("." + o)
						}
						return q
					})()).join("")
				}
			}
			p = $(m);
			if (p.size() === 0) {
				return null
			}
			return p
		};
		g = function(m) {
			var n;
			if (!((m.layout != null) && k !== m.layout)) {
				return
			}
			k = m.layout;
			m = new Sierra.Layouts[k]({
				model: Sierra
			});
			m.render();
			if ((n = l(m)) == null) {
				return
			}
			return n.replaceWith(m.el)
		};
		j = function(m) {
			var n;
			if (m.title == null) {
				return
			}
			n = _.isFunction(m.title) ? m.title() : m.title;
			return $(e).text("Fastly.com - " + n)
		};
		i.show_page_loading = function() {
			var m, n;
			if (!((n = $("#wrapper")).size() > 0)) {
				return
			}
			if ((m = $(".loading-overlay", n)).is(":visible")) {
				return
			}
			n.addClass("loading");
			m.css({
				width: "" + (n.width() - 2) + "px",
				height: "" + (n.height() - 2) + "px",
				top: "" + (n.position().top + 1) + "px"
			});
			return m.fadeIn(175)
		};
		i.hide_page_loading = function() {
			var m, n;
			if (!((n = $("#wrapper")).size() > 0)) {
				return
			}
			if (!(m = $(".loading-overlay", n)).is(":visible")) {
				return
			}
			return m.fadeOut(175, function() {
				return n.removeClass("loading")
			})
		};
		i.app_loading = function() {
			return $("#layout").html(Sierra.templates.get("sierra/loading.html"))
		};
		i.render = function(m, p, o) {
			var n;
			if (_.isString(m)) {
				return f(m, p, o)
			}
			g(m);
			j(m);
			m.render();
			if ((n = l(m)) == null) {
				return
			}
			FUI.Composer.hide_page_loading();
			if (!n.is(m.el)) {
				n.replaceWith(m.el)
			}
			if (this.old_view) {
				this.old_view.trigger_hidden()
			}
			m.trigger_ready();
			return this.old_view = m
		};
		return i
	})();
	FUI.render = FUI.Composer.render;
	FUI.app_loading = FUI.Composer.app_loading;
	FUI.show_page_loading = FUI.Composer.show_page_loading;
	FUI.hide_page_loading = FUI.Composer.hide_page_loading;
	FUI.util.Singelton = (function() {
		var e;

		function f() {}
		e = null;
		f.get = function() {
			if (e == null) {
				e = new this;
				if (e.init != null) {
					e.init()
				}
			}
			return e
		};
		return f
	})();
	FUI.util.Date = (function(n) {
		var h, m, j, g, e, i, k, f;
		c(l, n);

		function l() {
			return l.__super__.constructor.apply(this, arguments)
		}
		e = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
		k = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
		h = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday"];
		i = ["Sun", "Mon", "Tue", "Wed", "Thur", "Fri", "Sat"];
		g = function(o) {
			if (o < 10) {
				return "0" + o
			} else {
				return "" + o
			}
		};
		f = {
			d: function(o) {
				return g(o.getUTCDate())
			},
			D: function(o) {
				return i[o.getUTCDay()]
			},
			j: function(o) {
				return o.getUTCDate()
			},
			l: function(o) {
				return h[o.getUTCDay()]
			},
			S: function(o) {
				var p;
				p = o.getUTCDate() % 10;
				switch (p) {
				case 1:
					return "st";
				case 2:
					return "nd";
				case 3:
					return "rd";
				default:
					return "th"
				}
			},
			w: function(o) {
				return o.getDay()
			},
			F: function(o) {
				return e[o.getUTCMonth()]
			},
			m: function(o) {
				return g(o.getUTCMonth() + 1)
			},
			M: function(o) {
				return k[o.getUTCMonth()]
			},
			n: function(o) {
				return o.getUTCMonth() + 1
			},
			Y: function(o) {
				return o.getUTCFullYear()
			},
			y: function(o) {
				return ("" + o.getUTCFullYear()).slice(2)
			},
			a: function(o) {
				if (o.getUTCHours() < 12) {
					return "am"
				} else {
					return "pm"
				}
			},
			A: function(o) {
				if (o.getUTCHours() < 12) {
					return "AM"
				} else {
					return "PM"
				}
			},
			g: function(o) {
				var p;
				p = o.getUTCHours();
				if (p === 0) {
					return "12"
				} else {
					return p % 12
				}
			},
			G: function(o) {
				return o.getUTCHours()
			},
			h: function(o) {
				var p;
				p = o.getUTCHours() % 12;
				if (p === 0) {
					return "12"
				} else {
					return g(p % 12)
				}
			},
			H: function(o) {
				return g(o.getUTCHours())
			},
			i: function(o) {
				return g(o.getUTCMinutes())
			},
			s: function(o) {
				return g(o.getUTCSeconds())
			}
		};
		j = {
			d: function(o) {
				return g(o.getDate())
			},
			D: function(o) {
				return i[o.getDay()]
			},
			j: function(o) {
				return o.getDate()
			},
			l: function(o) {
				return h[o.getDay()]
			},
			S: function(o) {
				var p;
				p = o.getDate() % 10;
				switch (p) {
				case 1:
					return "st";
				case 2:
					return "nd";
				case 3:
					return "rd";
				default:
					return "th"
				}
			},
			w: function(o) {
				return o.getDay()
			},
			F: function(o) {
				return e[o.getMonth()]
			},
			m: function(o) {
				return g(o.getMonth() + 1)
			},
			M: function(o) {
				return k[o.getMonth()]
			},
			n: function(o) {
				return o.getMonth() + 1
			},
			Y: function(o) {
				return o.getFullYear()
			},
			y: function(o) {
				return ("" + o.getFullYear()).slice(2)
			},
			a: function(o) {
				if (o.getHours() < 12) {
					return "am"
				} else {
					return "pm"
				}
			},
			A: function(o) {
				if (o.getHours() < 12) {
					return "AM"
				} else {
					return "PM"
				}
			},
			g: function(o) {
				var p;
				p = o.getHours();
				if (p === 0) {
					return "12"
				} else {
					return p % 12
				}
			},
			G: function(o) {
				return o.getHours()
			},
			h: function(o) {
				var p;
				p = o.getHours() % 12;
				if (p === 0) {
					return "12"
				} else {
					return g(p % 12)
				}
			},
			H: function(o) {
				return g(o.getHours())
			},
			i: function(o) {
				return g(o.getMinutes())
			},
			s: function(o) {
				return g(o.getSeconds())
			}
		};
		m = function(o, v, u) {
			var t, s, p, w, q, r;
			if (u == null) {
				u = true
			}
			w = "";
			p = u ? f : j;
			for (s = q = 0, r = v.length; 0 <= r ? q < r : q > r; s = 0 <= r ? ++q : --q) {
				t = v.charAt(s);
				w += p[t] != null ? p[t](o) : t
			}
			return w
		};
		l.format = function(o, p) {
			return m(o, p)
		};
		l.parse = function(p) {
			var o;
			if (_.isNumber(p)) {
				return p
			}
			if (navigator.appVersion.indexOf("MSIE") === -1) {
				return window.Date.parse(p)
			}
			o = p.match(/^(\d+)-(\d+)-(\d+)T/);
			return window.Date.parse("" + o[2] + "-" + o[3] + "-" + o[1])
		};
		l.range = function(p, w, v) {
			var o, x, u, y, s, t, r, q;
			if (_.isString(p)) {
				p = FUI.util.Date.parse(p)
			}
			s = [];
			r = [new window.Date(p), new window.Date()], t = r[0], o = r[1];
			q = [o.getFullYear(), o.getMonth()], u = q[0], x = q[1];
			while (t.getFullYear() < u || (t.getFullYear() === u && t.getMonth() <= x)) {
				y = {
					date: m(t, "F Y"),
					value: m(t, "n/Y")
				};
				if ((w != null) && (v != null) && w === m(t, "Y") && v === m(t, "n")) {
					y.selected = true
				}
				s.push(y);
				t.setMonth(t.getMonth() + 1)
			}
			return s.reverse()
		};
		return l
	})(FUI.util.Singelton);
	FUI.date = function(e, f) {
		if (!_.isDate(e)) {
			e = new Date(FUI.util.Date.parse(e))
		}
		if (f == null) {
			return e
		}
		return FUI.util.Date.format(e, f)
	};
	FUI.date_to_utc = function(e) {
		return new Date(e.getUTCFullYear(), e.getUTCMonth(), e.getUTCDate(), e.getUTCHours(), e.getUTCMinutes(), e.getUTCSeconds())
	};
	FUI.util.Validator = (function(g) {
		var f;
		c(e, g);

		function e() {
			return e.__super__.constructor.apply(this, arguments)
		}
		f = {
			integer: /^[-+]?[0-9]+$/,
			ip: /^(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})|(\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*)$/,
			url: /[-a-zA-Z0-9@:%_\+.~#?&//=]{2,256}\.[a-z]{2,4}\b(\/[-a-zA-Z0-9@:%_\+.~#?&//=]*)?/gi
		};
		e.rules = {
			exists: {
				test: function(h) {
					return (h != null) && h.length > 0
				},
				message: "Required"
			},
			integer: {
				test: function(h) {
					return h.match(f.integer)
				},
				message: "Must be an integer"
			},
			integer_or_null: {
				test: function(h) {
					return h.match(f.integer) || h === ""
				},
				message: "Must be either an integer or empty"
			},
			smallint: {
				test: function(h) {
					return h.match(f.integer) && h >= -32768 && h <= 32767
				},
				message: "Must be a small integer"
			},
			numeric: {
				test: function(h) {
					return h.match(/^[-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?$/)
				},
				message: "Must be a number"
			},
			ip: {
				test: function(h) {
					return h.match(f.ip)
				},
				message: "Must be ipv4 or ipv6"
			},
			address: {
				test: function(h) {
					return h.match(f.ip) || h.match(f.url)
				},
				message: "Must be an address"
			},
			url: {
				test: function(h) {
					return h.match(f.url)
				},
				message: "Must be a valid url"
			},
			length: {
				test: function(h, i) {
					return (h != null) && h.length === i
				}
			},
			min: {
				test: function(h, i) {
					return (h != null) && h.length >= i
				},
				message: "%label must be at least %arg characters in length"
			},
			max: {
				test: function(h, i) {
					return (h != null) && h.length <= i
				},
				message: "%label must be at most %arg characters in length"
			},
			not: {
				test: function(h, i) {
					return h !== i
				},
				message: "%label cannot be %arg"
			},
			match: {
				test: function(h, j, i) {
					return $("[name=" + j + "]", i).val() === h
				},
				message: "%label does not match"
			},
			filesize: {
				test: function(h, l, j, k) {
					var i;
					if (k.type !== "file") {
						return true
					}
					i = k.files;
					if (i == null) {
						return true
					}
					if (i.length < 1 || i[0].size <= l) {
						return true
					}
					return false
				},
				message: "%label cannot exceed %arg bytes"
			},
			lte: {
				test: function(h, j, i) {
					if (j.match(/^\d+$/)) {
						return h <= parseInt(j)
					} else {
						return h <= parseInt($("[name=" + j + "]", i).val())
					}
				},
				message: "must be <= %arg"
			},
			gte: {
				test: function(h, j, i) {
					if (j.match(f.integer)) {
						return h >= parseInt(j)
					} else {
						return h >= parseInt($("[name=" + j + "]", i).val())
					}
				},
				message: "must be >= %arg"
			}
		};
		e.prototype.test = function(o, n, h, l, j) {
			var i, k, m;
			if (o.nodeName === "SELECT" && !_.isUndefined($("option:selected", o).attr("null"))) {
				m = null
			} else {
				m = $(o).val()
			}
			if ($.trim(m) === "" && j) {
				return
			}
			k = $(o).attr("data-message");
			if (k == null) {
				if ((i = $(o).siblings("label").html()) == null) {
					i = $(o).attr("name")
				}
				k = $.trim(n.message.replace("%label", i).replace("%arg", h))
			}
			if (!n.test(m, h, l, o)) {
				$(o).focus();
				throw {
					message: k,
					field: o
				}
			}
		};
		e.prototype.validate = function(j) {
			var t, q, i, n, h, o, s, l, p, m, k;
			m = $("input[data-validate],select[data-validate],textarea[data-validate]", j);
			k = [];
			for (l = 0, p = m.length; l < p; l++) {
				q = m[l];
				if (($(q).attr("disabled") != null) || !$(q).is(":visible")) {
					continue
				}
				s = $(q).attr("data-validate").split(/\s*,\s*/);
				k.push((function() {
					var w, u, r, v;
					v = [];
					for (w = 0, u = s.length; w < u; w++) {
						h = s[w];
						r = h.split(/\(|\)/), i = r[0], t = r[1];
						if (i.charAt(i.length - 1) === "?") {
							n = true;
							i = i.slice(0, i.length - 1)
						} else {
							n = false
						}
						o = FUI.util.Validator.rules[i];
						if (o == null) {
							throw "Validation rule '" + i + "' not found"
						}
						v.push(this.test(q, o, t, j, n))
					}
					return v
				}).call(this))
			}
			return k
		};
		return e
	})(FUI.util.Singelton);
	FUI.util.Events = (function() {
		function e() {
			this.event_listeners = {}
		}
		e.prototype.destroy = function() {
			return this.event_listeners = null
		};
		e.prototype.get_event_bin = function(f) {
			var g;
			return (g = this.event_listeners)[f] != null ? g[f] : g[f] = []
		};
		e.prototype.clear_event_bin = function(f) {
			return this.event_listeners[f] = null
		};
		e.prototype.on = function(f, h) {
			var g;
			g = this.get_event_bin(f);
			if (_.indexOf(g, h) > -1) {
				return
			}
			return g.push(h)
		};
		e.prototype.off = function(g, i) {
			var h, f;
			h = this.get_event_bin(g);
			if (i == null) {
				return this.clear_event_bin(g)
			}
			if (!((f = _.indexOf(h, i)) > 1)) {
				return
			}
			return h.splice(f, 1)
		};
		e.prototype.trigger = function(j) {
			var h, l, n, k, m, g, f;
			if (!((l = this.get_event_bin(j)).length > 0)) {
				return
			}
			h = (function() {
				var p, o, i;
				i = [];
				for (k = p = 1, o = arguments.length; 1 <= o ? p < o : p > o; k = 1 <= o ? ++p : --p) {
					i.push(arguments[k])
				}
				return i
			}).apply(this, arguments);
			f = [];
			for (m = 0, g = l.length; m < g; m++) {
				n = l[m];
				f.push(n.apply(this, h))
			}
			return f
		};
		return e
	})();
	FUI.Element = (function(f) {
		c(e, f);

		function e(g, i, h) {
			this.selector = g;
			this.scope = i;
			this.options = h;
			e.__super__.constructor.call(this);
			_.defaults((this.options != null ? this.options : this.options = {}), this.default_options());
			this.listeners = [];
			this.set_element()
		}
		e.prototype.destroy = function() {
			e.__super__.destroy.call(this);
			return delete this.el
		};
		e.prototype.default_options = function() {
			return {}
		};
		e.prototype.attr = function(g, h) {
			if (h == null) {
				return this.el.attr(g)
			}
			return this.el.attr(g, h)
		};
		e.prototype.set_element = function() {
			if (this.el != null) {
				return this.el
			}
			this.el = $(this.selector, this.scope);
			if (!(this.el.size() > 0)) {
				return false
			}
			return this.configure_element()
		};
		e.prototype.configure_element = function() {};
		e.prototype.find = function(g) {
			var j, k, i, h;
			if (arguments.length > 1) {
				h = [];
				for (k = 0, i = arguments.length; k < i; k++) {
					j = arguments[k];
					h.push($(j, this.el))
				}
				return h
			} else {
				return $(g, this.el)
			}
		};
		e.prototype.val = function() {
			if (!this.el[0].tagName.toLowerCase().match("/input|select|textarea/")) {
				return null
			}
			return this.el.val()
		};
		e.prototype.disable = function(g) {
			if (g == null) {
				return this.el.attr("disabled", "disabled")
			} else {
				return $(g, this.el).attr("disabled", "disabled")
			}
		};
		e.prototype.enable = function(g) {
			if (g == null) {
				return this.el.removeAttr("disabled")
			} else {
				return $(g, this.el).removeAttr("disabled")
			}
		};
		e.prototype.is_enabled = function(g) {
			var h;
			if (arguments.length > 1) {
				return _.reduce((function() {
					var k, j, i;
					i = [];
					for (k = 0, j = arguments.length; k < j; k++) {
						h = arguments[k];
						i.push(!$("" + h + ":[disabled]").size())
					}
					return i
				}).apply(this, arguments), function(j, i) {
					return j && i
				})
			} else {
				return !$("" + g + ":[disabled]").size()
			}
		};
		e.prototype.is_visible = function() {
			return this.el.is(":visible")
		};
		e.prototype.scroll_to = function(h, g) {
			if (h == null) {
				h = 400
			}
			if (g == null) {
				g = 80
			}
			return FUI.Anim.scroll(this.el, h, g)
		};
		e.prototype.child = function(g) {
			return new FUI.Element(g, this.el)
		};
		e.prototype.parent = function(g) {
			return new FUI.Element(g, this.el.parentNode)
		};
		e.prototype.cid = function(g) {
			if (g == null) {
				return this.el.cid()
			}
			return this.el.attr("data-cid", g)
		};
		return e
	})(FUI.util.Events);
	FUI.Anim = (function() {
		var i, j, e, h, g;

		function f() {}
		f.blink = function(m, l) {
			var k;
			k = $(m);
			if (k.data("FUI.Anim.blink") != null) {
				return
			}
			k.data("FUI.Anim.blink", true);
			if (l == null) {
				l = 165
			}
			return k.animate({
				opacity: "0.4"
			}, l, function() {
				return k.animate({
					opacity: "1"
				}, l, function() {
					return k.animate({
						opacity: "0.4"
					}, l, function() {
						return k.animate({
							opacity: "1"
						}, l, function() {
							return k.removeData("FUI.Anim.blink")
						})
					})
				})
			})
		};
		j = false;
		f.invalid = function(l) {
			var k;
			if (j) {
				return
			}
			j = true;
			k = $(l);
			return k.animate({
				marginRight: "7px"
			}, 25, function() {
				return k.animate({
					marginRight: "0px"
				}, 25, function() {
					return k.animate({
						marginRight: "7px"
					}, 25, function() {
						return k.animate({
							marginRight: "0px"
						}, 25, function() {
							return setTimeout((function() {
								var m;
								return m = false
							}), 500)
						})
					})
				})
			})
		};
		i = {
			delay: 4000,
			duration: 1750,
			color: "#def2df"
		};
		f.highlight = function(n, m) {
			var k, l;
			k = $(n);
			if (m == null) {
				m = {}
			}
			_.defaults(m, i);
			l = k.css("background-color");
			k.css("background", m.color);
			return setTimeout((function() {
				return k.animate({
					backgroundColor: l
				}, m.duration)
			}), m.delay)
		};
		g = [false,
		{
			duration: 1000,
			offset: 20
		}], h = g[0], e = g[1];
		f.scroll = function(l, m, n, o) {
			var k;
			if (h) {
				return
			}
			if (m == null) {
				m = e.duration
			}
			if (n == null) {
				n = e.offset
			}
			if (o == null) {
				o = function() {}
			}
			h = true;
			k = function() {
				o();
				return h = false
			};
			if (_.isNumber(l)) {
				return $("html,body").animate({
					scrollTop: l - n
				}, m, k)
			} else {
				return $("html,body").animate({
					scrollTop: $(l).offset().top - n
				}, m, k)
			}
		};
		return f
	})();
	FUI.http_status_to_response = {
		"200": "OK",
		"204": "No Content",
		"304": "Not Modified",
		"404": "Not Found",
		"503": "Service Unavailable",
		"100": "Continue",
		"101": "Switching Protocols",
		"102": "Processing",
		"201": "Created",
		"202": "Accepted",
		"203": "Non-Authoritative Information",
		"205": "Reset Content",
		"206": "Partial Content",
		"207": "Multi-Status",
		"208": "Already Reported",
		"226": "IM Used",
		"300": "Multiple Choices",
		"301": "Moved Permanently",
		"302": "Found",
		"303": "See Other",
		"305": "Use Proxy",
		"306": "Switch Proxy",
		"307": "Temporary Redirect",
		"308": "Permanent Redirect",
		"400": "Bad Request",
		"401": "Unauthorized",
		"402": "Payment Required",
		"403": "Forbidden",
		"405": "Method Not Allowed",
		"406": "Not Acceptable",
		"407": "Proxy Authentication Required",
		"408": "Request Timeout",
		"409": "Conflict",
		"410": "Gone",
		"411": "Length Required",
		"412": "Precondition Failed",
		"413": "Request Entity Too Large",
		"414": "Request-URI Too Long",
		"415": "Unsupported Media Type",
		"416": "Requested Range Not Satisfiable",
		"417": "Expectation Failed",
		"418": "I'm a teapot",
		"420": "Enhance Your Calm",
		"422": "Unprocessable Entity",
		"423": "Locked",
		"424": "Failed Dependency",
		"425": "Unordered Collection",
		"426": "Upgrade Required",
		"428": "Precondition Required",
		"429": "Too Many Requests",
		"431": "Request Header Fields Too Large",
		"444": "No Response",
		"449": "Retry With",
		"450": "Blocked by Windows Parental Controls",
		"451": "Unavailable For Legal Reasons",
		"499": "Client Closed Request",
		"500": "Internal Server Error",
		"501": "Not Implemented",
		"502": "Bad Gateway",
		"504": "Gateway Timeout",
		"505": "HTTP Version Not Supported",
		"506": "Variant Also Negotiates",
		"507": "Insufficient Storage",
		"508": "Loop Detected",
		"509": "Bandwidth Limit Exceeded",
		"510": "Not Extended",
		"511": "Network Authentication Required",
		"598": "Network read timeout error",
		"599": "Network connect timeout error"
	}
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	FUI.FatNav = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.default_options = function() {
			return _.extend(c.__super__.default_options.call(this), {})
		};
		c.prototype.navigate = function(h) {
			var g, i, f;
			h.preventDefault();
			if (this.main == null) {
				this.main = $(".main", this.el.parents("div.page"))
			}
			i = "#" + h.target.href.split("#")[1];
			$("li", this.el).removeClass("selected");
			f = $(h.target).parents("li").addClass("selected");
			if ((g = $("li img.arrow", this.el)).size() > 0) {
				g.remove();
				f.append(g)
			} else {
				f.append('<img class="arrow" src="images/fat-nav-arrow.png">')
			}
			$(".nav-section", this.main).hide();
			return $(i, this.main).show()
		};
		return c
	})(FUI.Element)
}).call(this);
(function() {
	var b, a = {}.hasOwnProperty,
		c = function(g, e) {
			for (var d in e) {
				if (a.call(e, d)) {
					g[d] = e[d]
				}
			}
			function f() {
				this.constructor = g
			}
			f.prototype = e.prototype;
			g.prototype = new f();
			g.__super__ = e.prototype;
			return g
		};
	FUI.Form = (function(e) {
		c(d, e);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.default_options = function() {
			return _.extend(d.__super__.default_options.call(this), {
				validator: FUI.util.Validator,
				virtual_fields: {}
			})
		};
		d.prototype.configure_element = function() {
			this.custom_rules = [];
			return this.alert = new b(this.el)
		};
		d.prototype.destroy = function() {
			d.__super__.destroy.call(this);
			return this.alert.destroy()
		};
		d.prototype.toggle_loading = function(g) {
			var f;
			f = "input, select, textarea, .btn";
			if (this.is_loading()) {
				this.enable(f)
			} else {
				this.disable(f)
			}
			if (g == null) {
				g = ""
			}
			this.find(".loading-message").text(g);
			return this.el.toggleClass("loading")
		};
		d.prototype.is_loading = function() {
			return this.el.hasClass("loading")
		};
		d.prototype.focus = function(f) {
			if (f != null) {
				return this.el.find("[name=" + f + "]").first().focus()
			} else {
				return this.el.find("[name]:visible").first().focus()
			}
		};
		d.prototype.add_rule = function(f) {
			return this.custom_rules.push(f)
		};
		d.prototype.validate = function(i) {
			var g, h, l, k, f, j;
			if (i != null) {
				i = $(i, this.el)
			} else {
				i = this.el
			}
			$(".help-inline", this.el).remove();
			$(".form-group.has-error", this.el).removeClass("has-error");
			try {
				if (this.options.validator != null) {
					this.options.validator.get().validate(i)
				}
				j = this.custom_rules;
				for (k = 0, f = j.length; k < f; k++) {
					l = j[k];
					l.apply(this)
				}
			} catch (m) {
				h = m;
				g = $(h.field).parents(".form-group");
				if (g.size() > 0) {
					g.addClass("has-error");
					$(".col-md-4", g).append('<span class="help-inline">' + h.message + "</span>")
				} else {
					this.flash(h.message)
				}
				return false
			}
			return true
		};
		d.prototype.fields = function(f) {
			var g;
			g = {};
			f = f != null ? this.el.find(f) : this.el;
			$("[name]", f).each(function(h, j) {
				if (j.nodeName === "SELECT" && !_.isUndefined($("option:selected", j).attr("null"))) {
					return g[j.name] = null
				} else {
					if ($(j).val() === "" && !_.isUndefined($(j).attr("nullable"))) {
						return g[j.name] = null
					} else {
						return g[j.name] = $.trim($(j).val())
					}
				}
			});
			return _.extend(g, this.options.virtual_fields || {})
		};
		d.prototype.field = function(f, g) {
			var h;
			h = $("[name=" + f + "]", this.el);
			if (g == null) {
				return h.val()
			}
			return h.val(g).data("has_changed", true)
		};
		d.prototype.reset = function(h) {
			var f, g;
			if ((h != null) && (h.attributes != null)) {
				h = h.serialize()
			}
			if (h != null) {
				for (f in h) {
					g = h[f];
					if (_.isBoolean(g)) {
						g = g | 0
					}
					$("[name=" + f + "]", this.el).val(g)
				}
				if (h._cid != null) {
					this.cid(h._cid)
				}
			} else {
				$("[name]", this.el).val("")
			}
			$(".alert, .help-inline", this.el).remove();
			return $(".has-error", this.el).removeClass("has-error")
		};
		d.prototype.flash = function(g, f) {
			return this.alert.set(g, f)
		};
		d.prototype.error = function(j) {
			var g, f, i;
			try {
				if (!(j && j.responseText)) {
					throw "No response date available"
				}
				g = JSON.parse(j.responseText);
				i = g.detail || g.msg
			} catch (h) {
				f = h;
				i = "An internal error has occurred, please try again."
			}
			return this.flash(i, "danger")
		};
		d.prototype.cid = function(f) {
			if (f == null) {
				return this.el.data("cid")
			}
			return this.el.data("cid", f)
		};
		return d
	})(FUI.Element);
	b = (function() {
		d.FLASH_TYPES = ["danger", "warning", "success", "info"];
		d.TEMPLATE = Handlebars.compile('<div class="row"><div class="{{ classes }}"><a class="close" data-dismiss="alert" href="#">&times;</a>{{ message }}</div></div>');

		function d(e) {
			this.parent = $(e);
			this.alert = null
		}
		d.prototype.destroy = function() {
			this.parent = null;
			return this.alert = null
		};
		d.prototype.get_html = function(g, f) {
			var e;
			e = "col-md-10 col-md-offset-1 alert alert-" + (_.indexOf(d.FLASH_TYPES, f) > -1 ? f : "danger");
			return d.TEMPLATE({
				classes: e,
				message: g
			})
		};
		d.prototype.remove_alert = function() {
			this.alert.off("closed");
			this.alert.remove();
			return this.alert = null
		};
		d.prototype.set = function(g, f) {
			var e;
			if (this.alert != null) {
				this.remove_alert()
			}
			if (!((g != null) && g !== "")) {
				return
			}
			e = this.parent.find("fieldset legend");
			if (e.size() > 0) {
				e.after(this.get_html(g, f))
			} else {
				this.parent.prepend(this.get_html(g, f))
			}
			this.alert = this.parent.find(".alert");
			return this.alert.on("closed", (function(h) {
				return function() {
					return h.remove_alert()
				}
			})(this))
		};
		return d
	})()
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	FUI.ModalForm = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.default_options = function() {
			return _.extend(c.__super__.default_options.call(this), {
				validator: FUI.util.Validator,
				virtual_fields: {}
			})
		};
		c.prototype.configure_element = function() {
			this.form = new FUI.Form("form", this.el, this.options);
			return this.el.on("shown.bs.modal", (function(e) {
				return function() {
					return e.form.focus()
				}
			})(this))
		};
		c.prototype.destroy = function() {
			c.__super__.destroy.call(this);
			return this.form.destroy()
		};
		c.prototype.show = function() {
			return this.el.modal("show")
		};
		c.prototype.hide = function() {
			return this.el.modal("hide")
		};
		c.prototype.toggle_loading = function(e) {
			this.el.toggleClass("loading");
			return this.form.toggle_loading(e)
		};
		c.prototype.is_loading = function() {
			return this.el.hasClass("loading")
		};
		c.prototype.focus = function(e) {
			return this.form.focus(e)
		};
		c.prototype.validate = function(e) {
			return this.form.validate(e)
		};
		c.prototype.fields = function(e) {
			return this.form.fields(e)
		};
		c.prototype.field = function(e, f) {
			return this.form.field(e, f)
		};
		c.prototype.reset = function(e) {
			return this.form.reset(e)
		};
		c.prototype.flash = function(f, e) {
			return this.form.flash(f, e)
		};
		c.prototype.success = function(e) {
			return this.form.success(e)
		};
		c.prototype.error = function(e) {
			return this.form.error(e)
		};
		c.prototype.cid = function(e) {
			return this.form.cid(e)
		};
		return c
	})(FUI.Element)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	FUI.SearchBox = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.default_options = function() {
			return _.extend(d.__super__.default_options.call(this), {
				model: [],
				label: "name",
				search_keys: ["name"],
				template: "fui/search_box/default.html"
			})
		};
		d.prototype.configure_element = function() {
			var e, g, f;
			this.recalc = true;
			this.click_entry = false;
			this.results = [];
			this.selected = -1;
			this.results_el = $(".search-box-results", this.el);
			if (this.results_el.size() < 1) {
				this.el.append('<div class="search-box-results"></div>');
				this.results_el = $(".search-box-results", this.el)
			}
			$("input.search-box-input").attr("autocomplete", "off");
			this.el.on("keydown", "input.search-box-input", (function(h) {
				return function(i) {
					return h.navigate(i)
				}
			})(this));
			this.el.on("keyup", "input.search-box-input", (function(h) {
				return function(i) {
					return h.search(i)
				}
			})(this));
			this.el.on("focus", "input.search-box-input", (function(h) {
				return function(i) {
					h.el.addClass("focus");
					return h.original_label = $(i.target).val()
				}
			})(this));
			this.el.on("blur", "input.search-box-input", (function(h) {
				return function(i) {
					if (h.click_entry) {
						return h.click_entry = false
					}
					h.el.removeClass("focus");
					h.results_el.hide();
					return $(i.target).val(h.original_label)
				}
			})(this));
			this.el.on("mouseup", "input.search-box-input", function(h) {
				return $(h.target).select()
			});
			this.state_el = $(".search-box-state", this.el);
			if (this.state_el.size() < 1) {
				f = [this.el.attr("data-name"), this.el.attr("data-value")], e = f[0], g = f[1];
				this.el.append('<input class="search-box-state" type="hidden" name="' + e + '" value="' + g + '">');
				this.state_el = $(".search-box-state", this.el)
			}
			this.state_el.val(this.el.attr("data-value"));
			this.results_el.on("mousedown", ".search-box-entry", (function(h) {
				return function(i) {
					h.click_entry = true;
					return i.stopPropagation()
				}
			})(this));
			this.results_el.on("mouseup", ".search-box-entry", (function(h) {
				return function(j) {
					var i;
					j.stopPropagation();
					i = $(j.target);
					if (!i.hasClass("search-box-entry")) {
						i = i.parents(".search-box-entry")
					}
					return h.select_entry(i)
				}
			})(this));
			this.el.on("click", ".btn-search-box", (function(h) {
				return function() {
					if (h.results_el.is(":visible")) {
						return h.results_el.hide()
					} else {
						h.show_all();
						h.results_el.show();
						return h.results_el.scrollTop($("[data-id=" + (h.state_el.val()) + "]", h.results_el).position().top)
					}
				}
			})(this));
			return $(document).on("mouseup", (function(h) {
				return function(j) {
					var i;
					i = $(j.target);
					if (!(i.is(h.el) || i.parents(".search-box").size() > 0)) {
						return h.results_el.hide()
					}
				}
			})(this))
		};
		d.prototype.set_model = function(e) {
			return this.options.model = e
		};
		d.prototype.set_value = function(e) {
			return $(".search-box-input", this.el).val(e)
		};
		d.prototype.set_results = function(f) {
			var g, e;
			g = {
				results: f
			};
			if (Sierra.can_do("internal")) {
				g.admin = true
			}
			e = FUI.render(this.options.template, g);
			return this.results_el.html(e)
		};
		d.prototype.show_all = function() {
			var g, e, f;
			if (this.options.model.sort != null) {
				this.options.model.sort()
			}
			f = this.options.model.serialize();
			g = {
				all: f
			};
			if (Sierra.can_do("internal")) {
				g.admin = true
			}
			e = FUI.render(this.options.template, g);
			return this.results_el.html(e)
		};
		d.prototype.search = function(g) {
			var f;
			if (!this.recalc) {
				return this.recalc = true
			}
			f = _.isObject(g) ? g.target.value : g;
			this.results = this.options.model.search({
				fields: this.options.search_keys,
				query: f,
				default_sort_key: this.options.label
			});
			this.selected = -1;
			if (!(this.results.length > 0)) {
				return this.results_el.hide()
			}
			this.set_results(this.results);
			this.selected = 0;
			$(".search-box-entry:first-child", this.results_el).addClass("selected");
			if (!this.results_el.is(":visible")) {
				return this.results_el.toggle()
			}
		};
		d.prototype.select_entry = function(e) {
			if (!(e.size() > 0)) {
				return
			}
			this.original_label = e.attr("data-label");
			$(".search-box-input", this.el).val(e.attr("data-label")).blur();
			this.results_el.hide();
			this.state_el.val(e.attr("data-id"));
			return this.state_el.trigger("change")
		};
		d.prototype.navigate = function(m) {
			var n, j, l, i, g, k, f;
			if (!_.include([9, 13, 27, 38, 40], m.keyCode)) {
				this.recalc = true;
				return
			}
			this.recalc = false;
			if (m.keyCode === 9 && this.selected !== -1) {
				this.select_entry($(".search-box-entry.selected", this.results_el));
				return
			}
			m.preventDefault();
			if (!(this.results.length > 0 && this.results_el.is(":visible"))) {
				return
			}
			if (m.keyCode === 27) {
				return $(".search-box-input", this.el).blur()
			}
			if (m.keyCode === 13) {
				return this.select_entry($(".search-box-entry.selected", this.results_el))
			}
			if (m.keyCode === 38) {
				this.selected = Math.max(0, this.selected - 1);
				j = $(".search-box-entry", this.results_el).removeClass("selected").get(this.selected);
				if (j != null) {
					$(j).addClass("selected")
				}
			} else {
				if (m.keyCode === 40) {
					this.selected = Math.min(this.results.length - 1, this.selected + 1);
					j = $(".search-box-entry", this.results_el).removeClass("selected").get(this.selected);
					if (j != null) {
						$(j).addClass("selected")
					}
				}
			}
			k = [this.results_el.scrollTop(), this.results_el.height()], g = k[0], i = k[1];
			f = [$(j).position().top, $(j).height() + 2], l = f[0], n = f[1];
			if (l + n > i) {
				return this.results_el.scrollTop(g + l + n - i - 2)
			} else {
				if (l < 0) {
					return this.results_el.scrollTop(g + l)
				}
			}
		};
		return d
	})(FUI.Element)
}).call(this);
(function() {
	Sierra.BrowserDebug = (function() {
		function a() {}
		a.searchString = function(f) {
			var e, h, g;
			e = 0;
			while (e < f.length) {
				h = f[e].string;
				g = f[e].prop;
				this.versionSearchString = f[e].versionSearch || f[e].identity;
				if (h) {
					if (h.indexOf(f[e].subString) !== -1) {
						return f[e].identity
					}
				} else {
					if (g) {
						return f[e].identity
					}
				}
				e++
			}
		};
		a.searchVersion = function(d) {
			var c;
			c = d.indexOf(this.versionSearchString);
			if (c === -1) {
				return
			}
			return parseFloat(d.substring(c + this.versionSearchString.length + 1))
		};
		a.dataBrowser = [{
			string: navigator.userAgent,
			subString: "Chrome",
			identity: "Chrome"
		}, {
			string: navigator.userAgent,
			subString: "OmniWeb",
			versionSearch: "OmniWeb/",
			identity: "OmniWeb"
		}, {
			string: navigator.vendor,
			subString: "Apple",
			identity: "Safari",
			versionSearch: "Version"
		}, {
			prop: window.opera,
			identity: "Opera"
		}, {
			string: navigator.vendor,
			subString: "iCab",
			identity: "iCab"
		}, {
			string: navigator.vendor,
			subString: "KDE",
			identity: "Konqueror"
		}, {
			string: navigator.userAgent,
			subString: "Firefox",
			identity: "Firefox"
		}, {
			string: navigator.vendor,
			subString: "Camino",
			identity: "Camino"
		}, {
			string: navigator.userAgent,
			subString: "Netscape",
			identity: "Netscape"
		}, {
			string: navigator.userAgent,
			subString: "MSIE",
			identity: "Explorer",
			versionSearch: "MSIE"
		}, {
			string: navigator.userAgent,
			subString: "Gecko",
			identity: "Mozilla",
			versionSearch: "rv"
		}, {
			string: navigator.userAgent,
			subString: "Mozilla",
			identity: "Netscape",
			versionSearch: "Mozilla"
		}];
		a.dataOS = [{
			string: navigator.platform,
			subString: "Win",
			identity: "Windows"
		}, {
			string: navigator.platform,
			subString: "Mac",
			identity: "Mac"
		}, {
			string: navigator.userAgent,
			subString: "iPhone",
			identity: "iPhone/iPod"
		}, {
			string: navigator.platform,
			subString: "Linux",
			identity: "Linux"
		}];
		a.browser = a.searchString(a.dataBrowser) || "unknown";
		a.version = a.searchVersion(navigator.userAgent) || a.searchVersion(navigator.appVersion) || "unknown";
		a.os = a.searchString(a.dataOS) || "unknown";
		return a
	})()
}).call(this);
(function() {
	var a, c, b, d;
	b = {
		omit_admin_actions: true,
		verbose: false,
		ajax_report_rate: 0.5
	};
	d = 0;
	c = function(h, j, f, i, g) {
		var k, e;
		k = "GA [" + h + "] -> " + j;
		if (f && i) {
			k += " (" + f + ": " + i + ")"
		}
		if (f && !i) {
			k += " (" + f + ")"
		}
		e = b.omit_admin_actions && (Sierra.user != null) && Sierra.can_do("internal");
		if (!e) {
			_gaq.push(["_trackEvent", h, j, f, i, g])
		} else {
			k += " (OMITTED)"
		}
		if (++d > 500) {
			k += " [RATE LIMITED]"
		}
		if (b.verbose && Sierra.env !== "production") {
			return console.log(k)
		}
	};
	$(window).on("hashchange", function() {
		var e;
		e = location.pathname + location.search + location.hash;
		_gaq.push(["_trackPageview", e]);
		if (b.verbose && Sierra.env !== "production") {
			return console.log("GA [HASHCHANGE] " + e)
		}
	});
	$(".navbar-nav a").on("click", function(g) {
		var f;
		f = $(g.target);
		return c("Application", "Main Menu Navigation", f.html(), f.attr("href"))
	});
	$("#user_box .logout").on("click", function(g) {
		var f;
		f = $(g.target);
		return c("Application", "Logout")
	});
	Fastly.success("/login", function() {
		return c("Application", "Login", "Success")
	});
	Fastly.error("/login", function() {
		return c("Application", "Login", "Invalid")
	});
	a = (function() {
		function e(g, f) {
			this.method = g;
			this.path = f;
			this.reset()
		}
		e.prototype.reset = function() {
			this.begin_date = null;
			this.end_date = null;
			return this
		};
		e.prototype.start = function() {
			this.begin_date = new Date();
			return this
		};
		e.prototype.finish = function(f) {
			if (f == null) {
				f = true
			}
			this.end_date = new Date();
			if (f) {
				this.report()
			}
			return this
		};
		e.prototype.report = function() {
			var f;
			if (!((this.begin_date != null) && (this.end_date != null))) {
				return
			}
			f = this.end_date.getTime() - this.begin_date.getTime();
			if (Math.random() < b.ajax_report_rate) {
				Sierra.GA.event("API Request", this.method, this.path, f)
			}
			return this.reset()
		};
		return e
	})();
	$(function() {
		$(document).on("ajaxSend", function(g, h, f) {
			return h.timer = new a(f.type, f.url).start()
		});
		return $(document).on("ajaxComplete", function(g, h, f) {
			h.timer.finish();
			return delete h.timer
		})
	});
	Sierra.GA = (function() {
		function e() {}
		e.event = c;
		e.count = function() {
			return d
		};
		e.conversion = function() {
			var j, i, g, k, h, f;
			if (Sierra.env === "development") {
				return console.log("Skipping google AdWords conversion (development)")
			}
			g = 982297532;
			h = "en";
			i = "3";
			j = "ffffff";
			k = "Wa1mCNTd-gYQvNey1AM";
			f = 0;
			return $.getScript("http://www.googleadservices.com/pagead/conversion.js")
		};
		return e
	})()
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.History = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.loadUrl = function() {
			$(".resource-modal").css("display", "");
			$(".modal-backdrop").remove();
			$(document.body).removeClass("modal-open");
			$("#window_location_href").text(window.location.href);
			return Backbone.History.prototype.loadUrl.apply(this, arguments)
		};
		return c
	})(Backbone.History)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Model = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.attrs = {};
		d.prototype.changed_only = false;
		d.prototype.date_pattern = /(\d{4})-(\d\d)-(\d\d)T(\d\d):(\d\d):(\d\d)[+-](\d\d):(\d\d)/;
		d.prototype.date_replace = "$1-$2-$3";
		d.prototype.has_many = {};
		d.prototype.has_one = {};
		d.prototype._poll_id = null;
		d.prototype._auto_load = [];
		d.prototype.initialize = function(g, j) {
			var l, i, h, k, e, f;
			if (g == null) {
				g = {}
			}
			if (j == null) {
				j = {}
			}
			d.__super__.initialize.call(this, g, j);
			k = this.has_many;
			for (h in k) {
				j = k[h];
				l = j.collection || (h.charAt(0).toUpperCase() + h.slice(1));
				this[h] = new Sierra.Collections[l]();
				this[h].url = this._create_relation_url_method(h, j);
				if (j.auto) {
					this._auto_load.push(this[h])
				}
			}
			e = this.has_one;
			f = [];
			for (h in e) {
				j = e[h];
				i = j.model || (h.charAt(0).toUpperCase() + h.slice(1));
				this[h] = new Sierra.Models[i]();
				this[h].url = this._create_relation_url_method(h, j);
				if (j.auto) {
					f.push(this._auto_load.push(this[h]))
				} else {
					f.push(void 0)
				}
			}
			return f
		};
		d.prototype._create_relation_url_method = function(f, e) {
			if (e.url != null) {
				return (function(g) {
					return function() {
						return _.map(e.url.split("/"), function(h) {
							if (h.match("^:")) {
								return g.get(h.replace(":", ""))
							} else {
								return h
							}
						}).join("/")
					}
				})(this)
			} else {
				return ((function(g) {
					return function(h) {
						return function() {
							return g.url() + h
						}
					}
				})(this))(e.path != null ? e.path : "/" + f)
			}
		};
		d.prototype.serialize = function() {
			var j, g, k, f, i, h, e;
			j = {};
			h = this.attributes;
			for (g in h) {
				i = h[g];
				if ((i != null) && (i.match != null) && i.match(this.date_pattern)) {
					j[g] = i.replace(this.date_pattern, this.date_replace)
				} else {
					j[g] = i
				}
			}
			e = this.attrs;
			for (f in e) {
				k = e[f];
				if (j[f] != null) {
					continue
				}
				j[f] = this[k]()
			}
			j._cid = this.cid;
			return j
		};
		d.prototype.request = function(g, f, e) {
			if (e == null) {
				e = {}
			}
			return Fastly.ajax(_.extend(e, {
				type: g,
				dataType: "json",
				url: this.url() + f
			}))
		};
		d.prototype.put = function(f, e) {
			return this.request("PUT", f, e)
		};
		d.prototype.destroy = function(e) {
			var f;
			if (e == null) {
				e = {}
			}
			f = e.success;
			e.success = (function(g) {
				return function() {
					g.trigger("destroyed");
					if (f != null) {
						return f(g)
					}
				}
			})(this);
			return d.__super__.destroy.call(this, e)
		};
		d.prototype.fetch = function(e) {
			var f;
			if (e == null) {
				e = {}
			}
			if (this._auto_load.length > 0) {
				f = e.success;
				e.success = (function(g) {
					return function(h, i) {
						return Fastly.fetch_all(g._auto_load, {
							success: function() {
								if (f != null) {
									return f(h, i)
								}
							}
						})
					}
				})(this)
			}
			return d.__super__.fetch.call(this, e)
		};
		d.prototype.fetch_all = function(g, e, f) {
			if (e == null) {
				e = {}
			}
			if (_.isString(f)) {
				f = f.split(/\s*,\s*/)
			}
			this.trigger("fetch");
			return Fastly.fetch_all(g, {
				success: (function(h) {
					return function() {
						var k, j, i;
						h.trigger("success");
						if ((f != null) && f.length) {
							for (j = 0, i = f.length; j < i; j++) {
								k = f[j];
								h.trigger(k)
							}
						}
						if (e.success != null) {
							return e.success.apply(h, arguments)
						}
					}
				})(this),
				error: (function(h) {
					return function() {
						h.trigger("error");
						if (e.error != null) {
							return e.error.apply(h, arguments)
						}
					}
				})(this),
				complete: (function(h) {
					return function() {
						h.trigger("complete");
						if (e.complete != null) {
							return e.complete.apply(h, arguments)
						}
					}
				})(this)
			})
		};
		d.prototype.save = function(i, h) {
			var l, g, f, m, j, e;
			if (h == null) {
				h = {}
			}
			if (this.changed_only) {
				l = {};
				for (f in i) {
					e = i[f];
					if (this.get(f) !== e) {
						l[f] = e
					}
				}
			} else {
				l = i
			}
			h.data = JSON.stringify(l);
			h.contentType = "application/json";
			j = h.success;
			h.success = (function(k) {
				return function(p, n, o) {
					k.is_new = false;
					k.set(p);
					k.trigger("updated");
					if (j != null) {
						return j(k, p, o)
					}
				}
			})(this);
			g = h.error;
			h.error = (function(k) {
				return function(n) {
					if (g != null) {
						return g(k, n, h)
					} else {
						return k.trigger("error", k, n, h)
					}
				}
			})(this);
			m = this.isNew() ? "create" : "update";
			return (this.sync || Backbone.sync).call(this, m, this, h)
		};
		return d
	})(Backbone.Model);
	Sierra.Collection = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.fetch = function(g) {
			var e, f, i, h;
			if (g == null) {
				g = {}
			}
			h = [g.success, g.error, g.complete], i = h[0], f = h[1], e = h[2];
			g.success = (function(j) {
				return function() {
					j.trigger("success");
					if (i != null) {
						return i.apply(j, arguments)
					}
				}
			})(this);
			g.error = (function(j) {
				return function() {
					j.trigger("error");
					if (f != null) {
						return f.apply(j, arguments)
					}
				}
			})(this);
			g.complete = (function(j) {
				return function() {
					j.trigger("complete");
					if (e != null) {
						return e.apply(j, arguments)
					}
				}
			})(this);
			return c.__super__.fetch.call(this, g)
		};
		c.prototype.comparator = function(h, g) {
			var k, f, j, i, e;
			if (this.sort_key == null) {
				return 0
			}
			i = [h.get(this.sort_key), g.get(this.sort_key)], f = i[0], j = i[1];
			if (!((f != null) && (j != null))) {
				k = h.attrs[this.sort_key];
				e = [h[k](), g[k]()], f = e[0], j = e[1]
			}
			if (!((f != null) && (j != null))) {
				return 0
			}
			if (_.isString(f)) {
				f = f.toLowerCase()
			}
			if (_.isString(j)) {
				j = j.toLowerCase()
			}
			if (f < j) {
				return -1
			} else {
				return 1
			}
		};
		c.prototype.search = function(f) {
			var e, i, g, h;
			h = [
				[], f.fields, _.filter(f.query.split(/\s+/), function(j) {
					return j.length > 0
				})], g = h[0], e = h[1], i = h[2];
			this.each(function(p) {
				var o, w, l, v, q, u, x, s, r, j, t, n, m, k, y, A, z;
				t = {
					model: p.serialize(),
					indices: null,
					matches: {},
					fields: []
				};
				v = false;
				for (n = 0, y = e.length; n < y; n++) {
					l = e[n];
					if (t.model[l] == null) {
						continue
					}
					t.matches[l] = t.model[l];
					t.model[l] = t.model[l].toString();
					r = [];
					for (m = 0, A = i.length; m < A; m++) {
						j = i[m];
						s = t.model[l].toLowerCase().indexOf(j.toLowerCase());
						if (s >= 0) {
							r.push({
								index: s,
								length: j.length
							})
						}
					}
					r.sort();
					if (!(r.length > 0)) {
						continue
					}
					t.fields.push(l);
					t.indices = r;
					for (k = 0, z = r.length; k < z; k++) {
						x = r[k];
						w = _.escape(t.model[l].substr(0, x.index));
						q = _.escape(t.model[l].substr(x.index, x.length));
						o = _.escape(t.model[l].substr(x.index + x.length));
						u = "" + w + "<span class='highlight'>" + q + "</span>" + o;
						t.matches[l] = new Handlebars.SafeString(u)
					}
					v = true
				}
				if (v) {
					return g.push(t)
				}
			});
			return g.sort(function(k, j) {
				var m, l;
				if (k.fields.length > j.fields.length) {
					return -1
				}
				if (j.fields.length > k.fields.length) {
					return 1
				}
				if (f.default_sort_key == null) {
					return 0
				}
				m = k.model[f.default_sort_key];
				l = j.model[f.default_sort_key];
				if (_.isString(m)) {
					m = m.toLowerCase()
				}
				if (_.isString(l)) {
					l = l.toLowerCase()
				}
				if (m < l) {
					return -1
				}
				return 1
			})
		};
		c.prototype.serialize = function() {
			var g, i, f, h, e;
			h = this.models;
			e = [];
			for (i = 0, f = h.length; i < f; i++) {
				g = h[i];
				e.push(g.serialize())
			}
			return e
		};
		c.prototype.request = function(g, f, e) {
			if (e == null) {
				e = {}
			}
			if (this.url != null) {
				f = this.url() + f
			}
			return Fastly.ajax(_.extend(e, {
				type: g,
				dataType: "json",
				url: f
			}))
		};
		return c
	})(Backbone.Collection);
	Sierra.ResourceModel = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.changed_only = true;
		c.prototype.object = "";
		c.prototype.initialize = function(f, e) {
			if (e == null) {
				e = {}
			}
			if (e.update != null) {
				this.is_new = !e.update
			} else {
				this.is_new = true
			}
			this.locked = e.locked != null ? e.locked : false;
			return c.__super__.initialize.call(this, f, e)
		};
		c.prototype.isNew = function() {
			return this.is_new
		};
		c.prototype.url = function() {
			var h, g, i, e, f;
			e = this.get("service_id");
			f = this.get("version");
			g = this.get("name");
			i = this.get("original");
			if (!i) {
				i = g
			}
			h = "/service/" + e + "/version/" + f + "/" + this.object;
			if (this.is_new || !i) {
				return h
			}
			return h + "/" + encodeURIComponent(i)
		};
		c.prototype.serialize = function() {
			var e;
			e = c.__super__.serialize.call(this);
			e.locked = this.locked;
			return e
		};
		c.prototype.fetch = function(e) {
			this.is_new = false;
			return c.__super__.fetch.call(this, e)
		};
		return c
	})(Sierra.Model);
	Sierra.ResourceCollection = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "";
		c.prototype.reset = function(f, e) {
			if (e == null) {
				e = {}
			}
			this.service = e.service_id;
			this.version = e.version;
			return c.__super__.reset.call(this, f, e)
		};
		c.prototype.url = function() {
			return ["/service", this.service, "version", this.version, this.object].join("/")
		};
		c.prototype.fetch = function(e) {
			var f;
			if (e == null) {
				e = {}
			}
			f = e.success;
			e.success = (function(g) {
				return function(j, h, i) {
					g.each(function(k) {
						return k.is_new = false
					});
					if (f != null) {
						return f(g, j)
					}
				}
			})(this);
			return c.__super__.fetch.call(this, e)
		};
		return c
	})(Sierra.Collection);
	Sierra.LoggingResourceModel = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.url = function() {
			var h, g, i, e, f;
			e = this.get("service_id");
			f = this.get("version");
			g = this.get("name");
			i = this.get("original");
			if (!i) {
				i = g
			}
			h = ["/service", e, "version", f];
			if (this.object !== "syslog") {
				h.push("logging")
			}
			h.push(this.object);
			if (!(this.is_new || !i)) {
				h.push(encodeURIComponent(i))
			}
			return h.join("/")
		};
		return c
	})(Sierra.ResourceModel);
	Sierra.LoggingResourceCollection = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.is_logging_resource_collection = true;
		c.prototype.url = function() {
			var e;
			e = ["/service", this.service, "version", this.version];
			if (this.object !== "syslog") {
				e.push("logging")
			}
			e.push(this.object);
			return e.join("/")
		};
		return c
	})(Sierra.ResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Router = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.authorize = false;
		c.prototype.check_authorization = function() {
			if (!_.isObject(this.authorize)) {
				return this.authorize
			}
			if ((this.authorize.role != null) && !Sierra.can_do(this.authorize.role)) {
				return false
			}
			if ((this.authorize.include != null) && !this.authorize.include()) {
				return false
			}
			return true
		};
		c.prototype.needs_two_factor_authentication = function() {
			if ((Sierra.user != null) && Sierra.user.two_factor_auth_enabled() && (Sierra.session != null)) {
				return Sierra.session.needs_two_factor_auth
			}
			return false
		};
		c.prototype.route = function(e, f, g) {
			var h;
			if (this.authorize === false) {
				h = g
			} else {
				h = (function(i) {
					return function() {
						var k, j;
						if (!(e === "demo" || e === "s3" || e === "fluent")) {
							if (window.location.hash === "demo") {
								return Sierra.navigate("demo")
							}
							if (window.location.hash === "s3") {
								return Sierra.navigate("s3")
							}
							if (Sierra.user == null) {
								j = "login";
								if (window.location.hash !== "") {
									k = window.location.hash.substr(1);
									if (k !== "analytics") {
										j = j + "?return=" + k
									}
								}
								return Sierra.navigate(j)
							}
							if (i.needs_two_factor_authentication()) {
								return Sierra.navigate("authenticate")
							}
							if (Sierra.user.get("require_new_password") && !e.match("account/password")) {
								return Sierra.navigate("account/password")
							}
							if (!i.check_authorization()) {
								return Sierra.navigate("analytics")
							}
						}
						return g.apply(i, arguments)
					}
				})(this)
			}
			return Backbone.Router.prototype.route.call(this, e, f, h)
		};
		return c
	})(Backbone.Router)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.View = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.el = null;
		d.prototype.template = null;
		d.prototype.parent = null;
		d.prototype.partials = {};
		d.prototype.visualizations = null;
		d.prototype.initialize = function(f) {
			var g, i, h, e;
			if (f == null) {
				f = {}
			}
			if (f.serialize_model == null) {
				f.serialize_model = true
			}
			this.serialize_model = f.serialize_model;
			this.data = {};
			this.subscribed_service_ids = [];
			this.on("render", (function(j) {
				return function() {
					return j._on_render()
				}
			})(this));
			this.on("ready", (function(j) {
				return function() {
					return j.ready()
				}
			})(this));
			this.on("hidden", (function(j) {
				return function() {
					return j.hidden()
				}
			})(this));
			this._model_events = {};
			this._child_views = {};
			if (!((this.respond_to != null) && (this.model != null))) {
				return
			}
			h = this.respond_to;
			e = [];
			for (g in h) {
				i = h[g];
				e.push(this._on_model_event(g, i))
			}
			return e
		};
		d.prototype._on_render = function() {
			this.element = new FUI.Element(this.el);
			return this.delegateEvents()
		};
		d.prototype._on_model_event = function(e, f) {
			this._model_events[e] = (function(g) {
				return function() {
					if (Sierra.env === "development") {
						console.log("_on_model_event", e, f)
					}
					return g[f].apply(g, arguments)
				}
			})(this);
			return this.model.on(e, this._model_events[e])
		};
		d.prototype._destroy_model_events = function() {
			var g, e, f;
			if (this._models_events == null) {
				return
			}
			f = this._model_events;
			for (e in f) {
				g = f[e];
				this.model.off(e, g);
				this._model_events[e] = null
			}
			return this._model_events = null
		};
		d.prototype._destroy_visualization_instances = function() {
			var g, f, e;
			if (this._visualization_instances == null) {
				return
			}
			e = this._visualization_instances;
			for (f in e) {
				g = e[f];
				g.destroy();
				this._visualization_instances[f] = null
			}
			return this._visualization_instances = null
		};
		d.prototype.add_child = function(e, f) {
			f.parent = this;
			return this._child_views[e] = f
		};
		d.prototype.remove_child = function(e) {
			view.parent = null;
			return delete this._child_views[e]
		};
		d.prototype.render_visualizations = function(g) {
			var j, h, e, i, f;
			if (!((this.visualizations != null) && (g != null))) {
				return
			}
			j = (this._visualization_instances != null ? this._visualization_instances : this._visualization_instances = {});
			Fastly.Stats.subscribe(g);
			this.subscribed_service_ids.push(g);
			i = this.visualizations;
			f = [];
			for (e in i) {
				h = i[e];
				if (j[e] != null) {
					j[e].destroy();
					delete j[e]
				}
				j[e] = new Sierra.Views.Widgets[h]({
					el: $(e, this.el),
					service_id: g
				});
				j[e].render();
				f.push(j[e].set_service(g))
			}
			return f
		};
		d.prototype.ready = function() {};
		d.prototype.hidden = function() {
			var i, h, f, g, e;
			g = this.subscribed_service_ids;
			e = [];
			for (h = 0, f = g.length; h < f; h++) {
				i = g[h];
				e.push(Fastly.Stats.unsubscribe(i))
			}
			return e
		};
		d.prototype.destroy = function(e) {
			if (e == null) {
				e = {}
			}
			e.destroy_element = true;
			this._destroy_model_events();
			this._destroy_visualization_instances();
			if (!e.destroy_element) {
				return this.remove()
			}
		};
		d.prototype.trigger_ready = function() {
			var e, f, g;
			g = this._child_views;
			for (e in g) {
				f = g[e];
				f.trigger_ready()
			}
			return this.trigger("ready")
		};
		d.prototype.trigger_hidden = function() {
			var e, f, g;
			g = this._child_views;
			for (e in g) {
				f = g[e];
				f.trigger_hidden()
			}
			return this.trigger("hidden")
		};
		d.prototype.render = function() {
			var e, f, g;
			if ((this.model != null) && (this.model.serialize != null) && this.serialize_model) {
				this.data = this.model.serialize()
			}
			if (!this.template) {
				return this.trigger("render")
			}
			$(this.el).html(FUI.render(this.template, this.data, this.partials));
			g = this._child_views;
			for (e in g) {
				f = g[e];
				f.render();
				$(e, this.el).replaceWith(f.el)
			}
			this.trigger("render");
			return this
		};
		return d
	})(Backbone.View);
	Sierra.PageView = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.layout = "Application";
		return d
	})(Sierra.View);
	Sierra.LayoutView = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.id = "layout";
		return d
	})(Sierra.View);
	Sierra.ResourceView = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.className = "resource-view-container";
		c.prototype.resource = "";
		c.prototype.resource_text = null;
		c.prototype.model_name = "";
		c.prototype.collection_name = "";
		c.prototype.page_size = 5;
		c.prototype.multiview = false;
		c.prototype.modal = ".resource-modal";
		c.prototype.search_fields = ["name"];
		c.prototype.initialize = function(f) {
			var h, e, g;
			if (f == null) {
				f = {}
			}
			g = [null, false, null], this.resource_options = g[0], this.locked = g[1], e = g[2];
			if (f.model != null) {
				e = f.model
			}
			h = {
				"click .resource-name": "toggle_details",
				"click .resource-new": "show_new_modal",
				"click .resource-edit": "show_edit_modal",
				"submit .resource-modal form": "submit_form",
				"click .resource-delete": "show_delete_modal",
				"keyup .resource-search-text": "filter_models"
			};
			if (this.events != null) {
				_.extend(h, this.events)
			}
			this.events = h;
			Sierra.View.prototype.initialize.call(this, {
				serialize_model: false
			});
			this.resource = this.resource.toLowerCase();
			if ((e != null) && (e.resources != null)) {
				this.collection = e.resources[this.collection_name]
			} else {
				if (e != null) {
					this.collection = e
				} else {
					this.collection = new Sierra.Collections[this.collection_name]()
				}
			}
			this.collection.on("add", (function(i) {
				return function(j) {
					return i.add_entry(j)
				}
			})(this));
			this.collection.on("update", (function(i) {
				return function(j) {
					return i.replace_entry(j)
				}
			})(this));
			this.collection.on("remove", (function(i) {
				return function(j) {
					return i.remove_entry(j)
				}
			})(this));
			this.paginator = new Sierra.Views.Paginator({
				model: this.collection,
				page_size: this.page_size
			});
			this.paginator.on("change", (function(i) {
				return function(k, j) {
					if (i.el == null) {
						return
					}
					$(".resource-details:visible", i.el).hide();
					return $(".resource-entry", i.el).each(function(l, m) {
						return $(m)[l >= k && l < j ? "show" : "hide"]()
					})
				}
			})(this));
			this.add_child(".paginator", this.paginator);
			return $("body").popover({
				selector: '[data-toggle="popover"]'
			})
		};
		c.prototype.ready = function() {
			this.form = new FUI.ModalForm(this.modal, this.el);
			this.default_data = this.form.fields();
			this.paginator.goto_page();
			if (this.collection.size() === 0 && (this.el != null)) {
				$(".resource-list", this.el).hide()
			}
			this.check_min_height();
			return Sierra.View.prototype.ready.apply(this, arguments)
		};
		c.prototype.check_min_height = function() {
			if (this.collection.size() >= 5) {
				return $(".resource-list", this.el).css("min-height", "304px")
			} else {
				return $(".resource-list", this.el).css("min-height", "")
			}
		};
		c.prototype.add_entry = function(f) {
			var g, e;
			e = this.prepare_object(f.serialize());
			g = $(FUI.render(this.partials.entry, e, this.partials)).hide();
			$(".resource-list", this.el).prepend(g).show();
			$(".resource-view > p", this.el).hide();
			FUI.Anim.highlight(g);
			this.check_min_height();
			return this.paginator.goto_page(0)
		};
		c.prototype.replace_entry = function(f) {
			var g, e;
			e = this.prepare_object(f.serialize());
			g = FUI.render(this.partials.entry, e, this.partials);
			return $.cid(f, this.el).replaceWith(g)
		};
		c.prototype.remove_entry = function(e) {
			var f;
			f = $(".resource-entry[data-cid=" + e.cid + "]", this.el);
			return f.fadeOut(1000, (function(g) {
				return function() {
					f.remove();
					if (g.collection.size() === 0) {
						$(".resource-list", g.el).hide();
						$(".resource-view > p", g.el).show()
					}
					g.check_min_height();
					return g.paginator.refresh_page()
				}
			})(this))
		};
		c.prototype.show_modal = function(e) {
			this.trigger("form");
			this.form.find("h3 .title").text(e.title);
			this.form.find("[type=submit]").val(e.submit);
			this.form.el.attr("data-type", e.type);
			this.form.reset(this.default_data);
			this.form.cid("");
			if (e.data != null) {
				this.form.reset(e.data)
			}
			this.form.show();
			return this.trigger("form:shown")
		};
		c.prototype.stop_propagation = function(f) {
			return f.stopPropagation()
		};
		c.prototype.filter_models = function(k) {
			var f, n, o, j, m, h, l, i, g;
			if ((this.search_fields == null) || this.search_fields.length < 1 || this.collection.size() < 1) {
				return
			}
			i = [k.keyCode, k.target.value], f = i[0], m = i[1];
			n = $(".resource-search-message", this.el);
			if (f === 27 || m.length === 0) {
				if (f === 27) {
					$(k.target).val("").blur()
				}
				$(".resource-entry", this.el).show();
				n.html("");
				return this.paginator.goto_page(0)
			} else {
				j = this.collection.search({
					fields: this.search_fields,
					query: m,
					default_sort_key: this.search_fields[0]
				});
				n.text("" + j.length + " Results");
				if (j.length === 0) {
					$("> p", this.el).show()
				}
				$(".resource-entry", this.el).hide();
				g = [];
				for (h = 0, l = j.length; h < l; h++) {
					o = j[h];
					g.push($(".resource-entry[data-cid=" + o.model._cid + "]", this.el).show())
				}
				return g
			}
		};
		c.prototype.toggle_details = function(f) {
			f.preventDefault();
			return $(f.target).parents(".resource-entry").find(".resource-details").fadeToggle(250)
		};
		c.prototype.show_new_modal = function(g) {
			var f;
			this.trigger("form:new");
			if (this.new_defaults != null) {
				f = this.new_defaults
			}
			return this.show_modal({
				type: "new",
				title: "New",
				submit: "Create",
				remove: false,
				data: f
			})
		};
		c.prototype.show_edit_modal = function(h) {
			var g, f;
			h.preventDefault();
			f = this.collection.getByCid($(h.target).cid());
			this.trigger("form:edit", f);
			g = f.serialize();
			return this.show_modal({
				type: "edit",
				title: "Edit",
				submit: "Update",
				remove: true,
				data: g
			})
		};
		c.prototype.show_delete_modal = function(g) {
			var f;
			g.preventDefault();
			f = this.collection.getByCid($(g.target).cid());
			return FUI.confirm_delete(f, (function(e) {
				return function(h, i) {
					return e.delete_entry(h, i)
				}
			})(this))
		};
		c.prototype.submit_form = function(g) {
			var f;
			g.preventDefault();
			if (!this.form.validate()) {
				return
			}
			f = this.resource_text || this.resource;
			if (this.form.el.attr("data-type") === "new") {
				this.form.toggle_loading("Creating new " + f + "...");
				return this.create_entry(this.form.fields())
			} else {
				this.form.toggle_loading("Updating " + f + "...");
				return this.update_entry(this.form.fields())
			}
		};
		c.prototype.create_entry = function(e) {
			var f;
			this.trigger("model:create", e);
			f = new Sierra.Models[this.model_name](this.resource_options);
			return f.save(e, {
				success: (function(g) {
					return function() {
						g.collection.add(f);
						return g.form.hide()
					}
				})(this),
				error: (function(g) {
					return function(h, i) {
						return g.form.error(i)
					}
				})(this),
				complete: (function(g) {
					return function() {
						return g.form.toggle_loading()
					}
				})(this)
			})
		};
		c.prototype.update_entry = function(e) {
			var f;
			this.trigger("model:update", e);
			f = this.collection.getByCid(this.form.cid());
			return f.save(e, {
				success: (function(g) {
					return function() {
						g.collection.trigger("update", f);
						return g.form.hide()
					}
				})(this),
				error: (function(g) {
					return function(h, i) {
						return g.form.error(i)
					}
				})(this),
				complete: (function(g) {
					return function() {
						return g.form.toggle_loading()
					}
				})(this)
			})
		};
		c.prototype.delete_entry = function(e, f) {
			console.log(arguments, e, f);
			f.toggle_loading("Deleting " + this.resource + "...");
			return e.destroy({
				success: (function(g) {
					return function() {
						g.collection.remove(e);
						return f.hide()
					}
				})(this),
				error: (function(g) {
					return function(h, i) {
						return f.error(i)
					}
				})(this),
				complete: (function(g) {
					return function() {
						return f.toggle_loading()
					}
				})(this)
			})
		};
		c.prototype.prepare_object = function(e) {
			return e
		};
		c.prototype.render = function() {
			var i, f, j, h, e, g;
			if (this.model.resources != null) {
				this.resource_options = this.model.resource_options();
				this.locked = this.model.version.get("locked")
			}
			i = [];
			g = this.collection.serialize();
			for (h = 0, e = g.length; h < e; h++) {
				f = g[h];
				j = this.prepare_object(f);
				if (j != null) {
					i.push(j)
				}
			}
			this.data[this.collection_name] = i;
			this.data.locked = this.locked;
			return Sierra.View.prototype.render.call(this, arguments)
		};
		return c
	})(Sierra.View);
	Sierra.LoggingResourceView = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.new_defaults = {
			format: "%h %l %u %t %r %>s"
		};
		c.prototype.ready = function() {
			this.on("model:create", (function(e) {
				return function(f) {
					return e.ensure_format(f)
				}
			})(this));
			this.on("model:update", (function(e) {
				return function(f) {
					return e.ensure_format(f)
				}
			})(this));
			return Sierra.ResourceView.prototype.ready.apply(this, arguments)
		};
		c.prototype.prepare_object = function(e) {
			e.format_string = e.format;
			return e
		};
		c.prototype.ensure_format = function(e) {
			if ((e != null) && (e.format != null) && !$.trim(e.format).length > 0) {
				return e.format = this.new_defaults.format
			}
		};
		return c
	})(Sierra.ResourceView);
	Sierra.StatsView = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.initialize = function(e) {
			var f;
			if (e == null) {
				e = {}
			}
			f = [e.service_id, false, false, "aggregated"], this.service_id = f[0], this.visible = f[1], this.has_history = f[2], this.dc = f[3];
			this.update_callback = (function(g) {
				return function(h) {
					return g._update(h)
				}
			})(this);
			return Sierra.View.prototype.initialize.apply(this, arguments)
		};
		d.prototype._update = function(e) {
			if (!this.has_history) {
				this.has_history = true;
				this.history(e);
				if (!this.visible) {
					this.visible = true;
					return $(this.el).animate({
						opacity: "1"
					}, 400, (function(f) {
						return function() {
							return $(f.el).css("opacity", "1")
						}
					})(this))
				}
			} else {
				return this.update(e)
			}
		};
		d.prototype.background_changed = function(e) {};
		d.prototype.make_canvas = function(h, e, j, f) {
			var g, i;
			if (j == null) {
				j = false
			}
			g = document.createElement("canvas");
			i = [h, e], g.width = i[0], g.height = i[1];
			if (!j) {
				(f ? $(f, this.el) : $(this.el)).append(g)
			}
			return [g, g.getContext("2d")]
		};
		d.prototype.track_event = function(f, g) {
			var e;
			e = this.name || "Stats View (nameless visualization)";
			return Sierra.GA.event("Analytics", e, f, g)
		};
		d.prototype.reset = function() {
			$(this.el).css("opacity", "0.5");
			return this.visible = false
		};
		d.prototype.set_service = function(e) {
			Fastly.Stats.off("update", this.service_id, this.update_callback);
			Fastly.Stats.on("update", (this.service_id = e), this.update_callback);
			this.has_history = false;
			return this.reset()
		};
		d.prototype.set_datacenter = function(e) {
			this.dc = e
		};
		d.prototype.destroy = function() {
			Fastly.Stats.off("update", this.service_id, this.update_callback);
			return Sierra.View.prototype.destroy.apply(this, arguments)
		};
		d.prototype.update = function(e) {};
		d.prototype.history = function(e) {};
		return d
	})(Sierra.View)
}).call(this);
(function() {
	var a, b;
	a = (function() {
		var e, d;
		d = 120;
		e = false;

		function c(f) {
			this.id = f;
			this.listeners = {};
			this.stats = {
				all: {},
				datacenter: {}
			}
		}
		c.prototype.on = function(f, h) {
			var g;
			if (h == null) {
				return
			}
			if ((g = this.listeners)[f] == null) {
				g[f] = []
			}
			return this.listeners[f].push(h)
		};
		c.prototype.off = function(f, h) {
			var g;
			if (this.listeners[f] == null) {
				return
			}
			if (h == null) {
				this.listeners[f] = null;
				return delete this.listeners[f]
			} else {
				g = this.listeners[f].indexOf(h);
				if (!(g > -1)) {
					return
				}
				return this.listeners[f].splice(g, 1)
			}
		};
		c.prototype.trigger = function(h) {
			var k, j, g, i, f;
			if (this.listeners[h] == null) {
				return
			}
			i = this.listeners[h];
			f = [];
			for (j = 0, g = i.length; j < g; j++) {
				k = i[j];
				if (k != null) {
					f.push(k(this))
				} else {
					f.push(void 0)
				}
			}
			return f
		};
		c.prototype.history = function(j) {
			var g, i, f, h;
			this.buffer = j;
			if (!((this.buffer != null) && (this.buffer.length != null))) {
				return
			}
			this.size = this.buffer.length;
			this.index = this.buffer.length - 1 || 0;
			h = this.buffer;
			for (i = 0, f = h.length; i < f; i++) {
				g = h[i];
				this._prepare(g)
			}
			return this.recorded = this.buffer.length > 0 ? this.buffer[this.index].recorded : 0
		};
		c.prototype.destroy = function() {
			var n, h, g, l, j, k, f, m;
			if (this.buffer != null) {
				for (h = l = 0, k = this.buffer.length - 1; 0 <= k ? l < k : l > k; h = 0 <= k ? ++l : --l) {
					this.buffer[h] = null;
					delete this.buffer[h]
				}
				this.buffer = null;
				delete this.buffer
			}
			f = this.listeners;
			for (g in f) {
				n = f[g];
				for (h = j = 0, m = n.length; 0 <= m ? j < m : j > m; h = 0 <= m ? ++j : --j) {
					n[h] = null;
					delete n[h]
				}
				this.listeners[g] = null;
				delete this.listeners[g]
			}
			this.listeners = null;
			return delete this.listeners
		};
		c.prototype._prepare = function(i) {
			var h, f, k, g, j;
			j = i.datacenter;
			for (g in j) {
				f = j[g];
				if ((k = f.hits + f.miss) === 0) {
					f.hit_ratio = 0
				} else {
					f.hit_ratio = f.hits / k
				}
				f.bandwidth = f.body_size + f.header_size;
				f.pass = f.requests - (f.hits + f.miss + f.synth + f.errors)
			}
			h = i.aggregated;
			if ((k = h.hits + h.miss) === 0) {
				h.hit_ratio = 0
			} else {
				h.hit_ratio = h.hits / k
			}
			h.bandwidth = h.body_size + h.header_size;
			return h.pass = h.requests - (h.hits + h.miss + h.synth + h.errors)
		};
		c.prototype.avg = function(m, g) {
			var l, i, h, k, f, j;
			if (g == null) {
				g = "all"
			}
			if (!(this.size > 0)) {
				return 0
			}
			h = 0;
			j = this.buffer;
			for (k = 0, f = j.length; k < f; k++) {
				i = j[k];
				l = g === "all" || g === "aggregated" ? i.aggregated : i.datacenter[g];
				if (l == null) {
					continue
				}
				h += parseFloat(l[m])
			}
			return h / parseFloat(this.size)
		};
		c.prototype.log = function(g, f) {
			if (!e) {
				return
			}
			return console.log("Channel." + g + "(): " + f)
		};
		c.prototype.update = function(f) {
			this._prepare(f);
			if (f.recorded <= this.recorded) {
				this.log("update", "Backfill Detected [delta = " + (f.recorded - this.recorded) + "] @ " + this.recorded);
				return
			}
			if (f.recorded > this.recorded + 1) {
				this.log("update", "Future Jump Detected [delta = " + (f.recorded - this.recorded) + "] @ " + f.recorded)
			}
			this.index = (this.index + 1) % d;
			if (this.buffer[this.index] != null) {
				this.buffer[this.index] = null;
				delete this.buffer[this.index]
			}
			this.buffer[this.index] = f;
			this.size = Math.min(this.size + 1, d);
			this.recorded = f.recorded;
			return this.trigger("update")
		};
		c.prototype.after = function(f) {
			f = f | 0;
			return _.filter(this.buffer, function(g) {
				return (g.recorded | 0) >= f
			})
		};
		c.prototype.at = function(h, f) {
			var g;
			h = h | 0;
			g = _.find(this.buffer, function(i) {
				return (i.recorded | 0) === h
			});
			if (g == null) {
				return
			}
			if (f == null) {
				return g
			}
			if (f === "all") {
				return g.aggregated
			}
			return g.datacenter[f]
		};
		c.prototype.current = function(f) {
			if (f == null) {
				return this.buffer[this.index]
			}
			if (f === "all" || f === "aggregated") {
				return this.buffer[this.index].aggregated
			}
			if (this.buffer[this.index] == null) {
				return null
			}
			if (!this.buffer[this.index].datacenter) {
				return null
			}
			return this.buffer[this.index].datacenter[f]
		};
		c.prototype.now = function() {
			return this.buffer[this.index].recorded
		};
		c.prototype.each = function(h) {
			var g, k, j, f;
			f = [];
			for (g = k = 0, j = this.size - 1; 0 <= j ? k < j : k > j; g = 0 <= j ? ++k : --k) {
				f.push(h(this.buffer[(this.index + g) % this.buffer.length]))
			}
			return f
		};
		return c
	})();
	b = (function() {
		var c, d;
		c = 1;
		d = new Whistler("https://rt.fastly.com", "xyz");

		function e() {
			this.channel = null;
			this.ch = null;
			this.update = (function(f) {
				return function(g) {
					f.log(g);
					return f.channel.update(g)
				}
			})(this)
		}
		e.prototype.subscribe = function(f) {
			if ((this.channel != null) && f === this.channel.id) {
				return
			}
			this.unsubscribe();
			this.channel = new a(f);
			return (this.ch = d.channel(f)).history(120, (function(g) {
				return function(h) {
					if (g.channel != null) {
						g.channel.history(h);
						return g.ch.subscribe(g.update)
					}
				}
			})(this))
		};
		e.prototype.unsubscribe = function() {
			if (this.channel != null) {
				this.ch.unsubscribe();
				this.ch = null;
				this.channel.destroy();
				this.channel = null;
				return delete this.channel
			}
		};
		e.prototype.on = function(f, h, g) {
			return this.channel.on(f, g)
		};
		e.prototype.off = function(f, h, g) {
			return this.channel.off(f, g)
		};
		e.prototype.log = function(f) {
			if (c) {
				console.log(f)
			}
			if (_.isNumber(c)) {
				return c = Math.max(0, c - 1)
			}
		};
		return e
	})();
	Fastly.Stats = new b()
}).call(this);
(function() {
	var b, g, e, a, d, i, h, f = {}.hasOwnProperty,
		c = function(m, k) {
			for (var j in k) {
				if (f.call(k, j)) {
					m[j] = k[j]
				}
			}
			function l() {
				this.constructor = m
			}
			l.prototype = k.prototype;
			m.prototype = new l();
			m.__super__ = k.prototype;
			return m
		};
	if ((h = Sierra.Views).Configure == null) {
		h.Configure = {}
	}
	Sierra.Views.Configure.Overview = (function(j) {
		c(k, j);

		function k() {
			return k.__super__.constructor.apply(this, arguments)
		}
		k.prototype.id = "content";
		k.prototype.title = function() {
			return "Configure - " + (this.model.service.get("name"))
		};
		k.prototype.template = "configure/overview/page.html";
		k.prototype.respond_to = {
			"reload:service": "reload"
		};
		k.prototype.initialize = function() {
			var l;
			Sierra.PageView.prototype.initialize.apply(this, arguments);
			l = {
				model: this.model
			};
			this.add_child("#configure_overview .toolbar", new d(l));
			this.add_child("#configure_overview .header", new g(l));
			this.add_child("#configure_overview .stats", new a(l));
			this.add_child("#configure_overview .versions", new i(l));
			return this.add_child("#configure_overview .monitor", new e(l))
		};
		k.prototype.ready = function() {
			return Fastly.Stats.subscribe(this.model.service.get("id"))
		};
		k.prototype.reload = function() {
			return FUI.render(this)
		};
		return k
	})(Sierra.PageView);
	d = (function(k) {
		c(j, k);

		function j() {
			return j.__super__.constructor.apply(this, arguments)
		}
		j.prototype.className = "toolbar";
		j.prototype.template = "configure/overview/toolbar.html";
		j.prototype.partials = {
			new_modal: "configure/overview/modals/new.html"
		};
		j.prototype.events = {
			"change [name=service_id]": "change_service",
			"click .new-service": "show_new_service",
			"submit .new-service-modal form": "create_service"
		};
		j.prototype.respond_to = {
			"service:updated": "update_services"
		};
		j.prototype.initialize = function() {
			this.new_service_id = null;
			return Sierra.View.prototype.initialize.apply(this, arguments)
		};
		j.prototype.ready = function() {
			this.search_box = new FUI.SearchBox(".service-search", this.el, {
				model: this.model.services,
				label: "name",
				search_keys: ["name", "customer_name", "id"],
				template: "fui/search_box/services.html"
			});
			this.new_service = new FUI.ModalForm(".new-service-modal", this.el);
			return this.new_service.el.on("hidden.bs.modal", (function(l) {
				return function() {
					if (l.new_service_id == null) {
						return
					}
					FUI.show_page_loading();
					return l.model.set_service(l.new_service_id, true)
				}
			})(this))
		};
		j.prototype.update_services = function() {
			this.search_box.set_model(this.model.services);
			return this.search_box.set_value(this.model.service.get("name"))
		};
		j.prototype.show_new_service = function(l) {
			this.new_service.reset({
				port: 80
			});
			this.new_service.show();
			return this.new_service_id = null
		};
		j.prototype.change_service = function(l) {
			return this.model.set_service(l.target.value)
		};
		j.prototype.create_service = function(l) {
			l.preventDefault();
			if (!this.new_service.validate()) {
				return
			}
			this.new_service.toggle_loading();
			return Sierra.Models.Service.quickstart(this.new_service.fields(), {
				success: (function(m) {
					return function(o) {
						var n;
						n = new Sierra.Models.Service(o.service);
						m.model.services.add(n);
						m.new_service_id = n.get("id");
						return m.new_service.hide()
					}
				})(this),
				error: (function(m) {
					return function(n) {
						return m.new_service.error(n)
					}
				})(this),
				complete: (function(m) {
					return function() {
						return m.new_service.toggle_loading()
					}
				})(this)
			})
		};
		return j
	})(Sierra.View);
	g = (function(j) {
		c(k, j);

		function k() {
			return k.__super__.constructor.apply(this, arguments)
		}
		k.prototype.className = "header";
		k.prototype.serviceName = null;
		k.prototype.template = "configure/overview/header.html";
		k.prototype.partials = {
			purge_modal: "configure/overview/modals/purge.html",
			purge_key_modal: "configure/overview/modals/purge_key.html",
			purge_all_modal: "configure/overview/modals/purge_all.html",
			deactivate_modal: "configure/overview/modals/deactivate.html",
			check_content_modal: "configure/overview/modals/check_content.html",
			check_content_results: "configure/overview/modals/check_content_results.html"
		};
		k.prototype.events = {
			"focus .service-name": "rename",
			"click .service-name": "disable_tooltip",
			"keydown .service-name": "esc_or_enter",
			"blur .service-name": "check_service_name",
			"click .delete": "show_delete_modal",
			"click .purge": "show_purge_modal",
			'input input[name="path"]': "purge_path",
			'input [name="custom_domain"]': "customs",
			"change .purge-modal [name=domain]": "change_purge_domain",
			"submit .purge-modal form": "purge",
			"click .purge-key": "show_purge_key_modal",
			"submit .purge-key-modal form": "purge_key",
			"click .purge-all": "show_purge_all_modal",
			"submit .purge-all-modal form": "purge_all",
			"click .deactivate": "show_deactivate_modal",
			"submit .deactivate-modal form": "deactivate",
			"click .check-content": "show_check_content_modal",
			"submit .check-content-modal form": "check_content"
		};
		k.prototype.respond_to = {
			"service:updated": "service_updated"
		};
		k.prototype.ready = function() {
			this.purge_modal = new FUI.ModalForm(".purge-modal", this.el);
			this.purge_key_modal = new FUI.ModalForm(".purge-key-modal", this.el);
			this.purge_all_modal = new FUI.ModalForm(".purge-all-modal", this.el);
			this.check_content_modal = new FUI.ModalForm(".check-content-modal", this.el);
			this.deactivate_modal = new FUI.ModalForm(".deactivate-modal", this.el);
			return this.deactivate_modal.el.on("hidden.bs.modal", (function(l) {
				return function() {
					return l.model.reload_service(l.model.service.get("id"))
				}
			})(this))
		};
		k.prototype.service_updated = function() {
			return $(".title h2 .service-name", this.el).text(this.model.service.get("name"))
		};
		k.prototype.show_delete_modal = function(l) {
			return FUI.confirm_delete(this.model.service, (function(m) {
				return function(n, o) {
					return m.delete_service(n, o)
				}
			})(this))
		};
		k.prototype.delete_service = function(l, m) {
			var n;
			m.toggle_loading("Deleting service...");
			n = (function(o) {
				return function() {
					Sierra.navigate("configure");
					return m.off("hidden.bs.modal", n)
				}
			})(this);
			m.on("hidden.bs.modal", n);
			return this.model.destroy_service({
				success: (function(o) {
					return function() {
						return m.hide()
					}
				})(this),
				error: (function(o) {
					return function(p, q) {
						return m.error(q)
					}
				})(this),
				complete: (function(o) {
					return function() {
						Sierra.navigate("configure");
						return m.toggle_loading()
					}
				})(this)
			})
		};
		k.prototype.show_purge_modal = function(l) {
			l.preventDefault();
			$("pre code", this.purge_modal.el).addClass("invisible");
			this.purge_modal.reset();
			$(".regular-domain-option > option", this.purge_modal.el).first().prop("selected", "selected");
			this.change_purge_domain();
			return this.purge_modal.show()
		};
		k.prototype.change_purge_domain = function() {
			var l, m;
			l = $(".custom-domain", this.purge_modal.el);
			m = $(".regular-domain-option", this.purge_modal.el).val();
			if (m === "other") {
				this.customs();
				l.show();
				l.focus()
			} else {
				l.hide();
				$("pre code", this.purge_modal.el).removeClass("invisible");
				$("pre .domain", this.purge_modal.el).text(m)
			}
			return this.purge_path()
		};
		k.prototype.customs = function(o) {
			var m, l, n;
			l = $(".custom-domain", this.purge_modal.el).val();
			n = $("input[name=path]", this.purge_modal.el).val();
			m = $("pre code", this.purge_modal.el);
			if (l.length > 0) {
				m.removeClass("invisible")
			}
			if (l.length === 0 && n.length === 0) {
				m.addClass("invisible")
			}
			return $("pre .domain", this.purge_modal.el).text(l)
		};
		k.prototype.purge = function(p) {
			var n, l, m, o;
			p.preventDefault();
			if (!this.purge_modal.validate()) {
				return
			}
			l = this.purge_modal.fields();
			o = l.path;
			if ((l.domain == null) || l.domain === "other") {
				n = l.custom_domain
			} else {
				n = l.domain
			}
			m = FUI.parseURL(o);
			o = m.path + m.query;
			$("input[name=path]", this.purge_modal.el).val(o);
			this.purge_path();
			this.purge_modal.toggle_loading("Purging path...");
			return this.model.service.purge(n, o, {
				success: (function(q) {
					return function(r) {
						return q.purge_modal.form.flash("The purge request has been issued to caches. This may take 500ms to propagate. For reference, the purge ID is " + r.id + ".", "success")
					}
				})(this),
				error: (function(q) {
					return function(r) {
						return q.purge_modal.error(r)
					}
				})(this),
				complete: (function(q) {
					return function() {
						return q.purge_modal.toggle_loading()
					}
				})(this)
			})
		};
		k.prototype.show_purge_key_modal = function(l) {
			l.preventDefault();
			this.purge_key_modal.reset();
			return this.purge_key_modal.show()
		};
		k.prototype.purge_key = function(m) {
			var l;
			m.preventDefault();
			if (!this.purge_key_modal.validate()) {
				return
			}
			l = /\s/;
			if (l.test(this.purge_key_modal.field("key"))) {
				return this.purge_key_modal.flash("Only one key can be entered at a time. No tabs, spaces, or carriage returns are allowed.", "danger")
			} else {
				this.purge_key_modal.toggle_loading("Purging key...");
				this.purge_key_modal.flash();
				return this.model.service.purge_key(this.purge_key_modal.field("key"), {
					success: (function(n) {
						return function(o) {
							return n.purge_key_modal.form.flash("The purge request has been issued to caches. This may take 500ms to propagate. For reference, the purge ID is " + o.id + ".", "success")
						}
					})(this),
					error: (function(n) {
						return function(o) {
							return n.purge_key_modal.error(o)
						}
					})(this),
					complete: (function(n) {
						return function() {
							return n.purge_key_modal.toggle_loading()
						}
					})(this)
				})
			}
		};
		k.prototype.show_purge_all_modal = function(l) {
			l.preventDefault();
			return this.purge_all_modal.show()
		};
		k.prototype.purge_all = function(l) {
			l.preventDefault();
			this.purge_all_modal.toggle_loading("Purging all paths...");
			return this.model.service.purge_all({
				success: (function(m) {
					return function() {
						return m.purge_all_modal.hide()
					}
				})(this),
				error: (function(m) {
					return function(n) {
						return m.purge_all_modal.error(n)
					}
				})(this),
				complete: (function(m) {
					return function() {
						return m.purge_all_modal.toggle_loading()
					}
				})(this)
			})
		};
		k.prototype.purge_path = function() {
			var l, m;
			l = $("pre code", this.purge_modal.el);
			m = $("input[name=path]", this.purge_modal.el).val();
			if (m.length > 0 && l.hasClass("invisible")) {
				l.removeClass("invisible")
			}
			return $("pre span + span", this.purge_modal.el).text($("input[name=path]", this.purge_modal.el).val().replace(/^\/+/, ""))
		};
		k.prototype.show_deactivate_modal = function(l) {
			l.preventDefault();
			return this.deactivate_modal.show()
		};
		k.prototype.deactivate = function(l) {
			l.preventDefault();
			this.deactivate_modal.toggle_loading("Deactivating Service...");
			return this.model.versions.active().deactivate({
				success: (function(m) {
					return function() {
						return m.deactivate_modal.hide()
					}
				})(this),
				error: (function(m) {
					return function(n) {
						return m.deactivate_modal.error(n)
					}
				})(this),
				complete: (function(m) {
					return function() {
						return m.deactivate_modal.toggle_loading()
					}
				})(this)
			})
		};
		k.prototype.rename = function(n) {
			var o, l, m;
			n.preventDefault();
			m = $(n.target);
			o = $(".service-name ~ p", this.el);
			o.hide();
			if (o.length != null) {
				o.empty() && m.removeClass("error")
			}
			l = m.text();
			this.serviceName = l;
			return this.model.service.save({
				name: l
			}, {
				error: (function(p) {
					return function(q, t) {
						var r, s;
						r = JSON.parse(t.responseText);
						s = r.detail;
						o.text(s);
						m.addClass("error");
						return o.show()
					}
				})(this)
			})
		};
		k.prototype.disable_tooltip = function() {
			return $(".service-name", this.el).tooltip("hide")
		};
		k.prototype.esc_or_enter = function(n) {
			var o, l, m;
			l = n.which === 27;
			o = n.which === 13;
			m = $(n.target);
			if (l) {
				document.execCommand("undo") && this.rename(n) && m.blur()
			}
			if (o) {
				return this.rename(n) && m.blur()
			}
		};
		k.prototype.check_service_name = function(m) {
			var l;
			l = $(m.target).text();
			if (l !== this.serviceName) {
				return $(m.target).text(this.serviceName)
			}
		};
		k.prototype.show_check_content_modal = function(l) {
			l.preventDefault();
			this.check_content_modal.reset();
			this.check_content_modal.find(".results").html("");
			return this.check_content_modal.show()
		};
		k.prototype.check_content = function(m) {
			var l;
			m.preventDefault();
			if (!this.check_content_modal.validate()) {
				return
			}
			this.check_content_modal.toggle_loading("Checking URL...");
			l = this.check_content_modal.field("url");
			return Fastly.edge_check(l, {
				success: (function(n) {
					return function(o) {
						return n.check_content_results(l, o)
					}
				})(this),
				error: (function(n) {
					return function(o) {
						return n.check_content_modal.error(o)
					}
				})(this),
				complete: (function(n) {
					return function() {
						return n.check_content_modal.toggle_loading()
					}
				})(this)
			})
		};
		k.prototype.check_content_results = function(m, o) {
			var s, n, p, q, l;
			s = [];
			for (q = 0, l = o.length; q < l; q++) {
				p = o[q];
				if (p.response.status === 0) {
					continue
				}
				p.response_time = (1000 * p.response_time).toFixed(0) + " ms";
				s.push(p)
			}
			n = FUI.render(this.partials.check_content_results, {
				url: m,
				results: s
			});
			return this.check_content_modal.find(".results").html(n)
		};
		return k
	})(Sierra.View);
	a = (function(j) {
		c(k, j);

		function k() {
			return k.__super__.constructor.apply(this, arguments)
		}
		k.prototype.className = "stats";
		k.prototype.template = "configure/overview/stats.html";
		k.prototype.visualizations = {
			".hitometer": "MiniHitometer",
			".mini-stats": "MiniStats",
			".sparklines": "Sparklines",
			".heatmap": "MiniHeatmap"
		};
		k.prototype.ready = function() {
			var l;
			l = this.model.service.get("id");
			return this.render_visualizations(l)
		};
		k.prototype.hidden = function() {
			return Fastly.Stats.unsubscribe(this.model.service.get("id"))
		};
		return k
	})(Sierra.View);
	i = (function(k) {
		c(j, k);

		function j() {
			return j.__super__.constructor.apply(this, arguments)
		}
		j.prototype.className = "versions col-md-4";
		j.prototype.template = "configure/overview/versions.html";
		return j
	})(Sierra.View);
	e = (function(j) {
		c(k, j);

		function k() {
			return k.__super__.constructor.apply(this, arguments)
		}
		k.prototype.className = "monitor col-md-8";
		k.prototype.template = "configure/overview/monitor.html";
		k.prototype.initialize = function() {
			var l;
			Sierra.View.prototype.initialize.apply(this, arguments);
			l = {
				model: this.model
			};
			$("body").tooltip({
				selector: '[data-toggle="tooltip"]:not([data-trigger])'
			});
			return this.add_child(".events", new b(l))
		};
		k.prototype.ready = function() {
			this.model.fetch_events();
			return Sierra.View.prototype.ready.apply(this, arguments)
		};
		return k
	})(Sierra.View);
	b = (function(k) {
		c(j, k);

		function j() {
			return j.__super__.constructor.apply(this, arguments)
		}
		j.prototype.className = "section events";
		j.prototype.template = "configure/overview/monitor/events.html";
		j.prototype.respond_to = {
			"event_log:changed": "render"
		};
		return j
	})(Sierra.View)
}).call(this);
(function() {
	var c, a = {}.hasOwnProperty,
		b = function(g, e) {
			for (var d in e) {
				if (a.call(e, d)) {
					g[d] = e[d]
				}
			}
			function f() {
				this.constructor = g
			}
			f.prototype = e.prototype;
			g.prototype = new f();
			g.__super__ = e.prototype;
			return g
		};
	if ((c = Sierra.Views).Configure == null) {
		c.Configure = {}
	}
	Sierra.Views.Configure.Vcl = (function(d) {
		b(e, d);

		function e() {
			return e.__super__.constructor.apply(this, arguments)
		}
		e.prototype.id = "content";
		e.prototype.template = "configure/overview/vcl.html";
		e.prototype.initialize = function(g, f) {
			return this.data = {
				src: g,
				resource_options: f
			}
		};
		return e
	})(Sierra.PageView)
}).call(this);
(function() {
	var c, a = {}.hasOwnProperty,
		b = function(g, e) {
			for (var d in e) {
				if (a.call(e, d)) {
					g[d] = e[d]
				}
			}
			function f() {
				this.constructor = g
			}
			f.prototype = e.prototype;
			g.prototype = new f();
			g.__super__ = e.prototype;
			return g
		};
	if ((c = Sierra.Views).Configure == null) {
		c.Configure = {}
	}
	Sierra.Views.Configure.Diff = (function(e) {
		b(d, e);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.id = "content";
		d.prototype.template = "configure/overview/diff.html";
		d.prototype.events = {
			"change .version-from": "update_diff",
			"change .version-to": "update_diff"
		};
		d.decide_which_versions = function(g) {
			var h, j, f, i;
			if (g.versions.active() != null) {
				h = Math.max(0, g.versions.active().get("number") - 1);
				j = g.versions.find(function(k) {
					return k.get("number") === h
				});
				if (j != null) {
					f = j.get("number")
				} else {
					f = g.versions.active().get("number")
				}
				i = g.versions.active().get("number")
			} else {
				f = g.versions.models[Math.max(0, g.versions.length - 2)].get("number");
				i = g.versions.models[g.versions.length - 1].get("number")
			}
			return Sierra.navigate("configure/service/" + g.service.id + "/diff/" + f + "," + i)
		};
		d.prototype.initialize = function(g, f, i, h) {
			Sierra.View.prototype.initialize.apply(this);
			this.service_id = g.service.id;
			return this.data = {
				service_id: g.service.id,
				versions: g.versions.serialize(),
				version1: parseInt(f),
				version2: parseInt(i),
				diff: new Handlebars.SafeString(h)
			}
		};
		d.prototype.update_diff = function() {
			var f, g;
			f = $(".version-from").val();
			g = $(".version-to").val();
			return Sierra.navigate("configure/service/" + this.service_id + "/diff/" + f + "," + g)
		};
		return d
	})(Sierra.PageView)
}).call(this);
(function() {
	var a, i, d, g, c, h, e, j, f = {}.hasOwnProperty,
		b = function(n, l) {
			for (var k in l) {
				if (f.call(l, k)) {
					n[k] = l[k]
				}
			}
			function m() {
				this.constructor = n
			}
			m.prototype = l.prototype;
			n.prototype = new m();
			n.__super__ = l.prototype;
			return n
		};
	if ((j = Sierra.Views).Configure == null) {
		j.Configure = {}
	}
	Sierra.Views.Configure.Editor = (function(l) {
		b(k, l);

		function k() {
			return k.__super__.constructor.apply(this, arguments)
		}
		k.prototype.id = "content";
		k.prototype.title = "Edit Service";
		k.prototype.template = "configure/editor/page.html";
		k.prototype.respond_to = {
			"version:activate": "reload",
			"version:deactivate:complete": "reload"
		};
		k.prototype.initialize = function() {
			Sierra.PageView.prototype.initialize.apply(this, arguments);
			this.add_child("#configure_editor .header", new g({
				model: this.model
			}));
			this.add_child("#configure_editor .toolbar", new e({
				model: this.model
			}));
			this.add_child("#configure_editor .sidebar .sidebar-content", (this.sidebar = new h({
				model: this.model
			})));
			this.add_child("#configure_editor .resources", (this.resources = new c({
				model: this.model
			})));
			return this.add_child("#configure_editor .changesbar", new a({
				model: this.model
			}))
		};
		k.prototype.reload = function() {
			return FUI.render(this)
		};
		return k
	})(Sierra.PageView);
	d = (function(k) {
		b(l, k);

		function l() {
			return l.__super__.constructor.apply(this, arguments)
		}
		l.prototype.className = "conditions-overview";
		l.prototype.template = "configure/editor/conditions_overview.html";
		l.prototype.events = {
			"click .delete": "show_confirm_delete"
		};
		l.prototype.respond_to = {
			"resource:changed": "render"
		};
		l.prototype.show_confirm_delete = function(m) {
			var n;
			n = this.model.resources.Conditions.getByCid($(m.target).cid());
			return FUI.confirm_delete(n, (function(o) {
				return function(q, p) {
					return o.delete_condition(q, p)
				}
			})(this))
		};
		l.prototype.delete_condition = function(o, m) {
			var n;
			n = this.model.resources.Conditions;
			m.toggle_loading();
			return this.model.destroy_condition(o, {
				success: (function(p) {
					return function() {
						m.hide();
						n.remove(o);
						return p.model.trigger("resource:changed")
					}
				})(this),
				error: (function(p) {
					return function(q, r) {
						return m.error(r({
							complete: function() {
								return m.toggle_loading()
							}
						}))
					}
				})(this)
			})
		};
		return l
	})(Sierra.View);
	a = (function(l) {
		b(k, l);

		function k() {
			return k.__super__.constructor.apply(this, arguments)
		}
		k.prototype.className = "changesbar";
		k.prototype.template = "configure/editor/changesbar.html";
		k.prototype.partials = {
			deactivate_modal: "configure/overview/modals/deactivate.html",
			validate_modal: "configure/editor/validate_modal.html"
		};
		k.prototype.events = {
			"click .deploy": "deploy",
			"click .version-status-text": "show_validate_modal"
		};
		k.prototype.respond_to = {
			"version:valid": "version_valid",
			"version:warning": "version_warning",
			"version:invalid": "version_invalid"
		};
		k.prototype.ready = function() {
			this.model.validate_changes();
			this.status = $(".version-status-text", this.el);
			this.validate_modal = new FUI.ModalForm(".validate-modal", this.el);
			return Sierra.View.prototype.ready.apply(this, arguments)
		};
		k.prototype.setup = function(n, m) {
			var o;
			$(".undeployed-changes", this.el).hide();
			$(".undeployed-message > *", this.el).hide();
			$(".diff", this.el).hide();
			if (_.isUndefined(this.model.versions.active())) {
				o = false
			} else {
				o = this.model.version.get("number") === this.model.versions.active().get("number")
			}
			if (!o || this.model.changes) {
				if (this.model.changes && this.model.versions.active()) {
					$(".diff", this.el).show()
				}
				if (this.model.version.is_locked()) {
					$(".undeployed-message > .locked", this.el).show();
					$(".deploy", this.el).show()
				} else {
					if (n && m) {
						$(".undeployed-message > .warn", this.el).show();
						$(".deploy", this.el).show()
					} else {
						if (n) {
							$(".undeployed-message > .valid", this.el).show();
							$(".deploy", this.el).show()
						} else {
							$(".undeployed-message > .invalid", this.el).show()
						}
					}
				}
				return $(".undeployed-changes", this.el).show()
			}
		};
		k.prototype.version_valid = function() {
			return this.setup(true, false)
		};
		k.prototype.version_warning = function(m) {
			this.setup(true, true);
			if (this.validate_modal) {
				return this.validate_modal.find(".modal-body").html("<pre>" + (_.escape(m)) + "</pre>")
			}
		};
		k.prototype.version_invalid = function(m) {
			this.setup(false, false);
			if (this.validate_modal) {
				return this.validate_modal.find(".modal-body").html("<pre>" + (_.escape(m)) + "</pre>")
			}
		};
		k.prototype.show_validate_modal = function() {
			return this.validate_modal.show()
		};
		k.prototype.deploy = function(m) {
			if ($(".deploy", this.el).is("[disabled]")) {
				return
			}
			$(".undeployed-message > *", this.el).hide();
			$(".undeployed-message > .deploying", this.el).show();
			$(".deploy-indicator", this.el).show();
			$(".deploy", this.el).hide();
			return this.model.version.activate()
		};
		return k
	})(Sierra.View);
	e = (function(l) {
		b(k, l);

		function k() {
			return k.__super__.constructor.apply(this, arguments)
		}
		k.prototype.className = "toolbar";
		k.prototype.template = "configure/editor/toolbar.html";
		k.prototype.partials = {
			deactivate_modal: "configure/overview/modals/deactivate.html"
		};
		k.prototype.events = {
			"change [name=service_id]": "change_service",
			"change [name=version]": "change_version",
			"click .clone": "clone",
			"click .deploy": "deploy",
			"click .deactivate": "show_deactivate_modal",
			"submit .deactivate-modal form": "deactivate"
		};
		k.prototype.respond_to = {
			"version:validate": "validate",
			"version:validate_complete": "validate_complete",
			"version:valid": "version_valid",
			"version:warning": "version_warning",
			"version:invalid": "version_invalid",
			"service:updated": "update_services"
		};
		k.prototype.ready = function() {
			this.services_search = new FUI.SearchBox(".service-search", this.el, {
				model: this.model.services,
				label: "name",
				search_keys: ["name", "customer_name", "id"],
				template: "fui/search_box/services.html"
			});
			this.versions_search = new FUI.SearchBox(".version-search", this.el, {
				model: this.model.versions,
				label: "number",
				search_keys: ["number"],
				template: "fui/search_box/versions.html"
			});
			this.deactivate_modal = new FUI.ModalForm(".deactivate-modal", this.el);
			this.deactivate_modal.el.on("hidden.bs.modal", (function(m) {
				return function() {
					return m.model.trigger("version:deactivate:complete")
				}
			})(this));
			this.deactivate_btn = $(".deactivate", this.el);
			this.status = $(".version-status", this.el);
			this.validate();
			Sierra.View.prototype.ready.apply(this, arguments);
			return $(".clone", this.el).tooltip(this.model.versions.length === 1 && this.model.version.is_locked() ? "show" : "hide")
		};
		k.prototype.validate = function() {
			this.status.removeClass("active locked valid warning error");
			this.status.addClass("loading");
			return $("img", this.status).show()
		};
		k.prototype.validate_complete = function() {
			this.status.removeClass("loading");
			$("img", this.status).hide();
			if (this.model.version.is_active()) {
				this.deactivate_btn.show();
				this.status.addClass("deployed");
				return $(".label", this.status).text("Activated").addClass("label-default")
			} else {
				if (this.model.version.is_locked()) {
					this.status.addClass("locked");
					return $(".label", this.status).text("Locked").addClass("label-default")
				}
			}
		};
		k.prototype.version_valid = function() {
			if (this.model.version.is_active() || this.model.version.is_locked()) {
				return
			}
			this.status.addClass("valid");
			return $("span.label", this.status).text("Valid").addClass("label-success").attr("title", "Configuration is Valid")
		};
		k.prototype.version_warning = function(m) {
			if (this.model.version.is_active() || this.model.version.is_locked()) {
				return
			}
			this.status.addClass("warning");
			$("span.label", this.status).text("Warning").addClass("label-warning").attr("title", "Configuration is Invalid");
			return FUI.Anim.blink(this.status)
		};
		k.prototype.version_invalid = function(m) {
			if (this.model.version.is_active() || this.model.version.is_locked()) {
				return
			}
			this.status.addClass("error");
			return $("span.label", this.status).text("Error").addClass("label-danger").attr("title", "Error in Configuration")
		};
		k.prototype.update_services = function(m) {
			this.services_search.set_model(this.model.services);
			return this.services_search.set_value(this.model.service.get("name"))
		};
		k.prototype.change_service = function(m) {
			return this.model.set_service_for_editor(m.target.value)
		};
		k.prototype.change_version = function(m) {
			return this.model.set_version(m.target.value)
		};
		k.prototype.clone = function(m) {
			if ($(".clone", this.el).is("[disabled]")) {
				return
			}
			return this.model.version.clone()
		};
		k.prototype.deploy = function(m) {
			if ($(".deploy", this.el).is("[disabled]")) {
				return
			}
			$(".deploy-indicator", this.el).show();
			return this.model.version.activate()
		};
		k.prototype.show_deactivate_modal = function(m) {
			m.preventDefault();
			if (this.deactivate_btn.is("[disabled]")) {
				return
			}
			return this.deactivate_modal.show()
		};
		k.prototype.deactivate = function(m) {
			m.preventDefault();
			this.deactivate_modal.toggle_loading("Deactivating Service");
			return this.model.version.deactivate({
				success: (function(n) {
					return function() {
						return n.deactivate_modal.hide()
					}
				})(this),
				error: (function(n) {
					return function(o) {
						return n.deactivate_modal.error(o)
					}
				})(this),
				complete: (function(n) {
					return function() {
						return n.deactivate_modal.toggle_loading()
					}
				})(this)
			})
		};
		return k
	})(Sierra.View);
	g = (function(k) {
		b(l, k);

		function l() {
			return l.__super__.constructor.apply(this, arguments)
		}
		l.prototype.className = "header";
		l.prototype.template = "configure/editor/header.html";
		l.prototype.events = {
			"focus .service-name": "rename",
			"click .service-name": "disable_tooltip",
			"keydown .service-name": "esc_or_enter",
			"blur .service-name": "check_service_name"
		};
		l.prototype.visualizations = {
			".sparklines": "Sparklines",
			".mini-stats-horiz": "MiniStats"
		};
		l.prototype.ready = function() {
			this.render_visualizations(this.model.service.get("id"));
			return Sierra.View.prototype.ready.apply(this, arguments)
		};
		l.prototype.rename = function(o) {
			var p, m, n;
			o.preventDefault();
			n = $(o.target);
			p = $(".service-name ~ p", this.el);
			p.hide();
			if (p.length != null) {
				p.empty() && n.removeClass("error")
			}
			m = n.text();
			this.serviceName = m;
			return this.model.service.save({
				name: m
			}, {
				error: (function(q) {
					return function(r, u) {
						var s, t;
						s = JSON.parse(u.responseText);
						t = s.detail;
						p.text(t);
						n.addClass("error");
						return p.show()
					}
				})(this)
			})
		};
		l.prototype.disable_tooltip = function() {
			return $(".service-name", this.el).tooltip("hide")
		};
		l.prototype.esc_or_enter = function(o) {
			var p, m, n;
			m = o.which === 27;
			p = o.which === 13;
			n = $(o.target);
			if (m) {
				document.execCommand("undo") && this.rename(o) && n.blur()
			}
			if (p) {
				return this.rename(o) && n.blur()
			}
		};
		l.prototype.check_service_name = function(n) {
			var m;
			m = $(n.target).text();
			if (m !== this.serviceName) {
				return $(n.target).text(this.serviceName)
			}
		};
		return l
	})(Sierra.View);
	h = (function(l) {
		b(k, l);

		function k() {
			return k.__super__.constructor.apply(this, arguments)
		}
		k.prototype.className = "sidebar-content";
		k.prototype.template = "configure/editor/sidebar.html";
		k.prototype.respond_to = {
			"section:changed": "section_changed"
		};
		k.prototype.render = function() {
			k.__super__.render.call(this);
			return this.set_section()
		};
		k.prototype.section_changed = function(m) {
			this.section = m;
			return this.set_section()
		};
		k.prototype.set_section = function() {
			var o, n, m;
			if (!this.section) {
				return
			}
			n = null;
			$("li a", this.el).each((function(p) {
				return function(q, r) {
					if (r.href.match(p.section)) {
						return n = r
					}
				}
			})(this));
			$("li", this.el).removeClass("selected");
			m = $(n).parents("li").addClass("selected");
			if ((o = $("li img.arrow", this.el)).size() > 0) {
				o.remove();
				return m.append(o)
			} else {
				return m.append('<img class="arrow" src="images/fat-nav-arrow.png">')
			}
		};
		return k
	})(Sierra.View);
	i = (function(l) {
		b(k, l);

		function k() {
			return k.__super__.constructor.apply(this, arguments)
		}
		k.prototype.id = "condition-modal";
		k.prototype.template = "common/condition_modal.html";
		k.prototype.events = {
			"click .edit": "edit_condition",
			"click .copy": "copy_condition",
			"click .new": "new_condition",
			"click .choose": "choose_condition",
			"change .choose-condition [name=name]": "change_condition",
			"submit form": "submit"
		};
		k.prototype.initialize = function(m) {
			Sierra.View.prototype.initialize.apply(this, arguments);
			return this.conditions = this.model.resources.Conditions
		};
		k.prototype.ready = function() {
			this.form_el = $(".modal", this.el);
			return this.form = new FUI.ModalForm(this.form_el)
		};
		k.prototype.state = function(m) {
			if (m == null) {
				return $(this.form_el).attr("data-state")
			}
			return $(this.form_el).attr("data-state", m)
		};
		k.prototype.field_name = function() {
			return "" + (this.type.toLowerCase()) + "_condition"
		};
		k.prototype.update_list = function() {
			var n, m;
			n = _.reject(this.conditions.serialize(), (function(o) {
				return function(p) {
					return p.type !== o.type
				}
			})(this));
			m = FUI.render("common/condition_options.html", {
				conditions: n
			});
			return $(".choose-condition [name=name]", this.form_el).html(m)
		};
		k.prototype.edit_condition = function(n) {
			var m;
			n.preventDefault();
			m = this.condition.serialize();
			this.form.reset(m);
			$(".code.name").text(m.name);
			this.state("edit");
			return $("[name=statement]").focus()
		};
		k.prototype.copy_condition = function(n) {
			var m;
			n.preventDefault();
			m = this.condition.serialize();
			m.name = "";
			this.form.reset(m);
			this.state("new");
			return $("[name=name]").focus()
		};
		k.prototype.new_condition = function(m) {
			m.preventDefault();
			this.form.reset({
				name: "",
				statement: "",
				priority: 10
			});
			this.state("new");
			return $("[name=name]").focus()
		};
		k.prototype.choose_condition = function(m) {
			m.preventDefault();
			this.state("choose");
			return $(".choose-condition [name=name]", this.el).val(this.condition.get("name")).focus()
		};
		k.prototype.change_condition = function() {
			this.condition = this.conditions.get(this.form.fields(".choose-condition").name);
			if (this.condition != null) {
				$(".statement-group, .priority-group", this.form_el).show();
				$(".modal-controls .edit, .modal-controls .copy").removeAttr("disabled");
				$(".choose-condition .statement", this.form_el).text(this.condition.get("statement"));
				return $(".choose-condition .priority", this.form_el).text(this.condition.get("priority"))
			} else {
				$(".statement-group, .priority-group", this.form_el).hide();
				$(".modal-controls .edit, .modal-controls .copy").attr("disabled", "disabled");
				$(".choose-condition .statement", this.form_el).html("");
				return $(".choose-condition .priority", this.form_el).html("")
			}
		};
		k.prototype.show = function(o) {
			var m, n;
			if ($(o.target).attr("data-type") != null) {
				n = $(o.target)
			} else {
				n = $(o.target).parents()
			}
			this.collection = this.model.resources[n.attr("data-collection")];
			this.resource = this.collection.getByCid(n.cid());
			this.type = n.attr("data-type");
			if (this.conditions.size(this.type) > 0) {
				this.state("choose");
				this.update_list();
				if (m = this.resource.get("" + (this.type.toLowerCase()) + "_condition")) {
					this.form.field("name", m)
				}
				this.change_condition()
			} else {
				this.state("first");
				this.form.reset({
					name: "",
					statement: "",
					priority: 10
				})
			}
			return this.form.show()
		};
		k.prototype.create_condition = function() {
			var n, m;
			if (!this.form.validate(".edit-condition")) {
				return
			}
			m = this.form.fields(".edit-condition");
			m.type = this.type;
			n = new Sierra.Models.Condition({
				service_id: this.model.service.get("id"),
				version: this.model.version.get("number")
			});
			this.form.toggle_loading();
			return n.save(m, {
				success: (function(o) {
					return function() {
						var p;
						o.conditions.add(n);
						p = {};
						p[o.field_name()] = m.name;
						return o.resource.save(p, {
							success: function() {
								o.form.hide();
								o.model.trigger("resource:changed");
								return o.model.validate_changes()
							},
							error: function(q, r) {
								return o.form.error(r)
							},
							complete: function() {
								return o.form.toggle_loading()
							}
						})
					}
				})(this),
				error: (function(o) {
					return function(p, q) {
						o.form.error(q);
						return o.form.toggle_loading()
					}
				})(this)
			})
		};
		k.prototype.update_condition = function() {
			var m;
			if (!this.form.validate(".edit-condition")) {
				return
			}
			m = this.form.fields(".edit-condition");
			this.form.toggle_loading();
			return this.condition.save(m, {
				success: (function(n) {
					return function() {
						var o;
						if (n.condition.get("name") === n.resource.get(n.field_name())) {
							n.form.toggle_loading();
							n.model.trigger("resource:changed");
							n.model.validate_changes();
							return n.form.hide()
						}
						o = {};
						o[n.field_name()] = n.condition.get("name");
						return n.resource.save(o, {
							success: function() {
								n.form.hide();
								return n.model.trigger("resource:changed")
							},
							error: function(p, q) {
								return n.form.error(q)
							},
							complete: function() {
								return n.form.toggle_loading()
							}
						})
					}
				})(this),
				error: (function(n) {
					return function(o, p) {
						n.form.error(p);
						return n.form.toggle_loading()
					}
				})(this)
			})
		};
		k.prototype.assign_condition = function() {
			var m;
			m = {};
			m[this.field_name()] = this.form.fields(".choose-condition").name;
			this.form.toggle_loading();
			return this.resource.save(m, {
				success: (function(n) {
					return function() {
						n.form.hide();
						n.model.trigger("resource:changed");
						return n.model.validate_changes()
					}
				})(this),
				error: (function(n) {
					return function(o, p) {
						return n.form.error(p)
					}
				})(this),
				complete: (function(n) {
					return function() {
						return n.form.toggle_loading()
					}
				})(this)
			})
		};
		k.prototype.submit = function(m) {
			m.preventDefault();
			switch (this.state()) {
			case "first":
			case "new":
				return this.create_condition();
			case "edit":
				return this.update_condition();
			case "choose":
				return this.assign_condition()
			}
		};
		return k
	})(Sierra.View);
	c = (function(k) {
		b(l, k);

		function l() {
			return l.__super__.constructor.apply(this, arguments)
		}
		l.prototype.className = "resources main col-md-8";
		l.prototype.template = "configure/editor/resources.html";
		l.prototype.events = {
			"submit .settings-form": "save_settings",
			"click .resource-condition": "show_condition_modal"
		};
		l.prototype.restricted_views = {
			"#vcls": "can_upload_vcl",
			"#syslogs": "can_stream_syslog",
			"#wordpress": "can_configure_wordpress"
		};
		l.prototype.resources = {
			"#backends": "Backends",
			"#domains": "Domains",
			"#healthchecks": "HealthChecks",
			"#request_settings": "RequestSettings",
			"#cache_settings": "CacheSettings",
			"#response_objects": "ResponseObjects",
			"#headers": "Headers",
			"#vcls": "Vcls",
			"#syslogs": "SysLogs",
			"#logentries": "Logentries",
			"#papertrails": "Papertrails",
			"#sumologics": "Sumologics",
			"#splunk_storms": "SplunkStorms",
			"#s3s": "S3s",
			"#ftps": "FTPs",
			"#openstacks": "OpenStacks",
			"#logshuttles": "LogShuttles",
			"#cloudfiles": "Cloudfiles",
			"#wordpress": "Wordpress",
			"#gzip": "Gzip"
		};
		l.prototype.respond_to = {
			"section:changed": "section_changed"
		};
		l.prototype.initialize = function() {
			var o, m, p, n;
			Sierra.View.prototype.initialize.apply(this, arguments);
			this.add_child("#condition-modal", (this.condition_modal = new i({
				model: this.model
			})));
			this.add_child(".conditions-overview", new d({
				model: this.model
			}));
			p = this.resources;
			n = [];
			for (m in p) {
				o = p[m];
				n.push(this.add_child(m, new Sierra.Views.Resources[o]({
					model: this.model
				})))
			}
			return n
		};
		l.prototype.ready = function() {
			var n, o, m, p;
			this.set_message();
			this.settings_form = new FUI.Form(".settings-form", this.el);
			p = this.resources;
			for (m in p) {
				n = p[m];
				o = this.restricted_views[m];
				if ((o != null) && !Sierra.customer.has_option(o)) {
					$(m, this.el).remove()
				}
			}
			return Sierra.View.prototype.ready.apply(this, arguments)
		};
		l.prototype.render = function() {
			l.__super__.render.call(this);
			return this.set_section()
		};
		l.prototype.section_changed = function(m) {
			this.section = m;
			return this.set_section()
		};
		l.prototype.set_section = function() {
			if (!this.section) {
				return
			}
			$(".nav-section", this.el).hide();
			return $(".nav-sections #" + this.section, this.el).show()
		};
		l.prototype.set_message = function() {
			var m, n;
			if ((n = this.model.get_message()) == null) {
				return
			}
			m = '<div class="alert alert-success"><button class="close" data-dismiss="alert">Ã—</button>' + n + "</div>";
			return $(this.el).prepend(m)
		};
		l.prototype.destroy = function() {
			delete this.settings_form;
			return Sierra.View.prototype.destroy.apply(this, arguments)
		};
		l.prototype.save_settings = function(m) {
			m.preventDefault();
			this.settings_form.toggle_loading();
			return this.model.save_settings({
				data: this.settings_form.fields(),
				success: (function(n) {
					return function() {
						return n.settings_form.flash("Settings Saved", "success")
					}
				})(this),
				error: (function(n) {
					return function(o) {
						return n.settings_form.error(o)
					}
				})(this),
				complete: (function(n) {
					return function() {
						return n.settings_form.toggle_loading()
					}
				})(this)
			})
		};
		l.prototype.show_condition_modal = function(m) {
			m.preventDefault();
			return this.condition_modal.show(m)
		};
		return l
	})(Sierra.View)
}).call(this);
(function() {
	var e, d, g, f, j, k, b, i, a, h = {}.hasOwnProperty,
		c = function(o, m) {
			for (var l in m) {
				if (h.call(m, l)) {
					o[l] = m[l]
				}
			}
			function n() {
				this.constructor = o
			}
			n.prototype = m.prototype;
			o.prototype = new n();
			o.__super__ = m.prototype;
			return o
		};
	d = (function(m) {
		c(l, m);

		function l() {
			return l.__super__.constructor.apply(this, arguments)
		}
		l.prototype.id = "content";
		l.prototype.layout = "Auth";
		l.prototype.redirect_to_login = function(n) {
			n.preventDefault();
			Sierra.user = null;
			return Sierra.navigate("login")
		};
		return l
	})(Sierra.PageView);
	g = (function(l) {
		c(m, l);

		function m() {
			return m.__super__.constructor.apply(this, arguments)
		}
		m.prototype.title = "Login";
		m.prototype.template = "auth/login.html";
		m.prototype.events = {
			"submit form.login": "login",
			"click a.demo-signup": "demo_signup"
		};
		m.prototype.ready = function() {
			this.form = new FUI.Form("form.login", this.el);
			return this.form.find("[name=email]").focus()
		};
		m.prototype.login = function(n) {
			n.preventDefault();
			if (!this.form.validate()) {
				return
			}
			this.form.flash("");
			return Fastly.login(this.form.field("email"), this.form.field("password"), {
				error: (function(o) {
					return function(p) {
						return o.form.flash(p.msg)
					}
				})(this)
			})
		};
		m.prototype.demo_signup = function(n) {
			n.preventDefault();
			return Fastly.post("/staging/demo", null, {
				success: function() {
					return window.location.reload()
				}
			})
		};
		return m
	})(d);
	i = (function(m) {
		c(l, m);

		function l() {
			return l.__super__.constructor.apply(this, arguments)
		}
		l.prototype.title = "Login";
		l.prototype.template = "auth/two_factor_login.html";
		l.prototype.layout = "Blank";
		l.prototype.events = {
			"submit form": "verify_with_authenticator",
			"click a#nav-login": "redirect_to_login"
		};
		l.prototype.ready = function() {
			this.form = new FUI.Form("form", this.el);
			return this.form.find("[name=token]").focus()
		};
		l.prototype.verify_with_authenticator = function(n) {
			n.preventDefault();
			if (!this.form.validate()) {
				return
			}
			this.form.flash("");
			this.form.toggle_loading("Verifying..");
			return Sierra.user.verify_with_authenticator(this.form.field("token"), {
				error: (function(o) {
					return function() {
						return o.form.flash("The code provided is invalid.")
					}
				})(this)
			})
		};
		return l
	})(d);
	a = (function(l) {
		c(m, l);

		function m() {
			return m.__super__.constructor.apply(this, arguments)
		}
		m.prototype.title = "Login";
		m.prototype.template = "auth/two_factor_recovery_code_login.html";
		m.prototype.layout = "Blank";
		m.prototype.events = {
			"submit form": "verify_with_recovery_code",
			"click a#nav-login": "redirect_to_login"
		};
		m.prototype.ready = function() {
			this.form = new FUI.Form("form", this.el);
			return this.form.find("[name=code]").focus()
		};
		m.prototype.verify_with_recovery_code = function(n) {
			n.preventDefault();
			if (!this.form.validate()) {
				return
			}
			this.form.flash("");
			return Sierra.user.verify_with_recovery_code(this.form.field("code"), {
				error: (function(o) {
					return function(p) {
						return o.form.flash("The code provided is invalid.")
					}
				})(this)
			})
		};
		return m
	})(d);
	k = (function(m) {
		c(l, m);

		function l() {
			return l.__super__.constructor.apply(this, arguments)
		}
		l.prototype.title = "Sign Up";
		l.prototype.template = "auth/signup.html";
		l.prototype.events = {
			"submit form.signup": "signup"
		};
		l.prototype.ready = function() {
			this.form = new FUI.Form("form.signup", this.el);
			return this.form.find("[name=login]").focus()
		};
		l.prototype.signup = function(n) {
			n.preventDefault();
			if (this.form.is_loading() || !this.form.validate()) {
				return
			}
			this.form.toggle_loading();
			return Fastly.signup(this.form.fields(), {
				success: (function(o) {
					return function(p) {
						Sierra.GA.conversion();
						o.model.set_signup_fields(o.form.fields());
						return Sierra.navigate("#thanks")
					}
				})(this),
				error: (function(o) {
					return function(p) {
						var q;
						q = p.msg;
						if (p["class"] === "Customer" && (p.errors.name != null)) {
							q = "A company with the name '" + (escape(o.form.field("company"))) + "' already exists."
						}
						return o.form.flash(q)
					}
				})(this),
				complete: (function(o) {
					return function() {
						return o.form.toggle_loading()
					}
				})(this)
			})
		};
		return l
	})(d);
	b = (function(m) {
		c(l, m);

		function l() {
			return l.__super__.constructor.apply(this, arguments)
		}
		l.prototype.title = "Sign Up - Thank you!";
		l.prototype.template = "auth/thank_you.html";
		return l
	})(d);
	f = (function(m) {
		c(l, m);

		function l() {
			return l.__super__.constructor.apply(this, arguments)
		}
		l.prototype.title = "Password Reset";
		l.prototype.template = "auth/request_reset_password.html";
		l.prototype.events = {
			"submit form.request_reset": "request_reset_password"
		};
		l.prototype.ready = function() {
			this.form = new FUI.Form("form.request_reset", this.el);
			return this.form.find("[name=email]").focus()
		};
		l.prototype.request_reset_password = function(n) {
			n.preventDefault();
			if (!this.form.validate()) {
				return
			}
			return Sierra.Models.User.request_reset(this.form.field("email"), {
				success: (function(o) {
					return function() {
						o.form.reset();
						return o.form.flash("Instructions sent. Please check your inbox.", "success")
					}
				})(this),
				error: (function(o) {
					return function(p) {
						return o.form.flash("Request Failed: " + p.msg + ", please try again.")
					}
				})(this)
			})
		};
		return l
	})(d);
	j = (function(m) {
		c(l, m);

		function l() {
			return l.__super__.constructor.apply(this, arguments)
		}
		l.prototype.title = "Reset Password";
		l.prototype.template = "auth/reset_password.html";
		l.prototype.events = {
			"submit form.reset_password": "reset_password"
		};
		l.prototype.ready = function() {
			return this.form = new FUI.Form("form.reset_password", this.el)
		};
		l.prototype.reset_password = function(n) {
			n.preventDefault();
			return this.model.reset_password({
				success: (function(o) {
					return function() {
						return o.form.flash(new Handlebars.SafeString('Temporary password sent to your inbox. Now go and <a href="#login">login</a>.'), "success")
					}
				})(this),
				error: (function(o) {
					return function(p) {
						return o.form.flash("Could not reset password: " + p.msg.toLowerCase() + ".")
					}
				})(this)
			})
		};
		return l
	})(d);
	e = (function(l) {
		c(m, l);

		function m() {
			return m.__super__.constructor.apply(this, arguments)
		}
		m.prototype.title = "Accept Invitation";
		m.prototype.template = "auth/accept_invitation.html";
		m.prototype.events = {
			"submit form.accept_invitation": "accept"
		};
		m.prototype.ready = function() {
			this.form = new FUI.Form("form.accept_invitation", this.el);
			return this.form.find("[name=name]").focus()
		};
		m.prototype.accept = function(n) {
			n.preventDefault();
			if (!this.form.validate()) {
				return
			}
			this.form.toggle_loading();
			return this.model.accept_invitation(this.form.fields(), {
				success: (function(o) {
					return function() {
						return window.location.reload()
					}
				})(this),
				error: (function(o) {
					return function(p) {
						return o.form.flash(p.detail || p.msg)
					}
				})(this),
				complete: (function(o) {
					return function() {
						return o.form.toggle_loading()
					}
				})(this)
			})
		};
		return m
	})(d);
	Sierra.Views.Auth = {
		Login: g,
		TwoFactorLogin: i,
		TwoFactorRecoveryCodeLogin: a,
		SignUp: k,
		ThankYou: b,
		RequestResetPassword: f,
		ResetPassword: j,
		AcceptInvitation: e
	}
}).call(this);
(function() {
	var f, k, g, b, l, h, j, e, d, a, i = {}.hasOwnProperty,
		c = function(p, n) {
			for (var m in n) {
				if (i.call(n, m)) {
					p[m] = n[m]
				}
			}
			function o() {
				this.constructor = p
			}
			o.prototype = n.prototype;
			p.prototype = new o();
			p.__super__ = n.prototype;
			return p
		};
	Handlebars.registerHelper("statistic", function(n, m, p) {
		var o;
		if (p == null) {
			p = true
		}
		o = FUI.render("stats/partials/statistic.html", {
			name: n,
			label: m,
			show_total: p
		});
		return new Handlebars.SafeString(o)
	});
	Handlebars.registerHelper("stat_controls", function(n) {
		var o, m;
		if (n == null) {
			n = false
		}
		if ($.type(n) === "boolean" && n) {
			o = {
				zoom: true
			}
		} else {
			o = null
		}
		m = FUI.render("stats/partials/stat_controls.html", o);
		return new Handlebars.SafeString(m)
	});
	a = function(m) {
		return parseFloat((m * 100).toFixed(1)) + "%"
	};
	d = (function() {
		function m() {}
		m.prototype.makeTooltip = function() {
			this.tooltip = $("<div/>").addClass("graph-tooltip").css("bottom", this.height + 6);
			this.el.append(this.tooltip);
			this.mouseLine = d3.select($("svg", this.el)[0]).append("line").attr({
				display: "none",
				stroke: "#333",
				"stroke-opacity": 0.75,
				"stroke-width": 1,
				y1: 0,
				y2: this.height - this.margins.bottom
			}).style("pointer-events", "none");
			return this.svg.append("rect").classed("events-shield", true).attr({
				opacity: 0,
				width: this.width - this.margins.left - this.margins.right,
				height: this.height - this.margins.top - this.margins.bottom
			})
		};
		m.prototype.unprojectX = function(n) {
			return this.x().invert(n)
		};
		m.prototype.overlayAt = function(q, t) {
			var p, r, u, w, n, s, o;
			this.mouseLine.attr({
				x1: Math.round(q) - 1,
				x2: Math.round(q) - 1,
				display: null
			});
			p = d3.bisector(function(v) {
				return v.x
			}).left;
			w = {};
			o = this.data;
			for (n = 0, s = o.length; n < s; n++) {
				r = o[n];
				u = r.values[p(r.values, t)];
				w[r.label] = u ? u.y : null
			}
			return w
		};
		m.prototype.endOverlay = function() {
			return this.mouseLine.attr("display", "none")
		};
		m.prototype.xTooltip = function(o, n) {
			this.tooltip.text(moment.unix(n).format());
			return this.tooltip.css({
				left: Math.round(o) - 2,
				visibility: "visible"
			})
		};
		m.prototype.hideXTooltip = function() {
			return this.tooltip.css("visibility", "")
		};
		return m
	})();
	f = (function(n) {
		c(m, n);

		function m() {
			return m.__super__.constructor.apply(this, arguments)
		}
		m.prototype.x = function() {
			return d3.scale.linear().domain(this.options.domain).range([0, this.innerWidth()])
		};
		m.prototype.bottomAxis = function() {
			var o, t, w, x, v, y, p, A, z, u, r, s, q;
			y = [];
			w = this.options.ticks.bottom;
			A = this.data[0].values;
			s = this.options.domain, u = s[0], z = s[1];
			p = z - u;
			x = 900;
			while ((p / x) > w) {
				if (x === 7200) {
					x = 3 * 3600
				} else {
					if (x >= 86400) {
						x += 86400
					} else {
						x *= 2
					}
				}
			}
			v = x < 86400 ? x : 86400;
			o = v * Math.ceil(u / v);
			for (t = r = 0, q = Math.ceil(p / x); 0 <= q ? r <= q : r >= q; t = 0 <= q ? ++r : --r) {
				if ((o + t * x) > z) {
					break
				}
				y.push(o + t * x)
			}
			return d3.svg.axis().scale(this.x()).orient("bottom").tickFormat(this.options.tickFormats.bottom).tickValues(y)
		};
		m.prototype.draw = function() {
			m.__super__.draw.call(this);
			if (!this.tooltip) {
				return this.makeTooltip()
			}
		};
		return m
	})(FUI.mixOf(Epoch.Chart.Area, d));
	b = (function(n) {
		c(m, n);

		function m() {
			return m.__super__.constructor.apply(this, arguments)
		}
		m.prototype.y = function() {
			var o;
			if (this.options.tight) {
				o = [0, this.extent(function(p) {
					return p.y
				})[1]]
			} else {
				o = [0, 1]
			}
			return d3.scale.linear().domain(o).range([this.innerHeight(), 0])
		};
		m.prototype.getYTicks = function() {
			var o;
			if (this.options.tight) {
				o = this.extent(function(p) {
					return p.y
				})[1]
			} else {
				o = 1
			}
			if (o / 2 < 0.001) {
				return [0, o]
			} else {
				return [0, o / 2, o]
			}
		};
		m.prototype.leftAxis = function() {
			return d3.svg.axis().scale(this.y()).orient("left").tickFormat(a).tickValues(this.getYTicks())
		};
		m.prototype.rightAxis = function() {
			return d3.svg.axis().scale(this.y()).orient("right").tickFormat(a).tickValues(this.getYTicks())
		};
		return m
	})(f);
	l = (function(n) {
		c(m, n);

		function m() {
			return m.__super__.constructor.apply(this, arguments)
		}
		m.prototype._cleanExtent = function() {
			var o, p, q;
			q = this.extent(function(r) {
				return r.y
			}), p = q[0], o = q[1];
			p = Math.floor(p * 100);
			o = Math.ceil(o * 100);
			if ((p + o) % 2 === 1) {
				p--
			}
			return [p / 100, o / 100]
		};
		m.prototype.getYTicks = function() {
			var o, p, q;
			q = this._cleanExtent(), p = q[0], o = q[1];
			return [p, p + ((o - p) / 2), o]
		};
		m.prototype.y = function() {
			return d3.scale.linear().domain(this._cleanExtent()).range([this.innerHeight(), 0])
		};
		m.prototype.leftAxis = function() {
			return d3.svg.axis().scale(this.y()).orient("left").tickFormat(a).tickValues(this.getYTicks())
		};
		m.prototype.rightAxis = function() {
			return d3.svg.axis().scale(this.y()).orient("right").tickFormat(a).tickValues(this.getYTicks())
		};
		m.prototype.draw = function() {
			m.__super__.draw.call(this);
			if (!this.tooltip) {
				return this.makeTooltip()
			}
		};
		return m
	})(FUI.mixOf(Epoch.Chart.Line, d));
	j = (function(m) {
		c(n, m);
		n.prototype.attributes = {
			"stat-row": ""
		};
		n.prototype.events = {
			"click .statistic-check": "toggle_statistic",
			"click .statistic-menu .dropdown-menu a": "change_statistic_type",
			"click .stats-controls .image": "download_screen_shot",
			"click .stats-controls .help": "show_help_popover",
			"click .stats-controls .zoom": "zoom_y"
		};
		n.prototype.respond_to = {
			update: "update_chart"
		};
		n.prototype.stats_image_css = null;
		n.prototype.stat_format = function(o) {
			return FUI.format_si(o, 1)
		};
		n.prototype.tightYAxis = false;

		function n(o) {
			n.__super__.constructor.call(this, o);
			this.statistic_types = {}
		}
		n.prototype.ready = function() {
			this.chart = new f({
				el: $(".stats-chart", this.el),
				data: this.model.active.epoch_data(this.statistics),
				tickFormats: {
					bottom: this.model.get_time_format()
				},
				ticks: {
					bottom: 10
				},
				sampleBy: this.model.by,
				axes: ["left", "bottom", "right"],
				tight: this.tightYAxis,
				domain: [this.model.from, this.model.to]
			});
			this.chart.draw();
			this.init_help();
			return this.init_statistics()
		};
		n.prototype.zoom_y = function(o) {
			return o.preventDefault()
		};
		n.prototype.update_chart = function() {
			this.chart.options.tickFormats.bottom = this.model.get_time_format();
			this.chart.options.domain = [this.model.from, this.model.to];
			this.chart.options.sampleBy = this.model.by;
			this.chart.update(this.model.active.epoch_data(this.statistics));
			return this.init_statistics()
		};
		n.prototype.unproject_x = function(o) {
			if (this.chart) {
				return this.chart.unprojectX(o)
			} else {
				return void 0
			}
		};
		n.prototype.overlay_chart_values = function(t, o) {
			var s, q, r, v, u, p;
			if (this.chart) {
				u = this.chart.overlayAt(t, o);
				p = [];
				for (q in u) {
					v = u[q];
					r = $(".statistic[data-name='" + q + "']", this.el);
					$(".statistic-type, .statistic-menu", r).toggle(false);
					if (v === null) {
						s = "-"
					} else {
						s = this.stat_format(v)
					}
					p.push($(".statistic-value", r).text(s))
				}
				return p
			}
		};
		n.prototype.end_overlay = function() {
			if (this.chart) {
				this.chart.endOverlay()
			}
			return this.init_statistics()
		};
		n.prototype.x_tooltip = function(p, o) {
			if (this.chart) {
				return this.chart.xTooltip(p, o)
			}
		};
		n.prototype.hide_x_tooltip = function() {
			return this.chart.hideXTooltip()
		};
		n.prototype.init_help = function() {
			this.help_popover = $(".stats-controls .help", this.el);
			return this.help_popover.popover({
				animation: true,
				html: true,
				content: FUI.render(this.help_template),
				placement: "bottom",
				trigger: "click"
			})
		};
		n.prototype.init_statistics = function() {
			var t, v, q, u, s, p, r, o;
			r = this.statistics;
			o = [];
			for (s = 0, p = r.length; s < p; s++) {
				q = r[s];
				v = $(".statistic[data-name=" + q + "]", this.el);
				this.statistic_types[q] = this.statistic_types[q] || "avg";
				t = {
					"95th": "nintyfifth",
					avg: "avg",
					max: "max",
					min: "min",
					total: "total"
				};
				$(".statistic-type", v).text(this.statistic_types[q]).toggle(true);
				$(".statistic-menu").toggle(true);
				u = this.stat_format(this.model.active[t[this.statistic_types[q]]](q));
				o.push($(".statistic-value", v).text(u))
			}
			return o
		};
		n.prototype.show_help_popover = function(o) {
			return o.preventDefault()
		};
		n.prototype.toggle_statistic = function(s) {
			var o, r, q, p;
			o = $(s.target);
			if (!o.hasClass("statistic-check")) {
				o = o.parents(".statistic-check")
			}
			p = o.parents(".statistic").attr("data-name");
			if (o.attr("data-state") === "on") {
				o.attr("data-state", "off");
				o.html('<span class="glyphicon glyphicon-minus"></span>');
				q = this.statistics.indexOf(p);
				this.statistics.splice(q, 1)
			} else {
				o.attr("data-state", "on");
				o.html('<span class="glyphicon glyphicon-ok"></span>');
				this.statistics.push(p)
			}
			if (this.statistics.length) {
				r = this.model.active.epoch_data(this.statistics);
				return this.chart.update(r)
			}
		};
		n.prototype.change_statistic_type = function(q) {
			var o, p;
			q.preventDefault();
			o = $(q.target).parents(".statistic").attr("data-name");
			p = q.target.className;
			this.statistic_types[o] = p;
			return this.init_statistics()
		};
		n.prototype.download_screen_shot = function(s) {
			var p, u, q, o, t, r;
			s.preventDefault();
			q = $(s.target).parents(".stats-header").siblings(".stats-row").find(".statistic").attr("data-name");
			o = (r = this.model.service_id) != null ? r : "all_services";
			u = this.model.from;
			t = this.model.to;
			p = (function(v) {
				return function() {
					var A, B, C, z, y, x;
					x = [v.chart.el.width(), v.chart.el.height()], y = x[0], B = x[1];
					A = $('<canvas width="' + y + '" height="' + B + '"></canvas>')[0];
					z = '<style type="text/css"><![CDATA[' + v.stats_image_css + "]]></style>" + $("svg", v.chart.el)[0].innerSVG;
					canvg(A, '<svg width="' + y + '" height="' + B + '">' + z + "</svg>");
					C = $("<a/>").attr({
						href: A.toDataURL("image/png"),
						download: "stats-" + q + "-" + o + "-" + u + "-" + t + ".png"
					});
					return C[0].dispatchEvent(new MouseEvent("click"))
				}
			})(this);
			if (this.stats_image_css == null) {
				return $.get("/stylesheets/stats_image.css", (function(v) {
					return function(w) {
						v.stats_image_css = w;
						return p()
					}
				})(this))
			} else {
				return p()
			}
		};
		return n
	})(Sierra.View);
	k = (function(m) {
		c(n, m);

		function n() {
			return n.__super__.constructor.apply(this, arguments)
		}
		n.prototype.stat_format = function(o) {
			return FUI.format_bytes(o, 1)
		};
		n.prototype.ready = function() {
			this.chart = new f({
				el: $(".stats-chart", this.el),
				data: this.model.active.epoch_data(this.statistics),
				tickFormats: {
					bottom: this.model.get_time_format(),
					left: function(o) {
						return FUI.format_bytes(o, 0)
					},
					right: function(o) {
						return FUI.format_bytes(o, 0)
					}
				},
				ticks: {
					left: 5,
					bottom: 10
				},
				sampleBy: this.model.by,
				axes: ["left", "bottom", "right"],
				tight: this.tightYAxis,
				domain: [this.model.from, this.model.to]
			});
			this.chart.draw();
			this.init_statistics();
			return this.init_help()
		};
		return n
	})(j);
	h = (function(n) {
		c(m, n);
		m.prototype.stat_format = a;

		function m(o) {
			m.__super__.constructor.call(this, o);
			this.zoomedIn = false
		}
		m.prototype.zoom_y = function(p) {
			var o;
			o = $("button.zoom", this.el);
			if (!this.zoomedIn) {
				$("span.glyphicon", o).removeClass("glyphicon-zoom-in").addClass("glyphicon-zoom-out");
				this.chart.el.hide();
				this.variance.el.show()
			} else {
				$("span.glyphicon").removeClass("glyphicon-zoom-out").addClass("glyphicon-zoom-in");
				this.variance.el.hide();
				this.chart.el.show()
			}
			return this.zoomedIn = !this.zoomedIn
		};
		m.prototype.update_chart = function() {
			this.variance.options.tickFormats.bottom = this.model.get_time_format();
			this.variance.options.domain = [this.model.from, this.model.to];
			this.variance.options.sampleBy = this.model.by;
			this.variance.update(this.model.active.epoch_data(this.statistics));
			return m.__super__.update_chart.call(this)
		};
		m.prototype.ready = function() {
			this.chart = new b({
				data: this.model.active.epoch_data(this.statistics),
				el: $(".stats-chart", this.el),
				tickFormats: {
					bottom: this.model.get_time_format()
				},
				ticks: {
					bottom: 10
				},
				sampleBy: this.model.by,
				axes: ["left", "bottom", "right"],
				tight: this.tightYAxis,
				domain: [this.model.from, this.model.to]
			});
			this.variance = new l({
				data: this.model.active.epoch_data(this.statistics),
				tickFormats: {
					bottom: this.model.get_time_format()
				},
				ticks: {
					bottom: 10
				},
				el: $(".variance-chart", this.el),
				axes: ["left", "right", "bottom"],
				domain: [this.model.from, this.model.to]
			});
			this.chart.draw();
			this.variance.draw();
			this.init_statistics();
			return this.init_help()
		};
		m.prototype.unproject_x = function(o) {
			if (!this.zoomedIn) {
				return m.__super__.unproject_x.call(this, o)
			}
			if (this.variance != null) {
				return this.variance.unprojectX(o)
			}
		};
		m.prototype.overlay_chart_values = function(t, o) {
			var s, q, r, v, u, p;
			if (!this.zoomedIn) {
				return m.__super__.overlay_chart_values.call(this, t, o)
			}
			u = this.variance.overlayAt(t, o);
			p = [];
			for (q in u) {
				v = u[q];
				r = $(".statistic[data-name='" + q + "']", this.el);
				$(".statistic-type, .statistic-menu", r).toggle(false);
				if (v === null) {
					s = "-"
				} else {
					s = this.stat_format(v)
				}
				p.push($(".statistic-value", r).text(s))
			}
			return p
		};
		m.prototype.end_overlay = function() {
			this.variance.endOverlay();
			return m.__super__.end_overlay.call(this)
		};
		m.prototype.x_tooltip = function(p, o) {
			if (!this.zoomedIn) {
				return m.__super__.x_tooltip.call(this, p, o)
			}
			return this.variance.xTooltip(p, o)
		};
		m.prototype.hide_x_tooltip = function() {
			this.variance.hideXTooltip();
			return m.__super__.hide_x_tooltip.call(this)
		};
		return m
	})(j);
	e = (function(o) {
		var m;
		c(n, o);

		function n() {
			return n.__super__.constructor.apply(this, arguments)
		}
		m = "YYYY-MM-DD H:mm";
		n.prototype.className = "toolbar";
		n.prototype.template = "stats/toolbar.html";
		n.prototype.events = {
			"change [name=service_id]": "change_service_id",
			"change [name=by]": "change_by",
			"change [name=region]": "change_region"
		};
		n.prototype.respond_to = {
			update: "update"
		};
		n.prototype.change_service_id = function(p) {
			return this.model.set_service_id(p.target.value)
		};
		n.prototype.change_by = function(p) {
			return this.model.set_by(p.target.value)
		};
		n.prototype.change_region = function(p) {
			return this.model.set_region(p.target.value)
		};
		n.prototype.update = function() {
			var p, q, r;
			q = $(".date-control", this.el).data("daterangepicker");
			r = q.startDate = moment.unix(this.model.from);
			p = q.endDate = moment.unix(this.model.to);
			q.leftCalendar.month.month(r.month()).year(r.year()).hour(r.hour()).minute(r.minute());
			q.rightCalendar.month.month(p.month()).year(p.year()).hour(p.hour()).minute(p.minute());
			q.updateCalendars();
			$(".date-control", this.el).text("" + (r.format(m)) + " to " + (p.format(m)));
			return q.showCalendars()
		};
		n.prototype.ready = function() {
			var q, p, s, r;
			p = {
				timePicker: true,
				timePickerIncrement: 5,
				timePicker12Hour: false,
				format: m,
				startDate: moment.unix(this.model.from),
				endDate: moment.unix(this.model.to),
				ranges: {
					"Last hour": [moment().subtract("hours", 1), moment(), "minute"],
					"Last 8 hours": [moment().subtract("hours", 8), moment(), "minute"],
					"Last day": [moment().subtract("days", 1), moment(), "minute"],
					"Last week": [moment().subtract("weeks", 1), moment(), "hour"]
				}
			};
			q = (function(t) {
				return function(w, u, v) {
					if (_.isUndefined(v)) {
						return t.model.set_date_range(w, u)
					} else {
						$("[name=by]", t.el).val(v);
						return t.model.set_date_range_and_by(w, u, v)
					}
				}
			})(this);
			$(".date-control", this.el).daterangepicker(p, q);
			$(".date-control", this.el).data("daterangepicker").showCalendars();
			s = moment.unix(this.model.from).format(m);
			r = moment.unix(this.model.to).format(m);
			$(".date-control", this.el).html("" + s + " to " + r);
			this.services_search = new FUI.SearchBox(".service-search", this.el, {
				model: this.model.services,
				label: "name",
				search_keys: ["name", "customer_name", "id"],
				template: "fui/search_box/services.html"
			});
			$("[name=region]", this.el).val(this.model.region || "all");
			return $("[name=by]", this.el).val(this.model.by || "day")
		};
		return n
	})(Sierra.View);
	g = {
		".hit-ratio": h.extend({
			className: "hit-ratio",
			template: "stats/charts/hit_ratio.html",
			help_template: "stats/help/hit_ratio.html",
			help_title: "Hit Ratio",
			statistics: ["hit_ratio"]
		}),
		".cache-coverage": h.extend({
			className: "cache-coverage",
			template: "stats/charts/cache_coverage.html",
			help_template: "stats/help/cache_coverage.html",
			help_title: "Cache Coverage",
			statistics: ["cache_coverage"]
		}),
		".bandwidth": k.extend({
			className: "bandwidth",
			template: "stats/charts/bandwidth.html",
			help_template: "stats/help/bandwidth.html",
			help_title: "Bandwidth",
			statistics: ["bandwidth"]
		}),
		".caching-overview": j.extend({
			className: "caching-overview",
			template: "stats/charts/caching_overview.html",
			help_template: "stats/help/caching_overview.html",
			help_title: "Caching Overview",
			statistics: ["hits", "miss", "synth", "pass"]
		}),
		".errors": j.extend({
			className: "errors",
			template: "stats/charts/errors.html",
			help_template: "stats/help/errors.html",
			help_title: "Errors",
			statistics: ["status_503", "other_5xx", "status_4xx"]
		}),
		".origin-latency": j.extend({
			className: "origin-latency",
			template: "stats/charts/origin_latency.html",
			help_template: "stats/help/origin_latency.html",
			help_title: "Origin Latency",
			statistics: ["origin_latency"]
		}),
		".success": j.extend({
			className: "success",
			template: "stats/charts/success.html",
			help_template: "stats/help/success.html",
			help_title: "Success",
			statistics: ["status_1xx", "status_2xx", "status_3xx"]
		}),
		".requests": j.extend({
			className: "requests",
			template: "stats/charts/requests.html",
			help_template: "stats/help/requests.html",
			help_title: "Requests",
			statistics: ["requests"]
		}),
		".header-body": j.extend({
			className: "bandwidth-breakdown",
			template: "stats/charts/header_body.html",
			help_template: "stats/help/header_body.html",
			help_title: "Header and Body Bandwidth",
			statistics: ["body_size", "header_size"]
		}),
		".error-ratio": h.extend({
			className: "error-ratio",
			template: "stats/charts/error_ratio.html",
			help_template: "stats/help/error_ratio.html",
			help_title: "Error Ratio",
			statistics: ["error_ratio"],
			tightYAxis: true
		}),
		".3xx-details": j.extend({
			className: "3xx-details",
			template: "stats/charts/3xx.html",
			help_template: "stats/help/3xx.html",
			help_title: "Status 3XX Details",
			statistics: ["status_301", "status_302", "status_304", "other_3xx"]
		})
	};
	Sierra.Views.Stats = {};
	Sierra.Views.Stats.Page = (function(n) {
		c(m, n);

		function m() {
			return m.__super__.constructor.apply(this, arguments)
		}
		m.prototype.id = "content";
		m.prototype.title = function() {
			var o;
			o = this.model.service ? this.model.service.get("name") : "all services";
			return "Historical Stats - " + o
		};
		m.prototype.template = "stats/page.html";
		m.prototype.respond_to = {
			update: "update_title",
			invalid: "warning_alert",
			valid: "clear_warnings"
		};
		m.prototype.events = {
			"mousemove .col-right .epoch > svg .events-shield": "chart_mouse_move",
			"mouseout .col-right .epoch > svg .events-shield": "chart_mouse_out"
		};
		m.prototype.initialize = function(r) {
			var s, p, o, q;
			m.__super__.initialize.call(this, r);
			this.add_child(".toolbar", new e({
				model: this.model
			}));
			this.class_to_chart = {};
			q = [];
			for (o in g) {
				p = g[o];
				s = new p({
					model: this.model
				});
				this.add_child(o, s);
				q.push(this.class_to_chart[s.className] = s)
			}
			return q
		};
		m.prototype.chart_mouse_move = function(p) {
			var o;
			o = function() {
				var t, s, u, w, q, v, r;
				u = p.pageX - $(p.target).closest(".epoch").offset().left;
				w = this.class_to_chart[$(p.target).closest("[stat-row]").attr("class")];
				q = w.unproject_x(p.pageX - $(p.target).closest(".events-shield").offset().left);
				if (!_.isUndefined(q)) {
					w.x_tooltip(u, q);
					v = this.class_to_chart;
					r = [];
					for (s in v) {
						t = v[s];
						r.push(t.overlay_chart_values(u, q))
					}
					return r
				}
			};
			return setTimeout(_.bind(o, this), 0)
		};
		m.prototype.chart_mouse_out = function(p) {
			var o;
			o = function() {
				var s, r, u, t, q;
				u = this.class_to_chart[$(p.target).closest("[stat-row]").attr("class")];
				u.hide_x_tooltip();
				t = this.class_to_chart;
				q = [];
				for (r in t) {
					s = t[r];
					q.push(s.end_overlay())
				}
				return q
			};
			return setTimeout(_.bind(o, this), 0)
		};
		m.prototype.warning_alert = function(o, p) {
			return $(".warnings", this.el).html(FUI.render("stats/warning.html", {
				msg: p
			}))
		};
		m.prototype.clear_warnings = function() {
			return $(".warnings", this.el).html("")
		};
		m.prototype.update_title = function() {
			var q, r, u, p, t, o;
			r = this.model.serialize();
			t = ["from", "to", "by", "count"];
			o = [];
			for (u = 0, p = t.length; u < p; u++) {
				q = t[u];
				o.push($(".info ." + q, this.el).text(r[q]))
			}
			return o
		};
		return m
	})(Sierra.PageView)
}).call(this);
(function() {
	var d, a = {}.hasOwnProperty,
		c = function(h, f) {
			for (var e in f) {
				if (a.call(f, e)) {
					h[e] = f[e]
				}
			}
			function g() {
				this.constructor = h
			}
			g.prototype = f.prototype;
			h.prototype = new g();
			h.__super__ = f.prototype;
			return h
		},
		b = [].indexOf ||
	function(g) {
		for (var f = 0, e = this.length; f < e; f++) {
			if (f in this && this[f] === g) {
				return f
			}
		}
		return -1
	};
	d = (function(e) {
		c(f, e);

		function f() {
			return f.__super__.constructor.apply(this, arguments)
		}
		f.prototype.className = "stream-summary col-md-8";
		f.prototype.template = "stream/summary.html";
		return f
	})(Sierra.ResourceView);
	Sierra.Views.StreamSummary = (function(f) {
		c(e, f);

		function e() {
			return e.__super__.constructor.apply(this, arguments)
		}
		e.prototype.id = "stream";
		e.prototype.resource = "stream";
		e.prototype.model_name = "Stream";
		e.prototype.collection_name = "Streams";
		e.prototype.template = "stream/list.html";
		e.prototype.rendition_cid = null;
		e.prototype.stream_id = null;
		e.prototype.key_hash = null;
		e.prototype.partials = {
			entry: "stream/entry.html",
			modal: "stream/modals/new_stream.html",
			advanced: "stream/modals/advanced_stream.html",
			rendition: "stream/modals/renditions.html",
			preview: "stream/modals/preview.html",
			key: "stream/modals/key.html",
			purge: "stream/modals/purge.html"
		};
		e.prototype.events = {
			"click .renditions": "show_renditions",
			"click .preview-stream": "show_preview",
			"submit .renditions-modal form": "update_renditions",
			"click .resource-edit": "disable_name",
			"click .advanced-stream": "show_advanced",
			"click .update_advanced_stream": "update_advanced",
			"click .resource-new": "enable_name",
			"click .show-key": "show_key",
			"click .reset-key": "reset_key",
			"click .purge-dvr": "show_purge_dvr",
			"submit .purge-dvr-modal form": "do_purge_dvr"
		};
		e.prototype.ready = function() {
			this.renditions = new FUI.ModalForm(".renditions-modal", this.el);
			this.preview = new FUI.ModalForm(".preview-stream-modal", this.el);
			this.advanced = new FUI.ModalForm(".advanced-stream-modal", this.el);
			this.key = new FUI.ModalForm(".show-key-modal", this.el);
			this.purge_dvr = new FUI.ModalForm(".purge-dvr-modal", this.el);
			return Sierra.ResourceView.prototype.ready.apply(this, arguments)
		};
		e.prototype.disable_name = function(h) {
			var i, g;
			h.preventDefault();
			this.form.reset();
			i = $(h.target).cid();
			this.model = this.collection.getByCid(i);
			this.trigger("form:edit", this.model);
			g = this.model.serialize();
			this.show_modal({
				type: "edit",
				title: "Edit",
				submit: "Update",
				remove: true,
				data: g
			});
			return $('input[name="name"]').attr("disabled", true)
		};
		e.prototype.enable_name = function(h) {
			var g;
			h.preventDefault();
			this.form.reset();
			this.show_modal({
				type: "new",
				title: "New",
				submit: "Create",
				remove: true
			});
			g = $('input[name="name"]');
			if (g.is(":disabled")) {
				return g.removeAttr("disabled")
			}
		};
		e.prototype.show_purge_dvr = function(i) {
			var j, h, g;
			i.preventDefault();
			j = $(i.target).cid();
			h = this.collection.getByCid(j);
			g = h.get("name");
			this.stream_id = h.get("id");
			this.purge_dvr.find("strong.name").text(g);
			return this.purge_dvr.show()
		};
		e.prototype.do_purge_dvr = function(g) {
			g.preventDefault();
			this.purge_dvr.toggle_loading("Purging DVR Window...");
			return Fastly.ajax({
				type: "PUT",
				url: "/stream/purge/" + this.stream_id,
				success: (function(h) {
					return function(i) {
						return h.purge_dvr.hide()
					}
				})(this),
				complete: (function(h) {
					return function() {
						return h.purge_dvr.toggle_loading()
					}
				})(this)
			})
		};
		e.prototype.show_key = function(h) {
			var i, g;
			h.preventDefault();
			this.model.fetch;
			i = $(h.target).cid();
			g = this.collection.getByCid(i);
			this.key_hash = g.get("key");
			this.stream_id = g.get("id");
			this.key.find("p.stream-key").text(this.key_hash);
			return this.key.show()
		};
		e.prototype.show_advanced = function(g) {
			var h;
			g.preventDefault();
			h = $(g.target).cid();
			this.model = this.collection.getByCid(h);
			this.advanced.form.submit = "Update";
			this.advanced.form.reset(this.model.serialize());
			return this.advanced.show()
		};
		e.prototype.update_advanced = function(h) {
			var g;
			h.preventDefault();
			if (!this.advanced.form.validate()) {
				return
			}
			this.advanced.toggle_loading("Updating Stream...");
			this.model = this.collection.getByCid(this.advanced.cid());
			g = this.advanced.form.fields();
			this.trigger("model:update", g);
			return this.model.save(g, {
				success: (function(i) {
					return function() {
						i.collection.trigger("update", i.model);
						return i.advanced.hide()
					}
				})(this),
				error: (function(i) {
					return function(j, k) {
						return i.advanced.form.error(k)
					}
				})(this),
				complete: (function(i) {
					return function() {
						return i.advanced.toggle_loading()
					}
				})(this)
			})
		};
		e.prototype.reset_key = function(g) {
			g.preventDefault();
			return Fastly.ajax({
				type: "PUT",
				url: "/stream/reset/" + this.stream_id,
				success: function(h) {
					return $(".show-key-modal").find("p.stream-key").text(h.key)
				}
			})
		};
		e.prototype.show_preview = function(h) {
			var j, i, g;
			h.preventDefault();
			j = $(h.target).cid();
			g = this.collection.getByCid(j);
			i = g.get("edge_urls")[0];
			jwplayer("main-player").setup({
				file: "" + i,
				width: "538",
				height: "360",
				fallback: false,
				primary: "flash"
			});
			return this.preview.show()
		};
		e.prototype.update_renditions = function(m) {
			var j, i, n, l, g, k, h;
			m.preventDefault();
			this.renditions.toggle_loading("Saving Renditions...");
			j = this.collection.getByCid(this.renditions.cid());
			n = ["240p", "360p", "480p", "720p", "audioonly"];
			l = _.map(j.get("renditions_list"), function(o) {
				return o.name
			});
			for (k = 0, h = n.length; k < h; k++) {
				i = n[k];
				g = $("[name=" + i + "]", this.renditions.el);
				if (g.prop("checked") === true && b.call(l, i) < 0) {
					j.add_rendition(i, {})
				}
				if (g.prop("checked") === false && b.call(l, i) >= 0) {
					j.remove_rendition(i, {})
				}
			}
			this.renditions.toggle_loading();
			return this.renditions.hide()
		};
		e.prototype.show_renditions = function(l) {
			var m, i, h, k, j, g;
			l.preventDefault();
			m = $(l.target).cid();
			i = this.collection.getByCid(m);
			k = _.map(i.get("renditions_list"), function(n) {
				return n.name
			});
			$("[name]", this.renditions.el).prop("checked", false);
			for (j = 0, g = k.length; j < g; j++) {
				h = k[j];
				$("[name=" + h + "]", this.renditions.el).prop("checked", true)
			}
			this.renditions.show();
			return this.renditions.cid(m)
		};
		return e
	})(Sierra.ResourceView);
	Sierra.Views.Stream = {};
	Sierra.Views.Stream.Overview = (function(e) {
		c(f, e);

		function f() {
			return f.__super__.constructor.apply(this, arguments)
		}
		f.prototype.title = "Streaming: Overview";
		f.prototype.id = "content";
		f.prototype.template = "stream/overview.html";
		f.prototype.initialize = function() {
			var g;
			Sierra.PageView.prototype.initialize.apply(this, arguments);
			g = {
				model: this.model.collection
			};
			return this.add_child("#streaming .stream-summary", new Sierra.Views.StreamSummary(g))
		};
		return f
	})(Sierra.PageView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.CacheSettings = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.id = "cache_settings";
		c.prototype.resource = "cache_settings";
		c.prototype.model_name = "CacheSettings";
		c.prototype.collection_name = "CacheSettings";
		c.prototype.template = "resources/cache_settings/list.html";
		c.prototype.partials = {
			entry: "resources/cache_settings/entry.html",
			modal: "resources/cache_settings/modal.html"
		};
		return c
	})(Sierra.ResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.RequestSettings = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.id = "request_settings";
		c.prototype.resource = "request_settings";
		c.prototype.model_name = "RequestSettings";
		c.prototype.collection_name = "RequestSettings";
		c.prototype.template = "resources/request_settings/list.html";
		c.prototype.new_defaults = {
			max_stale_age: 60
		};
		c.prototype.partials = {
			entry: "resources/request_settings/entry.html",
			modal: "resources/request_settings/modal.html"
		};
		return c
	})(Sierra.ResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.Backends = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.id = "backends";
		c.prototype.resource = "backend";
		c.prototype.model_name = "Backend";
		c.prototype.collection_name = "Backends";
		c.prototype.template = "resources/backends/list.html";
		c.prototype.partials = {
			entry: "resources/backends/entry.html",
			modal: "resources/backends/modal.html",
			advanced_modal: "resources/backends/advanced_modal.html",
			ssl_modal: "resources/backends/ssl_modal.html"
		};
		c.prototype.events = {
			"click .backend-advanced": "show_advanced_modal",
			"submit .advanced-modal form": "update_advanced",
			"click .backend-ssl": "show_ssl_modal",
			"change .ssl-modal .use-ssl": "toggle_ssl_fields",
			"submit .ssl-modal form": "update_ssl",
			"change select[name=auto_loadbalance]": "auto_load_balance_changed"
		};
		c.prototype.new_defaults = {
			port: "80"
		};
		c.prototype.initialize = function(e) {
			this.health_checks = e.model.resources.HealthChecks;
			this.health_checks.on("add", (function(f) {
				return function() {
					return f.update_health_checks()
				}
			})(this));
			this.health_checks.on("update", (function(f) {
				return function() {
					return f.update_health_checks()
				}
			})(this));
			this.health_checks.on("remove", (function(f) {
				return function() {
					return f.update_health_checks()
				}
			})(this));
			return Sierra.ResourceView.prototype.initialize.apply(this, arguments)
		};
		c.prototype.ready = function() {
			this.on("form:new", (function(e) {
				return function() {
					return e.toggle_weight("1")
				}
			})(this));
			this.on("form:edit", (function(e) {
				return function(f) {
					return e.toggle_weight(f.get("auto_loadbalance"))
				}
			})(this));
			this.advanced = new FUI.ModalForm(".advanced-modal", this.el);
			this.ssl_form = new FUI.ModalForm(".ssl-modal", this.el);
			this.ssl_fieldset = $(".ssl-modal form .ssl-options");
			return Sierra.ResourceView.prototype.ready.apply(this, arguments)
		};
		c.prototype.update_health_checks = function() {
			var e;
			e = FUI.render("resources/backends/health_check_options.html", {
				health_checks: this.health_checks.serialize()
			});
			this.form.find("select[name=healthcheck]").html(e);
			if (this.health_checks.size() > 0) {
				return this.form.find(".health-check").show()
			} else {
				return this.form.find(".health-check").hide()
			}
		};
		c.prototype.get_backend = function(f) {
			if (_.isString(f)) {
				return this.collection.getByCid(f)
			}
			if (f.target != null) {
				return this.collection.getByCid($(f.target).cid())
			}
		};
		c.prototype.show_advanced_modal = function(f) {
			f.preventDefault();
			this.advanced.reset(this.get_backend(f));
			return this.advanced.show()
		};
		c.prototype.update_advanced = function(i) {
			var g, f, h;
			i.preventDefault();
			if (!this.advanced.validate()) {
				return
			}
			h = [this.get_backend(this.advanced.cid()), this.advanced.fields()], g = h[0], f = h[1];
			this.advanced.toggle_loading("Updating timeouts &amp; thresholds...");
			g.save(f, {
				success: (function(e) {
					return function() {
						e.model.trigger("resource:changed");
						e.advanced.validate();
						return e.advanced.hide()
					}
				})(this),
				error: (function(e) {
					return function(j, k) {
						return e.advanced.error(k)
					}
				})(this),
				complete: (function(e) {
					return function() {
						return e.advanced.toggle_loading()
					}
				})(this)
			});
			return this.replace_entry(g)
		};
		c.prototype.show_ssl_modal = function(h) {
			var g, f;
			h.preventDefault();
			this.ssl_form.reset(this.get_backend(h));
			this.ssl_form.show();
			g = this.get_backend(h);
			f = g.attributes.use_ssl;
			if (f) {
				console.log("enabling fields");
				return $("input, textarea", $(".ssl-modal form fieldset")).removeAttr("disabled")
			} else {
				console.log("disabling fields");
				return $("input, textarea", $(".ssl-modal form fieldset")).attr("disabled", "disabled")
			}
		};
		c.prototype.update_ssl = function(l) {
			var i, f, h, g, j;
			l.preventDefault();
			if (!this.ssl_form.validate()) {
				return
			}
			j = [this.get_backend(this.ssl_form.cid()), this.ssl_form.fields()], i = j[0], f = j[1];
			this.ssl_form.toggle_loading("Updating SSL options...");
			for (h in f) {
				g = f[h];
				if ($.trim(g) === "") {
					delete f[h]
				}
			}
			return i.save(f, {
				success: (function(e) {
					return function() {
						return e.ssl_form.hide()
					}
				})(this),
				error: (function(e) {
					return function(k, m) {
						return e.ssl_form.error(m)
					}
				})(this),
				complete: (function(e) {
					return function() {
						return e.ssl_form.toggle_loading()
					}
				})(this)
			})
		};
		c.prototype.toggle_ssl_fields = function(f) {
			f.preventDefault();
			if ($(f.target).val() === "1") {
				return $("input, textarea", $(".ssl-modal form .ssl-options")).removeAttr("disabled")
			} else {
				return $("input, textarea", $(".ssl-modal form .ssl-options")).attr("disabled", "disabled")
			}
		};
		c.prototype.toggle_weight = function(e) {
			if (e === "0") {
				return $(".weight-group", this.form.el).hide()
			} else {
				return $(".weight-group", this.form.el).show()
			}
		};
		c.prototype.auto_load_balance_changed = function(f) {
			return this.toggle_weight(f.target.value)
		};
		c.prototype.render = function() {
			this.data.HealthChecks = this.health_checks.serialize();
			return Sierra.ResourceView.prototype.render.apply(this, arguments)
		};
		return c
	})(Sierra.ResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.SysLogs = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.id = "syslogs";
		c.prototype.resource = "syslog";
		c.prototype.model_name = "SysLog";
		c.prototype.collection_name = "SysLogs";
		c.prototype.template = "resources/syslogs/list.html";
		c.prototype.partials = {
			entry: "resources/syslogs/entry.html",
			modal: "resources/syslogs/modal.html"
		};
		return c
	})(Sierra.LoggingResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.OpenStacks = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.id = "openstacks";
		c.prototype.resource = "openstack";
		c.prototype.model_name = "OpenStack";
		c.prototype.collection_name = "OpenStacks";
		c.prototype.template = "resources/openstacks/list.html";
		c.prototype.partials = {
			entry: "resources/openstacks/entry.html",
			modal: "resources/openstacks/modal.html"
		};
		return c
	})(Sierra.LoggingResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.FTPs = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.id = "ftps";
		c.prototype.resource = "ftp";
		c.prototype.model_name = "FTP";
		c.prototype.collection_name = "FTPs";
		c.prototype.template = "resources/ftps/list.html";
		c.prototype.partials = {
			entry: "resources/ftps/entry.html",
			modal: "resources/ftps/modal.html"
		};
		c.prototype.new_defaults = {
			port: 21,
			format: "%h %l %u %t %r %>s"
		};
		return c
	})(Sierra.LoggingResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.Gzip = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.id = "gzip";
		c.prototype.resource = "gzip";
		c.prototype.model_name = "Gzip";
		c.prototype.collection_name = "Gzips";
		c.prototype.template = "resources/gzip/list.html";
		c.prototype.partials = {
			entry: "resources/gzip/entry.html",
			modal: "resources/gzip/modal.html"
		};
		return c
	})(Sierra.ResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.Partners = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.id = "partners";
		d.prototype.resource = "partner";
		d.prototype.model_name = "Partner";
		d.prototype.collection_name = "Partners";
		d.prototype.className = "nav-section";
		d.prototype.template = "resources/partners/list.html";
		d.prototype.partials = {
			entry: "resources/partners/entry.html",
			modal: "resources/partners/modal.html"
		};
		return d
	})(Sierra.ResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.Domains = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.id = "domains";
		d.prototype.resource = "domain";
		d.prototype.model_name = "Domain";
		d.prototype.collection_name = "Domains";
		d.prototype.template = "resources/domains/list.html";
		d.prototype.page_size = 15;
		d.prototype.partials = {
			entry: "resources/domains/entry.html",
			modal: "resources/domains/modal.html"
		};
		d.prototype.initialize = function() {
			this.on("form", (function(e) {
				return function() {
					return $(".apex-warning", e.el).hide()
				}
			})(this));
			return Sierra.ResourceView.prototype.initialize.apply(this, arguments)
		};
		d.prototype.submit_form = function(g) {
			var f, h;
			f = this.form.field("name").split(".").length < 3;
			h = $(".apex-warning", this.el).is(":visible");
			if (f && !h) {
				g.preventDefault();
				return $(".apex-warning").show()
			}
			return Sierra.ResourceView.prototype.submit_form.apply(this, arguments)
		};
		return d
	})(Sierra.ResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.Wordpress = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.id = "wordpress";
		d.prototype.resource = "wordpress";
		d.prototype.model_name = "Wordpress";
		d.prototype.collection_name = "Wordpress";
		d.prototype.template = "resources/wordpress/list.html";
		d.prototype.partials = {
			entry: "resources/wordpress/entry.html",
			modal: "resources/wordpress/modal.html"
		};
		return d
	})(Sierra.ResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.S3s = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.id = "s3s";
		c.prototype.resource = "s3";
		c.prototype.model_name = "S3";
		c.prototype.collection_name = "S3s";
		c.prototype.template = "resources/s3s/list.html";
		c.prototype.partials = {
			entry: "resources/s3s/entry.html",
			modal: "resources/s3s/modal.html"
		};
		return c
	})(Sierra.LoggingResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.Vcls = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.id = "vcls";
		d.prototype.resource = "vcl";
		d.prototype.resource_text = "varnish configuration";
		d.prototype.model_name = "Vcl";
		d.prototype.collection_name = "Vcls";
		d.prototype.template = "resources/vcls/list.html";
		d.prototype.partials = {
			entry: "resources/vcls/entry.html",
			modal: "resources/vcls/modal.html",
			source: "resources/vcls/source.html",
			confirm_main: "resources/vcls/confirm_main.html"
		};
		d.prototype.events = {
			"click .vcl-main": "show_confirm_main",
			"submit .confirm-main-modal form": "set_main",
			"click .vcl-source": "view_source",
			"click .vcl-download": "download"
		};
		d.prototype.new_defaults = {
			main: 0
		};
		d.prototype.ready = function() {
			var e;
			e = this.collection.get_main();
			if (e != null) {
				$.cid(e.cid, this.el).find(".dropdown-menu .vcl-main").hide()
			}
			this.source = new FUI.ModalForm(".source-modal", this.el);
			this.confirm_main = new FUI.ModalForm(".confirm-main-modal", this.el);
			this.file_html = '<input type="file" name="content" data-validate="filesize(1000000)" data-message="Cannot exceed 1 MB">';
			this.on("form", (function(f) {
				return function() {
					return f.form.find("[type=file]").replaceWith(f.file_html)
				}
			})(this));
			return Sierra.ResourceView.prototype.ready.apply(this, arguments)
		};
		d.prototype.form_url = function(f) {
			var e;
			e = Sierra.api_uri + ("/service/" + this.resource_options.service_id + "/version/" + this.resource_options.version + "/vcl");
			if (f != null) {
				e += "/" + f
			}
			return e
		};
		d.prototype.show_confirm_main = function(g) {
			var f;
			g.preventDefault();
			f = this.collection.getByCid($(g.target).cid());
			this.confirm_main.reset(f);
			this.confirm_main.find(".name").text(f.get("name"));
			return this.confirm_main.show()
		};
		d.prototype.set_main = function(i) {
			var g, j, h, f;
			i.preventDefault();
			h = this.collection.getByCid(this.confirm_main.cid());
			f = $.cid(h.cid, this.el);
			if ((g = this.collection.get_main()) != null) {
				j = $.cid(g.cid, this.el);
				g.set({
					main: false
				})
			}
			this.confirm_main.toggle_loading("Setting VCL as Main...");
			return h.save({
				main: true
			}, {
				success: (function(e) {
					return function() {
						f.find(".dropdown-menu .vcl-main").hide();
						f.find(".resource-title .resource-description").text("Main").addClass("Main");
						if (g != null) {
							j.find(".dropdown-menu .vcl-main").show();
							j.find(".resource-title .resource-description").text("Include").removeClass("Main")
						}
						return e.confirm_main.hide()
					}
				})(this),
				error: (function(e) {
					return function(k, l) {
						return e.confirm_main.error(l)
					}
				})(this),
				complete: (function(e) {
					return function() {
						return e.confirm_main.toggle_loading()
					}
				})(this)
			})
		};
		d.prototype.view_source = function(g) {
			var f;
			g.preventDefault();
			f = this.collection.getByCid($(g.target).cid());
			this.source.find("span.name").text(f.get("name"));
			this.source.find(".modal-body").html('<img src="/images/row_loading.gif">');
			this.source.show();
			return f.content({
				success: (function(e) {
					return function(h) {
						var i;
						i = h.content.replace(/<pre>\s*/, "<pre>");
						return e.source.find(".modal-body").focus().html(i)
					}
				})(this)
			})
		};
		d.prototype.download = function(g) {
			var f;
			g.preventDefault();
			f = this.collection.getByCid($(g.target).cid());
			return window.location = f.download_href()
		};
		d.prototype.create_entry = function() {
			var e, g, f;
			f = [this.form.find("form"), this.form.find("form input[name=_method]")], e = f[0], g = f[1];
			g.val("POST");
			e.attr("action", this.form_url());
			this.form.enable("input");
			if (this.collection.size() === 0) {
				this.form.field("main", "1")
			}
			return e.ajaxSubmit({
				dataType: "json",
				success: (function(h) {
					return function(j) {
						var i;
						i = new Sierra.Models.Vcl(j);
						i.is_new = false;
						h.collection.add(i);
						return h.form.hide()
					}
				})(this),
				error: (function(h) {
					return function(i) {
						return h.form.error(i)
					}
				})(this),
				complete: (function(h) {
					return function() {
						return h.form.toggle_loading()
					}
				})(this)
			})
		};
		d.prototype.update_entry = function(e) {
			var g, i, f, h;
			h = [this.form.find("form"), this.form.find("form input[name=_method]")], g = h[0], i = h[1];
			i.val("PUT");
			f = this.collection.getByCid(this.form.cid());
			g.attr("action", this.form_url(f.get("name")));
			this.form.enable("input");
			return g.ajaxSubmit({
				dataType: "json",
				success: (function(j) {
					return function(k) {
						f.set(k);
						f.is_new = false;
						j.collection.trigger("update", f);
						return j.form.hide()
					}
				})(this),
				error: (function(j) {
					return function(k) {
						return j.form.error(k)
					}
				})(this),
				complete: (function(j) {
					return function() {
						return j.form.toggle_loading()
					}
				})(this)
			})
		};
		d.prototype.show_modal = function(e) {
			this.trigger("form");
			if (e.type === "edit") {
				e.title = "Upload";
				e.submit = "Upload"
			}
			this.form.find("h3 .title").text(e.title);
			this.form.find("[type=submit]").val(e.submit);
			this.form.el.attr("data-type", e.type);
			this.form.reset();
			this.form.cid("");
			delete e.data.content;
			if (e.data != null) {
				this.form.reset(e.data)
			}
			this.form.show();
			return this.trigger("form:shown")
		};
		return d
	})(Sierra.ResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.Cloudfiles = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.id = "cloudfiles";
		c.prototype.resource = "cloudfiles";
		c.prototype.model_name = "Cloudfile";
		c.prototype.collection_name = "Cloudfiles";
		c.prototype.template = "resources/cloudfiles/list.html";
		c.prototype.partials = {
			entry: "resources/cloudfiles/entry.html",
			modal: "resources/cloudfiles/modal.html"
		};
		return c
	})(Sierra.LoggingResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.LogShuttles = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.id = "logshuttles";
		c.prototype.resource = "logshuttle";
		c.prototype.model_name = "LogShuttle";
		c.prototype.collection_name = "LogShuttles";
		c.prototype.template = "resources/logshuttles/list.html";
		c.prototype.partials = {
			entry: "resources/logshuttles/entry.html",
			modal: "resources/logshuttles/modal.html"
		};
		return c
	})(Sierra.LoggingResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.Headers = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.id = "headers";
		d.prototype.resource = "header";
		d.prototype.model_name = "Header";
		d.prototype.collection_name = "Headers";
		d.prototype.template = "resources/headers/list.html";
		d.prototype.partials = {
			entry: "resources/headers/entry.html",
			modal: "resources/headers/modal.html"
		};
		d.prototype.events = {
			"change [name=action]": "action_changed"
		};
		d.prototype.new_defaults = {
			priority: 10
		};
		d.prototype.ready = function() {
			this.on("form:new", (function(e) {
				return function() {
					return e.set_action("set")
				}
			})(this));
			this.on("form:edit", (function(e) {
				return function(f) {
					return e.set_action(f.get("action"))
				}
			})(this));
			return Sierra.ResourceView.prototype.ready.apply(this, arguments)
		};
		d.prototype.set_action = function(e) {
			return this.form.el.attr("data-header-action", e)
		};
		d.prototype.action_changed = function(f) {
			return this.set_action(f.target.value)
		};
		return d
	})(Sierra.ResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.Sumologics = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.id = "sumologics";
		d.prototype.resource = "sumologic";
		d.prototype.model_name = "Sumologic";
		d.prototype.collection_name = "Sumologics";
		d.prototype.template = "resources/sumologics/list.html";
		d.prototype.partials = {
			entry: "resources/sumologics/entry.html",
			modal: "resources/sumologics/modal.html"
		};
		return d
	})(Sierra.LoggingResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.Logentries = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.id = "logentries";
		c.prototype.resource = "logentries";
		c.prototype.model_name = "Logentry";
		c.prototype.collection_name = "Logentries";
		c.prototype.template = "resources/logentries/list.html";
		c.prototype.partials = {
			entry: "resources/logentries/entry.html",
			modal: "resources/logentries/modal.html"
		};
		return c
	})(Sierra.LoggingResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.SplunkStorms = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.id = "splunk_storms";
		d.prototype.resource = "splunk_storm";
		d.prototype.model_name = "SplunkStorm";
		d.prototype.collection_name = "SplunkStorms";
		d.prototype.template = "resources/splunk_storms/list.html";
		d.prototype.partials = {
			entry: "resources/splunk_storms/entry.html",
			modal: "resources/splunk_storms/modal.html"
		};
		return d
	})(Sierra.LoggingResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.Papertrails = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.id = "papertrails";
		c.prototype.resource = "papertrail";
		c.prototype.model_name = "Papertrail";
		c.prototype.collection_name = "Papertrails";
		c.prototype.template = "resources/papertrails/list.html";
		c.prototype.partials = {
			entry: "resources/papertrails/entry.html",
			modal: "resources/papertrails/modal.html"
		};
		return c
	})(Sierra.LoggingResourceView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Resources.ResponseObjects = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.id = "response_objects";
		d.prototype.resource = "response_objects";
		d.prototype.model_name = "ResponseObject";
		d.prototype.collection_name = "ResponseObjects";
		d.prototype.template = "resources/response_objects/list.html";
		d.prototype.new_defaults = {
			status: 200,
			response: "Ok"
		};
		d.prototype.partials = {
			entry: "resources/response_objects/entry.html",
			modal: "resources/response_objects/modal.html",
			http_status_options: "common/http_status_options.html"
		};
		d.prototype.ready = function() {
			Sierra.ResourceView.prototype.ready.apply(this, arguments);
			return $(".resource-modal", this.el).on("hidden", (function(e) {
				return function() {
					return e.form.find(".modal-editor").replaceWith('<div class="modal-editor"></div>')
				}
			})(this))
		};
		d.prototype.show_modal = function(e) {
			this.editor = ace.edit(this.form.find(".modal-editor").get(0));
			this.editor.getSession().setMode("ace/mode/html");
			if ((e.data != null) && (e.data.content != null)) {
				this.editor.getSession().getDocument().setValue(e.data.content)
			}
			return Sierra.ResourceView.prototype.show_modal.call(this, e)
		};
		d.prototype.create_entry = function(e) {
			e.content = this.editor.session.doc.getValue();
			e.response = FUI.http_status_to_response[e.status];
			return Sierra.ResourceView.prototype.create_entry.call(this, e)
		};
		d.prototype.update_entry = function(e) {
			e.content = this.editor.session.doc.getValue();
			e.response = FUI.http_status_to_response[e.status];
			return Sierra.ResourceView.prototype.update_entry.call(this, e)
		};
		return d
	})(Sierra.ResourceView)
}).call(this);
(function() {
	var c, d, a = {}.hasOwnProperty,
		b = function(h, f) {
			for (var e in f) {
				if (a.call(f, e)) {
					h[e] = f[e]
				}
			}
			function g() {
				this.constructor = h
			}
			g.prototype = f.prototype;
			h.prototype = new g();
			h.__super__ = f.prototype;
			return h
		};
	c = {
		low: {
			threshold: 1,
			window: 2,
			initial: 1,
			check_interval: 60000,
			timeout: 5000
		},
		normal: {
			threshold: 3,
			window: 5,
			initial: 4,
			check_interval: 15000,
			timeout: 5000
		},
		high: {
			threshold: 7,
			window: 10,
			initial: 9,
			check_interval: 2000,
			timeout: 5000
		}
	};
	d = 200;
	Sierra.Views.Resources.HealthChecks = (function(e) {
		b(f, e);

		function f() {
			return f.__super__.constructor.apply(this, arguments)
		}
		f.prototype.id = "healthchecks";
		f.prototype.resource = "healthcheck";
		f.prototype.model_name = "HealthCheck";
		f.prototype.collection_name = "HealthChecks";
		f.prototype.template = "resources/healthchecks/list.html";
		f.prototype.partials = {
			entry: "resources/healthchecks/entry.html",
			modal: "resources/healthchecks/modal.html",
			http_status_options: "common/http_status_options.html"
		};
		f.prototype.new_defaults = {
			threshold: 1,
			window: 2,
			initial: 1,
			check_interval: 60000,
			timeout: 5000,
			expected_response: 200,
			path: "/"
		};
		f.prototype.events = {
			"change select.frequency": "frequency_changed",
			"change [name=window], [name=threshold], [name=check_interval]": "update_description"
		};
		f.prototype.initialize = function(g) {
			this.backends = g.model.resources.Backends;
			this.on("form:shown", (function(h) {
				return function() {
					h.set_frequency();
					return h.update_description()
				}
			})(this));
			return Sierra.ResourceView.prototype.initialize.apply(this, arguments)
		};
		f.prototype.frequency_changed = function(l) {
			var h, g, j, i;
			j = $(l.target).val();
			if (j === "custom") {
				this.form.find(".advanced").show()
			} else {
				this.form.find(".advanced").hide();
				i = c[j];
				for (h in i) {
					g = i[h];
					this.form.field(h, g)
				}
			}
			return this.update_description()
		};
		f.prototype.set_frequency = function() {
			var j, m, g, h, k, i, l;
			g = this.form.fields();
			for (h in c) {
				i = c[h];
				k = true;
				for (m in i) {
					l = i[m];
					j = parseInt(l) === parseInt(g[m]);
					k = k && j
				}
				if (!k) {
					continue
				}
				this.form.find("select.frequency").val(h);
				this.form.find(".advanced").hide();
				return
			}
			this.form.find("select.frequency").val("custom");
			return this.form.find(".advanced").show()
		};
		f.prototype.update_description = function(i) {
			var h, g;
			g = this.form.fields();
			h = this.form.find("div.description");
			$(".threshold", h).text(g.threshold);
			$(".window", h).text(g.window);
			return $(".requests_per_minute", h).text(d * (60000 / g.check_interval))
		};
		f.prototype.delete_entry = function(h, j) {
			var g, k, i;
			i = false;
			g = [];
			this.backends.each(function(l) {
				var m;
				m = h.get("name") === l.get("healthcheck");
				i = i || m;
				if (m) {
					return g.push(l.get("address"))
				}
			});
			if (!i) {
				return Sierra.ResourceView.prototype.delete_entry.apply(this, arguments)
			}
			if (g.length > 1) {
				k = "These healthchecks are in use.  Remove it by editing the following backends, then try deleting it again: " + g
			} else {
				k = "This healthcheck is in use. Remove it by editing the following backend, then try deleting it again: " + g
			}
			return FUI.ConfirmDialog.flash(k, "error")
		};
		return f
	})(Sierra.ResourceView)
}).call(this);
(function() {
	var a, e, g, j, i, f, k, d, c, l, h = {}.hasOwnProperty,
		b = function(p, n) {
			for (var m in n) {
				if (h.call(n, m)) {
					p[m] = n[m]
				}
			}
			function o() {
				this.constructor = p
			}
			o.prototype = n.prototype;
			p.prototype = new o();
			p.__super__ = n.prototype;
			return p
		};
	Sierra.Views.Admin = (function(n) {
		b(m, n);

		function m() {
			return m.__super__.constructor.apply(this, arguments)
		}
		m.prototype.title = "Admin";
		m.prototype.id = "content";
		m.prototype.template = "admin/page.html";
		m.prototype.initialize = function() {
			var o;
			Sierra.PageView.prototype.initialize.apply(this, arguments);
			o = {
				model: this.model
			};
			this.add_child(".toolbar", new d(o));
			this.add_child(".overview", new i(o));
			this.add_child(".sidebar", new k(o));
			this.add_child("#users", new l(o));
			this.add_child("#options", new j(o));
			this.add_child("#unverified_users", new c(o));
			this.add_child("#new_customers", new e(o));
			this.add_child("#no_service_customers", new g(o));
			this.add_child("#services", new f(o));
			this.add_child("#limits", new a(o));
			return this.add_child("#partners", new Sierra.Views.Resources.Partners({
				model: this.model.partners
			}))
		};
		return m
	})(Sierra.PageView);
	d = (function(n) {
		b(m, n);

		function m() {
			return m.__super__.constructor.apply(this, arguments)
		}
		m.prototype.className = "toolbar";
		m.prototype.template = "admin/toolbar.html";
		m.prototype.partials = {
			customer_modal: "admin/customer_modal.html",
			edit_customer_modal: "admin/edit_customer_modal.html"
		};
		m.prototype.events = {
			"change [name=customer_id]": "change_customer",
			"click .customer-edit": "show_edit_customer",
			"click .customer-assume": "assume_customer",
			"click .customer-new": "show_new_customer",
			"submit .new-customer-modal form": "create_customer",
			"submit .edit-customer-modal form": "update_customer"
		};
		m.prototype.initialize = function() {
			var p, r, o, q;
			Sierra.View.prototype.initialize.apply(this, arguments);
			this.on_user_update = (function(s) {
				return function() {
					s.set_assume_user();
					return s.update_users()
				}
			})(this);
			q = ["add", "update", "remove"];
			for (r = 0, o = q.length; r < o; r++) {
				p = q[r];
				this.model.users.on(p, this.on_user_update)
			}
			return this.on_customer_update = (function(s) {
				return function() {
					return s.customer_updated()
				}
			})(this)
		};
		m.prototype.ready = function() {
			this.cleanup();
			this.set_assume_user();
			this.model.customer.off("change:name");
			this.model.customer.on("change:name", this.on_customer_update);
			this.customer_search = new FUI.SearchBox(".customer-search", this.el, {
				template: "fui/search_box/customers.html",
				model: this.model.customers,
				search_keys: ["name", "id"]
			});
			this.customer_by_user_search = new FUI.SearchBox(".customer-by-user-search", this.el, {
				template: "fui/search_box/customers_by_users.html",
				model: this.model.all_users,
				label: "login",
				search_keys: ["name", "login"]
			});
			this.new_customer = new FUI.ModalForm(".new-customer-modal", this.el);
			return this.edit_customer = new FUI.ModalForm(".edit-customer-modal", this.el)
		};
		m.prototype.cleanup = function() {
			if (this.customer_search != null) {
				this.customer_search = null
			}
			if (this.new_customer != null) {
				this.new_customer = null
			}
			if (this.assume_user != null) {
				return this.assume_user = null
			}
		};
		m.prototype.destroy = function() {
			var p, r, o, q;
			this.cleanup();
			q = ["add", "update", "remove"];
			for (r = 0, o = q.length; r < o; r++) {
				p = q[r];
				this.model.users.off(p, this.on_user_update)
			}
			this.on_user_update = null;
			this.model.customer.off("change:name", this.on_customer_update);
			this.on_customer_update = null;
			return Sierra.View.prototype.destroy.apply(this, arguments)
		};
		m.prototype.customer_updated = function() {
			this.customer_search.set_model(this.model.customers.serialize());
			return this.customer_search.set_value(this.model.customer.get("name"))
		};
		m.prototype.set_assume_user = function() {
			if (this.model.users.size() === 0) {
				this.assume_user = null;
				return $(".customer-assume", this.el).attr("disabled", "disabled")
			} else {
				this.assume_user = this.model.owner;
				if (this.assume_user == null) {
					this.assume_user = this.model.users.find(function(o) {
						return o.get("role") === "superuser"
					})
				}
				if (this.assume_user == null) {
					this.assume_user = this.model.users.first()
				}
				return $(".customer-assume", this.el).removeAttr("disabled")
			}
		};
		m.prototype.update_users = function() {
			var o;
			o = FUI.render("admin/user_options.html", {
				users: this.model.users.serialize()
			});
			return $("[name=owner_id], [name=billing_contact_id]", this.el).html(o)
		};
		m.prototype.create_customer = function(o) {
			o.preventDefault();
			if (!this.new_customer.validate()) {
				return
			}
			this.new_customer.toggle_loading("Creating customer...");
			return Fastly.signup(this.new_customer.fields(), {
				success: (function(p) {
					return function(q) {
						return p.model.set_customer(q.id)
					}
				})(this),
				error: (function(p) {
					return function(q) {
						return p.new_customer.flash(q.msg)
					}
				})(this),
				complete: (function(p) {
					return function() {
						return p.new_customer.toggle_loading()
					}
				})(this)
			})
		};
		m.prototype.update_customer = function(o) {
			o.preventDefault();
			if (!this.edit_customer.validate()) {
				return
			}
			this.edit_customer.toggle_loading("Updating customer...");
			return this.model.customer.save(this.edit_customer.fields(), {
				success: (function(p) {
					return function() {
						return p.edit_customer.hide()
					}
				})(this),
				error: (function(p) {
					return function(q, r) {
						return p.edit_customer.error(r)
					}
				})(this),
				complete: (function(p) {
					return function() {
						return p.edit_customer.toggle_loading()
					}
				})(this)
			})
		};
		m.prototype.change_customer = function(o) {
			o.preventDefault();
			return this.model.set_customer(o.target.value)
		};
		m.prototype.show_edit_customer = function(o) {
			o.preventDefault();
			this.edit_customer.reset(this.model.customer);
			return this.edit_customer.show()
		};
		m.prototype.assume_customer = function(o) {
			o.preventDefault();
			return this.assume_user.assume({
				success: (function(p) {
					return function() {
						window.location.hash = "#analytics";
						return window.location.reload()
					}
				})(this)
			})
		};
		m.prototype.show_new_customer = function(o) {
			o.preventDefault();
			this.new_customer.reset();
			return this.new_customer.show()
		};
		return m
	})(Sierra.View);
	k = (function(n) {
		b(m, n);

		function m() {
			return m.__super__.constructor.apply(this, arguments)
		}
		m.prototype.className = "sidebar sidebar-no-margin col-md-4";
		m.prototype.template = "admin/sidebar.html";
		m.prototype.respond_to = {
			"section:changed": "change_section"
		};
		m.prototype.change_section = function(q) {
			var p, o;
			$("li", this.el).removeClass("selected");
			o = $("li", this.el).filter(function(r, s) {
				return $("a", s).attr("href").match(q)
			});
			o.addClass("selected");
			if ((p = $("li img.arrow", this.el)).size() > 0) {
				p.remove();
				o.append(p)
			} else {
				o.append('<img class="arrow" src="images/fat-nav-arrow.png">')
			}
			$("#admin .nav-section").hide();
			return $("#admin .nav-section#" + q).show()
		};
		return m
	})(Sierra.View);
	i = (function(m) {
		b(n, m);

		function n() {
			return n.__super__.constructor.apply(this, arguments)
		}
		n.prototype.className = "overview";
		n.prototype.template = "admin/overview.html";
		n.prototype.customer_events = ["change:name", "change:owner_id", "change:billing_contact_id"];
		n.prototype.events = {
			"click input#raw-api-key-toggle": "raw_api_key_toggle"
		};
		n.prototype.initialize = function() {
			Sierra.View.prototype.initialize.apply(this, arguments);
			return this.on_customer_update = (function(o) {
				return function() {
					return o.render()
				}
			})(this)
		};
		n.prototype.ready = function() {
			var p, r, o, q;
			q = this.customer_events;
			for (r = 0, o = q.length; r < o; r++) {
				p = q[r];
				this.model.customer.on(p, this.on_customer_update)
			}
			return Sierra.View.prototype.ready.apply(this, arguments)
		};
		n.prototype.destroy = function() {
			var p, r, o, q;
			q = this.customer_events;
			for (r = 0, o = q.length; r < o; r++) {
				p = q[r];
				this.model.customer.off(p, this.on_customer_update)
			}
			this.on_customer_update = null;
			return Sierra.View.prototype.destroy.apply(this, arguments)
		};
		n.prototype.raw_api_key_toggle = function() {
			return $("#raw-api-key").toggle()
		};
		return n
	})(Sierra.View);
	l = (function(n) {
		b(m, n);

		function m() {
			return m.__super__.constructor.apply(this, arguments)
		}
		m.prototype.id = "users";
		m.prototype.className = "nav-section";
		m.prototype.template = "admin/users.html";
		m.prototype.initialize = function() {
			Sierra.View.prototype.initialize.apply(this, arguments);
			this.users = new Sierra.Views.Account.Users({
				model: this.model,
				admin: true,
				className: "section"
			});
			return this.add_child("#users_view", this.users)
		};
		m.prototype.ready = function() {
			return this.users.default_customer = this.model.customer.get("id")
		};
		return m
	})(Sierra.View);
	j = (function(n) {
		b(m, n);

		function m() {
			return m.__super__.constructor.apply(this, arguments)
		}
		m.prototype.id = "options";
		m.prototype.className = "nav-section";
		m.prototype.template = "admin/options.html";
		m.prototype.events = {
			"submit form": "update_options"
		};
		m.prototype.ready = function() {
			this.form = new FUI.Form("form", this.el);
			return this.form.reset(this.model.customer)
		};
		m.prototype.update_options = function(o) {
			o.preventDefault();
			this.form.toggle_loading();
			return this.model.customer.save(this.form.fields(), {
				success: (function(p) {
					return function() {}
				})(this),
				error: (function(p) {
					return function(q, r) {
						return p.form.error(r)
					}
				})(this),
				complete: (function(p) {
					return function() {
						return p.form.toggle_loading()
					}
				})(this)
			})
		};
		return m
	})(Sierra.View);
	a = (function(n) {
		b(m, n);

		function m() {
			return m.__super__.constructor.apply(this, arguments)
		}
		m.prototype.id = "limits";
		m.prototype.className = "nav-section";
		m.prototype.template = "admin/limits.html";
		m.prototype.events = {
			"submit form": "update_limits"
		};
		m.prototype.ready = function() {
			return this.form = new FUI.Form("form", this.el)
		};
		m.prototype.update_limits = function(o) {
			o.preventDefault();
			this.form.toggle_loading();
			return this.model.limits.update(this.form.fields(), {
				success: (function(p) {
					return function() {
						return p.form.flash("Updated Limits", "success")
					}
				})(this),
				complete: (function(p) {
					return function() {
						return p.form.toggle_loading()
					}
				})(this)
			})
		};
		return m
	})(Sierra.View);
	e = (function(m) {
		b(n, m);

		function n() {
			return n.__super__.constructor.apply(this, arguments)
		}
		n.prototype.id = "new_customers";
		n.prototype.className = "section";
		n.prototype.template = "admin/metrics/customers.html";
		return n
	})(Sierra.View);
	c = (function(n) {
		b(m, n);

		function m() {
			return m.__super__.constructor.apply(this, arguments)
		}
		m.prototype.id = "unverified_users";
		m.prototype.className = "section";
		m.prototype.template = "admin/metrics/unverified_users.html";
		return m
	})(Sierra.View);
	g = (function(n) {
		b(m, n);

		function m() {
			return m.__super__.constructor.apply(this, arguments)
		}
		m.prototype.id = "no_service_customers";
		m.prototype.className = "section";
		m.prototype.template = "admin/metrics/no_service_customers.html";
		return m
	})(Sierra.View);
	f = (function(n) {
		b(m, n);

		function m() {
			return m.__super__.constructor.apply(this, arguments)
		}
		m.prototype.id = "services";
		m.prototype.className = "nav-section";
		m.prototype.template = "admin/services.html";
		return m
	})(Sierra.View)
}).call(this);
(function() {
	var d, c, a = {}.hasOwnProperty,
		b = function(h, f) {
			for (var e in f) {
				if (a.call(f, e)) {
					h[e] = f[e]
				}
			}
			function g() {
				this.constructor = h
			}
			g.prototype = f.prototype;
			h.prototype = new g();
			h.__super__ = f.prototype;
			return h
		};
	Sierra.Views.Wizard = {};
	Sierra.Views.Wizard.Page = (function(f) {
		b(e, f);

		function e() {
			return e.__super__.constructor.apply(this, arguments)
		}
		e.prototype.id = "content";
		e.prototype.template = "wizard/page.html";
		e.prototype.title = "Set-up";
		e.prototype.initialize = function() {
			Sierra.PageView.prototype.initialize.apply(this, arguments);
			this.add_child("#wizard .step1", new d());
			return this.add_child("#wizard .step2", new c())
		};
		return e
	})(Sierra.PageView);
	d = (function(e) {
		b(f, e);

		function f() {
			return f.__super__.constructor.apply(this, arguments)
		}
		f.prototype.className = "step1 main col-md-12";
		f.prototype.template = "wizard/step1.html";
		f.prototype.events = {
			"submit form": "create_service"
		};
		f.prototype.ready = function() {
			return this.form = new FUI.Form("form", this.el)
		};
		f.prototype.create_service = function(g) {
			g.preventDefault();
			if (!this.form.validate()) {
				return
			}
			this.form.toggle_loading("Creating your service...");
			return Sierra.Models.Service.quickstart(this.form.fields(), {
				success: (function(h) {
					return function(k) {
						var j, l, i;
						j = k.domain.name;
						i = "" + j + ".global.prod.fastly.net";
						if (!i.match(/^https?:\/\//)) {
							i = "http://" + i
						}
						l = $("ul .preview a").text(i).attr("href", i);
						$(".step2 .domain").text(j);
						return $(".step1").fadeOut(250, function() {
							return $(".step2").fadeIn(250)
						})
					}
				})(this),
				error: (function(h) {
					return function(i) {
						return h.form.error(i)
					}
				})(this),
				complete: (function(h) {
					return function() {
						return h.form.toggle_loading()
					}
				})(this)
			})
		};
		return f
	})(Sierra.View);
	c = (function(e) {
		b(f, e);

		function f() {
			return f.__super__.constructor.apply(this, arguments)
		}
		f.prototype.className = "step2 main col-md-12";
		f.prototype.template = "wizard/step2.html";
		return f
	})(Sierra.View)
}).call(this);
(function() {
	var c, a = {}.hasOwnProperty,
		b = function(g, e) {
			for (var d in e) {
				if (a.call(e, d)) {
					g[d] = e[d]
				}
			}
			function f() {
				this.constructor = g
			}
			f.prototype = e.prototype;
			g.prototype = new f();
			g.__super__ = e.prototype;
			return g
		};
	if ((c = Sierra.Views).Account == null) {
		c.Account = {}
	}
	Sierra.Views.Account.Users = (function(e) {
		b(d, e);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.template = "users/list.html";
		d.prototype.partials = {
			modal: "users/modal.html",
			entry: "users/entry.html",
			change_password: "users/change_password.html",
			random_password: "users/random_password.html",
			invite: "account/invitations/modal.html",
			unlock: "users/confirm_unlock.html",
			lock: "users/confirm_lock.html",
			disable_two_factor: "users/confirm_disable_two_factor.html"
		};
		d.prototype.resource = "user";
		d.prototype.model_name = "User";
		d.prototype.collection_name = "Users";
		d.prototype.events = {
			"click .user-change-password": "show_change_password",
			"submit .change-password-modal form": "submit_password",
			"click .user-assume": "assume_user",
			"click .user-random-password": "show_random_password_dialog",
			"submit .random-password-modal form": "randomize_password",
			"click .user-invite": "show_invite_modal",
			"submit .user-invite-modal form": "invite_user",
			"click .unlock-account": "show_unlock_dialog",
			"submit .unlock-account-modal form": "unlock_account",
			"click .lock-account": "show_lock_dialog",
			"submit .lock-account-modal form": "lock_account",
			"click .disable-two-factor": "show_disable_two_factor_dialog",
			"submit .disable-two-factor-modal form": "disable_two_factor_auth"
		};
		d.prototype.initialize = function(h) {
			var i, g, k, f, j;
			if (h == null) {
				h = {}
			}
			this.admin = (h.admin != null) && h.admin && Sierra.can_do("salesadmin");
			delete h.admin;
			g = h.model;
			if (this.admin) {
				this.customers = g.customers
			}
			h.model = g.users;
			if (this.admin) {
				this.default_customer = h.default_customer;
				this.update_callback = (function(l) {
					return function() {
						return l.update_customers()
					}
				})(this);
				j = ["add", "remove", "update"];
				for (k = 0, f = j.length; k < f; k++) {
					i = j[k];
					this.customers.on(i, this.update_callback)
				}
			} else {
				this.invitations = g.invitations
			}
			return Sierra.ResourceView.prototype.initialize.call(this, h)
		};
		d.prototype.ready = function() {
			Sierra.ResourceView.prototype.ready.apply(this, arguments);
			this.change_password = new FUI.ModalForm(".change-password-modal", this.el);
			this.randomize_dialog = new FUI.ModalForm(".random-password-modal", this.el);
			this.invite_modal = new FUI.ModalForm(".user-invite-modal", this.el);
			this.unlock_modal = new FUI.ModalForm(".unlock-account-modal", this.el);
			this.lock_modal = new FUI.ModalForm(".lock-account-modal", this.el);
			this.disable_two_factor_modal = new FUI.ModalForm(".disable-two-factor-modal", this.el);
			if (this.admin) {
				return this.update_customers()
			}
		};
		d.prototype.destroy = function() {
			var g, i, f, h;
			if (this.admin) {
				h = ["add", "remove", "update"];
				for (i = 0, f = h.length; i < f; i++) {
					g = h[i];
					this.customers.off(g, this.update_callback)
				}
				this.update_callback = null;
				delete this.update_callback
			}
			return Sierra.ResourceView.prototype.destroy.apply(this, arguments)
		};
		d.prototype.update_customers = function() {
			var f;
			f = FUI.render("users/customer_options.html", {
				customers: this.customers.serialize()
			});
			return $("select[name=customer_id]").html(f)
		};
		d.prototype.show_new_modal = function() {
			Sierra.ResourceView.prototype.show_new_modal.apply(this, arguments);
			if (this.admin) {
				return this.form.field("customer_id", this.default_customer)
			}
		};
		d.prototype.create_entry = function(f) {
			if (f.owner_id === -1 && this.admin) {
				f.customer_id = null
			}
			return Sierra.ResourceView.prototype.create_entry.call(this, f)
		};
		d.prototype.update_entry = function(f) {
			if (f.owner_id === -1 && this.admin) {
				f.customer_id = null
			}
			return Sierra.ResourceView.prototype.update_entry.call(this, f)
		};
		d.prototype.show_change_password = function(f) {
			f.preventDefault();
			this.change_password.cid($(f.target).cid());
			this.change_password.reset();
			return this.change_password.show()
		};
		d.prototype.submit_password = function(g) {
			var f;
			g.preventDefault();
			if (!this.change_password.validate()) {
				return
			}
			this.change_password.toggle_loading("Changing password...");
			f = this.collection.getByCid(this.change_password.cid());
			return f.password({
				data: {
					new_password: this.change_password.field("new_password")
				},
				success: (function(h) {
					return function() {
						return h.change_password.hide()
					}
				})(this),
				error: (function(h) {
					return function(i) {
						return h.change_password.error(i)
					}
				})(this),
				complete: (function(h) {
					return function() {
						return h.change_password.toggle_loading()
					}
				})(this)
			})
		};
		d.prototype.assume_user = function(f) {
			f.preventDefault();
			return this.collection.getByCid($(f.target).cid()).assume({
				success: (function(g) {
					return function() {
						window.location.hash = "#analytics";
						return window.location.reload()
					}
				})(this)
			})
		};
		d.prototype.show_delete_modal = function(g) {
			var h, f;
			g.preventDefault();
			f = this.collection.getByCid($(g.target).cid());
			h = (function(i) {
				return function(j, k) {
					return i.delete_entry(j, k)
				}
			})(this);
			if (!this.admin && f.get("id") === Sierra.customer.get("billing_contact_id")) {
				return FUI.ConfirmDialog.show({
					title: "Confirm Delete",
					body: FUI.render("users/confirm_billing_delete.html", f.serialize()),
					escaped: true,
					callback: h
				})
			} else {
				return FUI.confirm_delete(f, h)
			}
		};
		d.prototype.show_random_password_dialog = function(g) {
			var f;
			g.preventDefault();
			f = this.collection.getByCid($(g.target).cid());
			this.randomize_dialog.find(".name").text(f.get("name"));
			this.randomize_dialog.reset(f);
			return this.randomize_dialog.show()
		};
		d.prototype.randomize_password = function(g) {
			var h, f;
			g.preventDefault();
			h = this.randomize_dialog.cid();
			f = this.collection.getByCid(this.randomize_dialog.cid());
			this.randomize_dialog.toggle_loading("Randomizing user password...");
			return f.randomize_password({
				success: (function(i) {
					return function() {
						i.randomize_dialog.hide();
						return FUI.Anim.highlight($.cid(i.randomize_dialog.cid(), i.el))
					}
				})(this),
				error: (function(i) {
					return function(j) {
						return i.randomize_dialog.error(j)
					}
				})(this),
				complete: (function(i) {
					return function() {
						return i.randomize_dialog.toggle_loading()
					}
				})(this)
			})
		};
		d.prototype.show_invite_modal = function(f) {
			f.preventDefault();
			this.invite_modal.reset();
			return this.invite_modal.show()
		};
		d.prototype.invite_user = function(g) {
			var f;
			g.preventDefault();
			if (!this.invite_modal.validate()) {
				return
			}
			this.invite_modal.toggle_loading();
			f = new Sierra.Models.Invitation();
			return f.save(this.invite_modal.fields(), {
				success: (function(h) {
					return function() {
						h.invite_modal.hide();
						return h.invitations.add(f)
					}
				})(this),
				error: (function(h) {
					return function(i, j) {
						return h.invite_modal.error(j)
					}
				})(this),
				complete: (function(h) {
					return function() {
						return h.invite_modal.toggle_loading()
					}
				})(this)
			})
		};
		d.prototype.show_unlock_dialog = function(g) {
			var f;
			g.preventDefault();
			f = this.collection.getByCid($(g.target).cid());
			this.unlock_modal.find(".name").text(f.get("name"));
			this.unlock_modal.reset(f);
			return this.unlock_modal.show()
		};
		d.prototype.show_lock_dialog = function(g) {
			var f;
			g.preventDefault();
			f = this.collection.getByCid($(g.target).cid());
			this.lock_modal.find(".name").text(f.get("name"));
			this.lock_modal.reset(f);
			return this.lock_modal.show()
		};
		d.prototype.show_disable_two_factor_dialog = function(g) {
			var f;
			g.preventDefault();
			f = this.collection.getByCid($(g.target).cid());
			this.disable_two_factor_modal.find(".name").text(f.get("name"));
			this.disable_two_factor_modal.reset(f);
			return this.disable_two_factor_modal.show()
		};
		d.prototype.unlock_account = function(g) {
			var h, f;
			g.preventDefault();
			this.unlock_modal.toggle_loading();
			h = this.unlock_modal.cid();
			f = this.collection.getByCid(this.unlock_modal.cid());
			return f.unlock({
				success: (function(i) {
					return function() {
						i.unlock_modal.hide();
						f.set("locked", 0);
						return i.collection.trigger("update", f)
					}
				})(this),
				error: (function(i) {
					return function(j, k) {
						return i.unlock_modal.error(k)
					}
				})(this),
				complete: (function(i) {
					return function() {
						return i.unlock_modal.toggle_loading()
					}
				})(this)
			})
		};
		d.prototype.lock_account = function(g) {
			var h, f;
			g.preventDefault();
			this.lock_modal.toggle_loading();
			h = this.lock_modal.cid();
			f = this.collection.getByCid(this.lock_modal.cid());
			return f.lock({
				success: (function(i) {
					return function() {
						i.lock_modal.hide();
						f.set("locked", 1);
						return i.collection.trigger("update", f)
					}
				})(this),
				error: (function(i) {
					return function(j, k) {
						return i.lock_modal.error(k)
					}
				})(this),
				complete: (function(i) {
					return function() {
						return i.lock_modal.toggle_loading()
					}
				})(this)
			})
		};
		d.prototype.disable_two_factor_auth = function(g) {
			var h, f;
			g.preventDefault();
			this.disable_two_factor_modal.toggle_loading();
			h = this.disable_two_factor_modal.cid();
			f = this.collection.getByCid(this.disable_two_factor_modal.cid());
			return f.admin_disable_two_factor_auth({
				success: (function(i) {
					return function() {
						i.disable_two_factor_modal.hide();
						f.set("two_factor_auth_enabled", 0);
						return i.collection.trigger("update", f)
					}
				})(this),
				error: (function(i) {
					return function(j, k) {
						return i.disable_two_factor_modal.error(k)
					}
				})(this),
				complete: (function(i) {
					return function() {
						return i.disable_two_factor_modal.toggle_loading()
					}
				})(this)
			})
		};
		d.prototype.cleanup = function() {
			if (this.change_password != null) {
				this.change_password.destroy();
				this.change_password = null
			}
			if (this.randomize_dialog != null) {
				this.randomize_dialog.destroy();
				this.randomize_dialog = null
			}
			if (this.invite_modal != null) {
				this.invite_modal.destroy();
				return this.invite_modal = null
			}
		};
		d.prototype.render = function() {
			this.cleanup();
			this.data = {
				roles: Sierra.user.get_roles(),
				id: Sierra.customer.get("id")
			};
			if (this.admin) {
				this.data.customers = this.customers.serialize()
			}
			return Sierra.ResourceView.prototype.render.apply(this, arguments)
		};
		return d
	})(Sierra.ResourceView)
}).call(this);
(function() {
	var c, a = {}.hasOwnProperty,
		b = function(g, e) {
			for (var d in e) {
				if (a.call(e, d)) {
					g[d] = e[d]
				}
			}
			function f() {
				this.constructor = g
			}
			f.prototype = e.prototype;
			g.prototype = new f();
			g.__super__ = e.prototype;
			return g
		};
	if ((c = Sierra.Views).Account == null) {
		c.Account = {}
	}
	Sierra.Views.Account.ConfirmationUsed = (function(e) {
		b(d, e);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.id = "content";
		d.prototype.title = function() {
			return "Confirmation already used"
		};
		d.prototype.template = "account/confirmation_used.html";
		d.prototype.className = "confirmation_used";
		d.prototype.reload = function() {
			return FUI.render(this)
		};
		return d
	})(Sierra.PageView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Account.Invitations = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.className = "invitations resource-view";
		c.prototype.resource = "invitations";
		c.prototype.model_name = "Invitation";
		c.prototype.collection_name = "Invitations";
		c.prototype.template = "account/invitations/list.html";
		c.prototype.modal = ".user-invite-modal";
		c.prototype.partials = {
			entry: "account/invitations/entry.html",
			modal: "account/invitations/modal.html"
		};
		c.prototype.events = {
			"click .user-invite": "show_invite_modal",
			"submit .user-invite-modal form": "invite_user"
		};
		c.prototype.invite_user = function(f) {
			f.preventDefault();
			this.form.toggle_loading();
			return this.create_entry(this.form.fields())
		};
		c.prototype.show_invite_modal = function(f) {
			f.preventDefault();
			this.form.reset();
			return this.form.show()
		};
		c.prototype.show_delete_modal = function(g) {
			var f, h;
			g.preventDefault();
			f = this.collection.getByCid($(g.target).cid());
			h = "Are you sure you want to cancel the invitation for " + (f.get("email")) + "?";
			return FUI.confirm_delete(f, (function(e) {
				return function() {
					return e.delete_entry.apply(e, arguments)
				}
			})(this))
		};
		c.prototype.delete_entry = function(e, f) {
			f.toggle_loading("Deleting " + this.resource + "...");
			return e.cancel({
				success: (function(g) {
					return function() {
						g.collection.remove(e);
						return f.hide()
					}
				})(this),
				error: (function(g) {
					return function(h, i) {
						return f.error(i)
					}
				})(this),
				complete: (function(g) {
					return function() {
						return f.toggle_loading()
					}
				})(this)
			})
		};
		c.prototype.render = function() {
			this.data.roles = Sierra.user.get_roles();
			return Sierra.ResourceView.prototype.render.apply(this, arguments)
		};
		return c
	})(Sierra.ResourceView)
}).call(this);
(function() {
	var c, d, a = {}.hasOwnProperty,
		b = function(h, f) {
			for (var e in f) {
				if (a.call(f, e)) {
					h[e] = f[e]
				}
			}
			function g() {
				this.constructor = h
			}
			g.prototype = f.prototype;
			h.prototype = new g();
			h.__super__ = f.prototype;
			return h
		};
	if ((c = Sierra.Views).Account == null) {
		c.Account = {}
	}
	if ((d = Sierra.Views.Account).Security == null) {
		d.Security = {}
	}
	Sierra.Views.Account.Security.Overview = (function(e) {
		b(f, e);

		function f() {
			return f.__super__.constructor.apply(this, arguments)
		}
		f.prototype.id = "content";
		f.prototype.layout = "Application";
		f.prototype.title = "Account Security";
		f.prototype.template = "account/security/overview.html";
		f.prototype.partials = {
			recovery_codes_modal: "account/security/modals/recovery_codes.html",
			disable_two_factor_auth_modal: "account/security/modals/disable_two_factor_auth.html"
		};
		f.prototype.events = {
			"click #show-recovery-codes": "show_recovery_codes",
			"click #disable-2fa": "show_disable_two_factor_auth",
			"submit .recovery-codes-modal form": "generate_codes",
			"submit .disable-two-factor-auth-modal form": "disable"
		};
		f.prototype.initialize = function() {
			var g;
			Sierra.PageView.prototype.initialize.apply(this, arguments);
			return g = {
				model: this.model
			}
		};
		f.prototype.ready = function() {
			this.recovery_codes_modal = new FUI.ModalForm(".recovery-codes-modal", this.el);
			this.disable_two_factor_auth_modal = new FUI.ModalForm(".disable-two-factor-auth-modal", this.el);
			this.generate_codes_form = new FUI.Form("form.generate-recovery-codes", this.el);
			return this.disable_form = new FUI.Form("form.disable-two-factor", this.el)
		};
		f.prototype.show_recovery_codes = function(g) {
			g.preventDefault();
			this.recovery_codes_modal.reset();
			return Sierra.user.get_recovery_codes({
				success: (function(h) {
					return function(j) {
						var i;
						i = $("#codes");
						i.html("");
						return $.each(j, function(k, l) {
							return i.append("" + l.code + "<br/>")
						})
					}
				})(this),
				complete: (function(h) {
					return function() {
						return h.recovery_codes_modal.show()
					}
				})(this)
			})
		};
		f.prototype.show_disable_two_factor_auth = function(g) {
			g.preventDefault();
			return this.disable_two_factor_auth_modal.show()
		};
		f.prototype.generate_codes = function(g) {
			g.preventDefault();
			this.recovery_codes_modal.toggle_loading("Generating new recovery codes...");
			return Sierra.user.generate_recovery_codes({
				success: (function(h) {
					return function(j) {
						var i;
						i = $("#codes");
						i.html("");
						return $.each(j, function(k, l) {
							return i.append("" + l.code + "<br/>")
						})
					}
				})(this),
				error: (function(h) {
					return function(i) {
						return h.generate_codes_form.flash("There was a problem generating your codes.")
					}
				})(this),
				complete: (function(h) {
					return function() {
						return h.recovery_codes_modal.toggle_loading()
					}
				})(this)
			})
		};
		f.prototype.disable = function(g) {
			g.preventDefault();
			this.disable_two_factor_auth_modal.toggle_loading("Disabling two-factor authentication...");
			return Sierra.user.disable_two_factor_auth(this.disable_form.field("token"), {
				success: (function(h) {
					return function(i) {
						Sierra.session.two_factor_authenticated = false;
						Sierra.user.set({
							two_factor_auth_enabled: false
						});
						Sierra.user.trigger("update");
						h.disable_two_factor_auth_modal.hide();
						return Sierra.navigate("account")
					}
				})(this),
				error: (function(h) {
					return function(i) {
						return h.disable_form.flash("The code provided is invalid.")
					}
				})(this),
				complete: (function(h) {
					return function() {
						return h.disable_two_factor_auth_modal.toggle_loading()
					}
				})(this)
			})
		};
		return f
	})(Sierra.PageView);
	Sierra.Views.Account.Security.TwoFactor = (function(f) {
		b(e, f);

		function e() {
			return e.__super__.constructor.apply(this, arguments)
		}
		e.prototype.id = "content";
		e.prototype.layout = "Application";
		e.prototype.title = "Set Up Two-Factor Authentication";
		e.prototype.template = "account/security/setup.html";
		e.prototype.events = {
			"submit form.verify-password": "verify_password",
			"submit form.verify-code": "verify_code"
		};
		e.prototype.initialize = function() {
			return Sierra.PageView.prototype.initialize.apply(this, arguments)
		};
		e.prototype.ready = function() {
			this.form = new FUI.Form("form", this.el);
			return this.form.find("[name=password]").focus()
		};
		e.prototype.verify_password = function(g) {
			g.preventDefault();
			if (!this.form.validate()) {
				return
			}
			this.form.flash("");
			this.form.toggle_loading();
			return Sierra.user.setup_two_factor_auth(this.form.field("password"), {
				success: (function(h) {
					return function(i) {
						$("#unverified").remove();
						$("#verified").show();
						$("#verified img").attr("src", "data:image/png;base64," + i.qr_code);
						return $("#verified #secret").text(i.secret.match(/.{1,4}/g).join(" "))
					}
				})(this),
				error: (function(h) {
					return function(i) {
						return h.form.flash("The password provided is invalid.")
					}
				})(this),
				complete: (function(h) {
					return function() {
						return h.form.toggle_loading()
					}
				})(this)
			})
		};
		e.prototype.verify_code = function(g) {
			g.preventDefault();
			if (!this.form.validate()) {
				return
			}
			this.form.flash("");
			this.form.toggle_loading();
			return Sierra.user.enable_two_factor_auth(this.form.field("token"), {
				success: (function(h) {
					return function(j) {
						var i;
						$("#verified").remove();
						$("#complete").show();
						i = $("#complete #codes");
						$.each(j, function(k, l) {
							return i.append("" + l.code + "<br/>")
						});
						Sierra.session.two_factor_authenticated = true;
						Sierra.user.set({
							two_factor_auth_enabled: true
						});
						return Sierra.user.trigger("update")
					}
				})(this),
				error: (function(h) {
					return function(i) {
						if (i.msg) {
							return h.form.flash(i.msg)
						} else {
							return h.form.flash("The code provided is invalid")
						}
					}
				})(this),
				complete: (function(h) {
					return function() {
						return h.form.toggle_loading()
					}
				})(this)
			})
		};
		return e
	})(Sierra.PageView)
}).call(this);
(function() {
	var e, f, a, b, c = {}.hasOwnProperty,
		d = function(j, h) {
			for (var g in h) {
				if (c.call(h, g)) {
					j[g] = h[g]
				}
			}
			function i() {
				this.constructor = j
			}
			i.prototype = h.prototype;
			j.prototype = new i();
			j.__super__ = h.prototype;
			return j
		};
	Sierra.Views.Metrics = {};
	Sierra.Views.Metrics.Page = (function(h) {
		d(g, h);

		function g() {
			return g.__super__.constructor.apply(this, arguments)
		}
		g.prototype.el = "#content";
		g.prototype.template = "metrics/page.html";
		g.prototype.title = "Metrics";
		g.prototype.initialize = function(i) {
			return this.on("render", (function(j) {
				return function() {
					new b(i).render();
					new f(i).render();
					new e(i).render();
					return new a(i).render()
				}
			})(this))
		};
		return g
	})(Sierra.PageView);
	e = (function(h) {
		d(g, h);

		function g() {
			return g.__super__.constructor.apply(this, arguments)
		}
		g.prototype.el = "#billing_container";
		g.prototype.template = "metrics/billing/show.html";
		g.prototype.accuracy = 3;
		g.prototype.initialize = function(i) {
			this.set_options(i);
			return Sierra.View.prototype.initialize.apply(this, arguments)
		};
		g.prototype.set_options = function(i) {
			if (this.billing) {
				delete this.billing
			}
			return this.billing = new Sierra.Models.Metrics.Billing(i)
		};
		g.prototype.serialize = function() {
			var k, m, j, i, l;
			k = this.billing.serialize();
			j = [];
			l = k.customers;
			for (i in l) {
				m = l[i];
				m.bandwidth = parseFloat(m.bandwidth).toFixed(this.accuracy);
				m.total_cost = parseFloat(m.total_cost).toFixed(this.accuracy);
				j.push(m)
			}
			k.customers = j;
			k.total_bandwidth = k.total_bandwidth.toFixed(this.accuracy);
			k.total_bandwidth_cost = k.total_bandwidth_cost.toFixed(this.accuracy);
			k.total_requests_cost = k.total_requests_cost.toFixed(this.accuracy);
			k.total_cost = k.total_cost.toFixed(this.accuracy);
			this.data.billing = k;
			return Sierra.View.prototype.render.call(this)
		};
		g.prototype.render = function() {
			return this.billing.fetch({
				success: (function(i) {
					return function() {
						return i.serialize()
					}
				})(this)
			})
		};
		return g
	})(Sierra.View);
	a = (function(h) {
		d(g, h);

		function g() {
			return g.__super__.constructor.apply(this, arguments)
		}
		g.prototype.el = "#prediction_container";
		g.prototype.template = "metrics/prediction/show.html";
		g.prototype.accuracy = 3;
		g.prototype.threshold = 20;
		g.prototype.initialize = function(i) {
			this.set_options(i);
			return Sierra.View.prototype.initialize.apply(this, arguments)
		};
		g.prototype.set_options = function(i) {
			if (this.prediction) {
				delete this.prediction
			}
			return this.prediction = new Sierra.Models.Metrics.Prediction(i)
		};
		g.prototype.serialize = function() {
			var m, j, i, k, l;
			k = this.prediction.serialize();
			j = [];
			l = k.customers;
			for (i in l) {
				m = l[i];
				m.total.incurred_cost = parseFloat(m.total.incurred_cost).toFixed(this.accuracy);
				m.total.cost = parseFloat(m.total.cost).toFixed(this.accuracy);
				if (m.total.cost > this.threshold || m.total.incurred_cost > this.threshold) {
					j.push(m)
				}
			}
			k.customers = j;
			k.total_incurred = k.total_incurred.toFixed(this.accuracy);
			k.total_billed = k.total_billed.toFixed(this.accuracy);
			this.data.prediction = k;
			return Sierra.View.prototype.render.call(this)
		};
		g.prototype.render = function() {
			return this.prediction.fetch({
				success: (function(i) {
					return function() {
						return i.serialize()
					}
				})(this)
			})
		};
		return g
	})(Sierra.View);
	b = (function(h) {
		d(g, h);

		function g() {
			return g.__super__.constructor.apply(this, arguments)
		}
		g.prototype.el = "#users_container";
		g.prototype.template = "metrics/users/list.html";
		g.prototype.partials = {
			row: "metrics/users/row.html"
		};
		g.prototype.initialize = function(i) {
			this.set_options(i);
			return Sierra.View.prototype.initialize.apply(this, arguments)
		};
		g.prototype.set_options = function(i) {
			if (this.users) {
				delete this.users
			}
			return this.users = new Sierra.Models.Metrics.Users(i)
		};
		g.prototype.serialize = function() {
			this.data.users = this.users.serialize();
			return Sierra.View.prototype.render.call(this)
		};
		g.prototype.render = function() {
			return this.users.fetch({
				success: (function(i) {
					return function() {
						return i.serialize()
					}
				})(this)
			})
		};
		return g
	})(Sierra.View);
	f = (function(g) {
		d(h, g);

		function h() {
			return h.__super__.constructor.apply(this, arguments)
		}
		h.prototype.el = "#customers_container";
		h.prototype.template = "metrics/customers/list.html";
		h.prototype.partials = {
			row: "metrics/customers/row.html"
		};
		h.prototype.initialize = function(i) {
			this.set_options(i);
			return Sierra.View.prototype.initialize.apply(this, arguments)
		};
		h.prototype.set_options = function(i) {
			if (this.customers) {
				delete this.customers
			}
			return this.customers = new Sierra.Models.Metrics.Customers(i)
		};
		h.prototype.serialize = function() {
			this.data.customers = this.customers.serialize();
			return Sierra.View.prototype.render.call(this)
		};
		h.prototype.render = function() {
			return this.customers.fetch({
				success: (function(i) {
					return function() {
						return i.serialize()
					}
				})(this)
			})
		};
		return h
	})(Sierra.View)
}).call(this);
(function() {
	var a, d, b = {}.hasOwnProperty,
		c = function(h, f) {
			for (var e in f) {
				if (b.call(f, e)) {
					h[e] = f[e]
				}
			}
			function g() {
				this.constructor = h
			}
			g.prototype = f.prototype;
			h.prototype = new g();
			h.__super__ = f.prototype;
			return h
		};
	a = (function(f) {
		c(e, f);

		function e() {
			return e.__super__.constructor.apply(this, arguments)
		}
		e.prototype.id = "analytics";
		e.prototype.className = "page";
		e.prototype.title = "Analytics";
		e.prototype.template = "analytics/dashboard.html";
		e.prototype.partials = {
			widgets: "analytics/widgets.html"
		};
		e.prototype.events = {
			"change [name=service_id]": "change_service",
			"change .background": "change_background",
			"change .datacenter": "change_datacenter"
		};
		e.prototype.visualizations = {
			".hitometer": "Hitometer",
			".datacenters": "DataCenters",
			".varnish_stats": "VarnishStats",
			".vis.requests": "RequestPlot",
			".vis.heatmap": "Heatmap"
		};
		e.prototype.respond_to = {
			"service:changed": "service_changed"
		};
		e.prototype.ready = function() {
			var i, h, g;
			this.service_search = new FUI.SearchBox(".service-search", this.el, {
				label: "name",
				search_keys: ["name", "customer_name", "id"],
				template: "fui/search_box/services.html",
				model: this.model.services
			});
			this.render_visualizations(this.model.service.get("id"));
			g = this._visualization_instances;
			for (h in g) {
				i = g[h];
				this.bind_background_listener(i)
			}
			this.apply_load_indicator(this.model.service.get("id"));
			return $("body").tooltip({
				selector: '[data-toggle="tooltip"]'
			})
		};
		e.prototype.destroy = function() {
			$("body").removeClass("dark");
			this.unbind_background_listeners();
			return Sierra.View.prototype.destroy.apply(this, arguments)
		};
		e.prototype.bind_background_listener = function(g) {
			return this.on("background:changed", (function(h) {
				return g.background_changed(h)
			}))
		};
		e.prototype.unbind_background_listeners = function() {
			return this.off("background:changed")
		};
		e.prototype.change_background = function(h) {
			var g;
			g = h.target.value.toLowerCase();
			if (g === "dark") {
				$("body").addClass("dark")
			} else {
				$("body").removeClass("dark")
			}
			Epoch.QueryCSS.purge();
			return this.trigger("background:changed", g)
		};
		e.prototype.change_service = function(g) {
			return Sierra.navigate("analytics/" + g.target.value)
		};
		e.prototype.service_changed = function() {
			var j, i, h, g;
			j = this.model.service.get("id");
			Fastly.Stats.subscribe(j);
			g = this._visualization_instances;
			for (h in g) {
				i = g[h];
				i.set_service(j)
			}
			return this.apply_load_indicator()
		};
		e.prototype.change_datacenter = function(l) {
			var h, k, j, i, g;
			h = l.target.value;
			i = this._visualization_instances;
			g = [];
			for (j in i) {
				k = i[j];
				g.push(k.set_datacenter(h))
			}
			return g
		};
		e.prototype.apply_load_indicator = function() {
			var g, h;
			h = this.model.service.get("id");
			clearTimeout(this.no_data_timeout);
			$(".nodata", this.el).hide();
			$(".loading", this.el).css("display", "block");
			this.no_data_timeout = setTimeout(((function(i) {
				return function() {
					return $(".nodata", i.el).fadeIn(100)
				}
			})(this)), 6500);
			g = (function(i) {
				return function() {
					clearTimeout(i.no_data_timeout);
					$(".nodata", i.el).hide();
					$(".loading", i.el).css("display", "none");
					return Fastly.Stats.off("update", h, g)
				}
			})(this);
			return Fastly.Stats.on("update", h, g)
		};
		return e
	})(Sierra.View);
	Sierra.Views.Analytics = (function(f) {
		c(e, f);

		function e() {
			return e.__super__.constructor.apply(this, arguments)
		}
		e.prototype.id = "content";
		e.prototype.title = function() {
			return "Analytics - " + (this.model.service.get("name"))
		};
		e.prototype.template = "analytics/page.html";
		e.prototype.initialize = function() {
			Sierra.PageView.prototype.initialize.apply(this, arguments);
			return this.add_child("#analytics", new a({
				model: this.model
			}))
		};
		return e
	})(Sierra.PageView);
	Sierra.Views.AnalyticsDemo = (function(f) {
		c(e, f);

		function e() {
			return e.__super__.constructor.apply(this, arguments)
		}
		e.prototype.id = "content";
		e.prototype.title = "Real-time Analytics Demo";
		e.prototype.template = "analytics/demo.html";
		e.prototype.partials = {
			widgets: "analytics/widgets.html"
		};
		e.prototype.visualizations = {
			".hitometer": "Hitometer",
			".datacenters": "DataCenters",
			".varnish_stats": "VarnishStats",
			".vis.requests": "RequestPlot",
			".vis.heatmap": "Heatmap"
		};
		e.prototype.ready = function() {
			var g;
			this.render_visualizations("demo");
			g = (function(h) {
				return function() {
					$("h2 img", h.el).hide();
					$("h2 .btn", h.el).fadeIn(500);
					$(".requests_info").toggleClass("hide");
					$("body").tooltip({
						selector: '[data-toggle="tooltip"]'
					});
					return Fastly.Stats.off("update", "demo", g)
				}
			})(this);
			return Fastly.Stats.on("update", "demo", g)
		};
		return e
	})(Sierra.PageView);
	Sierra.Views.AnalyticsDemoFluent2014 = (function(e) {
		c(f, e);

		function f() {
			return f.__super__.constructor.apply(this, arguments)
		}
		f.prototype.id = "content";
		f.prototype.title = "Operations Overview";
		f.prototype.template = "analytics/fluent.html";
		f.prototype.partials = {
			widgets: "analytics/widgets_fluent.html"
		};
		f.prototype.visualizations = {
			".hitometer": "Hitometer",
			".varnish_stats": "VarnishStats"
		};
		f.prototype.ready = function() {
			var g;
			this.render_visualizations("demo");
			g = (function(h) {
				return function() {
					$("h2 img", h.el).hide();
					$("h2 .btn", h.el).fadeIn(500);
					$(".requests_info").toggleClass("hide");
					$("body").tooltip({
						selector: '[data-toggle="tooltip"]'
					});
					return Fastly.Stats.off("update", "demo", g)
				}
			})(this);
			return Fastly.Stats.on("update", "demo", g)
		};
		return f
	})(Sierra.PageView);
	Sierra.Views.S3 = (function(f) {
		c(e, f);

		function e() {
			return e.__super__.constructor.apply(this, arguments)
		}
		e.prototype.id = "content";
		e.prototype.title = "Amazon S3 Traffic Overview";
		e.prototype.template = "analytics/s3.html";
		e.prototype.partials = {
			widgets: "analytics/widgets_s3.html"
		};
		e.prototype.visualizations = {
			".heatmap": "Heatmap"
		};
		e.prototype.ready = function() {
			var g;
			this.render_visualizations("s3");
			g = (function(h) {
				return function() {
					$("h2 img", h.el).hide();
					$("h2 .btn", h.el).fadeIn(500);
					return Fastly.Stats.off("update", "s3", g)
				}
			})(this);
			return Fastly.Stats.on("update", "s3", g)
		};
		return e
	})(Sierra.PageView);
	if ((d = Sierra.Views).Widgets == null) {
		d.Widgets = {}
	}
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Paginator = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.template = "common/paginator.html";
		d.prototype.page_size = 5;
		d.prototype.className = "paginator";
		d.prototype.events = {
			"click li a": "change_page",
			"click button[data-page=next]": "next_page",
			"click button[data-page=prev]": "prev_page"
		};
		d.prototype.initialize = function(e) {
			e.serialize_model = false;
			if (e.page_size != null) {
				this.page_size = e.page_size
			}
			return Sierra.View.prototype.initialize.apply(this, arguments)
		};
		d.prototype.paginate = function() {
			if (this.current_page == null) {
				this.current_page = 0
			}
			return this.pages = Math.ceil(this.model.length / this.page_size) | 0
		};
		d.prototype.prev_page = function(f) {
			f.preventDefault();
			return this.goto_page(this.current_page - 1)
		};
		d.prototype.next_page = function(f) {
			f.preventDefault();
			return this.goto_page(this.current_page - 1)
		};
		d.prototype.change_page = function(i) {
			var f, h, g;
			i.preventDefault();
			g = [$(i.target).parents("li"), $(i.target).attr("data-page")], f = g[0], h = g[1];
			if (f.hasClass("disabled") || f.hasClass("active")) {
				return
			}
			if (h === "prev") {
				return this.goto_page(this.current_page - 1)
			}
			if (h === "next") {
				return this.goto_page(this.current_page + 1)
			}
			return this.goto_page(parseInt(h))
		};
		d.prototype.refresh_page = function() {
			return this.goto_page(this.current_page)
		};
		d.prototype.goto_page = function(h) {
			var f, e, g;
			this.current_page = h;
			this.paginate();
			if ((this.current_page == null) || this.current_page < 0) {
				this.current_page = 0
			}
			if (this.current_page >= this.pages) {
				this.current_page = this.pages - 1
			}
			g = [this.current_page * this.page_size, (this.current_page + 1) * this.page_size], f = g[0], e = g[1];
			this.trigger("change", f, e, this.current_page);
			return this.render()
		};
		d.prototype.ready = function() {
			this.paginate();
			if (this.pages <= 1) {
				return $(this.el).hide()
			} else {
				return $(this.el).show()
			}
		};
		d.prototype.render = function() {
			var g, u, w, q, t, p, k, j, h, f, v, e, s, o, n, m, l, r;
			if (this.pages == null) {
				return
			}
			this.data = {
				pages: [{
					number: 0,
					label: 1
				}],
				prev_class: this.current_page === 0 ? "disabled" : "",
				next_class: this.current_page === this.pages - 1 ? "disabled" : ""
			};
			g = {
				ellipsis: true,
				label: "..."
			};
			if (this.current_page === 0) {
				this.data.pages[0].active = true
			}
			p = 11;
			w = p - 4;
			if (this.pages < p) {
				t = (function() {
					l = [];
					for (var x = 1, i = this.pages; 1 <= i ? x < i : x > i; 1 <= i ? x++ : x--) {
						l.push(x)
					}
					return l
				}).apply(this)
			} else {
				if (this.current_page < p - 3) {
					t = (function() {
						r = [];
						for (var x = 1, i = p - 3; 1 <= i ? x <= i : x >= i; 1 <= i ? x++ : x--) {
							r.push(x)
						}
						return r
					}).apply(this);
					t.push("...");
					t.push(this.pages - 1)
				} else {
					if (this.current_page < (this.pages - w - 1)) {
						t = ["..."];
						for (u = h = 0, n = p - 4; 0 <= n ? h < n : h > n; u = 0 <= n ? ++h : --h) {
							t.push(u - (Math.floor(w / 2) | 0) + this.current_page)
						}
						t.push("...");
						t.push(this.pages - 1)
					} else {
						t = ["..."];
						for (u = f = m = p - 2; m <= 1 ? f <= 1 : f >= 1; u = m <= 1 ? ++f : --f) {
							t.push(this.pages - u)
						}
					}
				}
			}
			for (e = 0, v = t.length; e < v; e++) {
				u = t[e];
				if (u === "...") {
					this.data.pages.push(g)
				} else {
					q = {
						number: u,
						label: u + 1
					};
					if (u === this.current_page) {
						q.active = true
					}
					this.data.pages.push(q)
				}
			}
			return Sierra.View.prototype.render.apply(this, arguments)
		};
		return d
	})(Sierra.View)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Layouts.Auth = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.template = "layout/auth.html";
		return c
	})(Sierra.LayoutView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Layouts.Blank = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.template = "layout/blank.html";
		return c
	})(Sierra.LayoutView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Layouts.Application = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.template = "layout/application.html";
		d.prototype.events = {
			"click #assume_box .unassume": "unassume",
			"click #header #nav a": "navigate",
			"mousedown #github_issue_link": "click_github_issue_link"
		};
		d.prototype.initialize = function() {
			Sierra.LayoutView.prototype.initialize.apply(this, arguments);
			this.model.menu.on("hash:changed", (function(e) {
				return function(f) {
					return e.highlight_menu(f)
				}
			})(this));
			if (Sierra.user != null) {
				return Sierra.user.on("updated", (function(e) {
					return function() {
						return e.update_user_box()
					}
				})(this))
			}
		};
		d.prototype.ready = function() {
			if (Sierra.can_do("internal")) {
				return $(this.el).addClass("admin")
			}
		};
		d.prototype.update_user_box = function() {
			$("#user_box img.avatar").replaceWith('<img class="avatar" src="' + (Sierra.user.gravatar_url(40)) + '">');
			return $("#user_box .email").text(Sierra.user.get("login"))
		};
		d.prototype.highlight_menu = function(e) {
			if (e == null) {
				return
			}
			if ($(".navbar-collapse ul li." + e).hasClass("selected")) {
				return
			}
			$(".navbar-collapse ul li").removeClass("selected");
			return $(".navbar-collapse ul li." + e).addClass("selected")
		};
		d.prototype.unassume = function(f) {
			f.preventDefault();
			return Fastly.unassume({
				success: function(e) {
					return window.location.reload()
				}
			})
		};
		d.prototype.navigate = function(g) {
			var f;
			g.preventDefault();
			Sierra.navigate((f = g.target.href.split("#").pop()));
			if (f === "analytics" || f === "admin") {
				return $(window).scrollTop(0)
			}
		};
		d.prototype.click_github_issue_link = function(f) {
			return f.target.href = "https://github.com/fastly/Sierra/issues/new?body=I am using Sierra version " + this.data.version + " via " + this.data.browser_name + " " + this.data.browser_version + " for " + this.data.browser_os + ". I was on " + (encodeURIComponent(window.location.href)) + " ."
		};
		return d
	})(Sierra.LayoutView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Widgets.Hitometer = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.el = "#analytics .hitometer";
		c.prototype.initialize = function() {
			this.chart = $(".epoch", this.el).epoch({
				type: "time.gauge",
				value: 0
			});
			return Sierra.StatsView.prototype.initialize.apply(this, arguments)
		};
		c.prototype.history = function(e) {
			return this.update(e)
		};
		c.prototype.update = function(e) {
			var f;
			f = e.current(this.dc);
			return this.chart.update(f != null ? f.hit_ratio : 0)
		};
		c.prototype.reset = function() {
			this.chart.update(0);
			return Sierra.StatsView.prototype.reset.apply(this, arguments)
		};
		return c
	})(Sierra.StatsView);
	Sierra.Views.Widgets.MiniHitometer = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.el = "#configure_overview .stats .hitometer";
		c.prototype.initialize = function() {
			this.chart = $(".epoch", this.el).epoch({
				type: "time.gauge",
				value: 0
			});
			return Sierra.StatsView.prototype.initialize.apply(this, arguments)
		};
		c.prototype.history = function(e) {
			return this.update(e)
		};
		c.prototype.update = function(e) {
			var f;
			f = e.current().aggregated;
			return this.chart.update(f != null ? f.hit_ratio : 0)
		};
		c.prototype.reset = function() {
			this.chart.update(0);
			return Sierra.StatsView.prototype.reset.apply(this, arguments)
		};
		return c
	})(Sierra.StatsView)
}).call(this);
(function() {
	var b, a = {}.hasOwnProperty,
		c = function(g, e) {
			for (var d in e) {
				if (a.call(e, d)) {
					g[d] = e[d]
				}
			}
			function f() {
				this.constructor = g
			}
			f.prototype = e.prototype;
			g.prototype = new f();
			g.__super__ = e.prototype;
			return g
		};
	b = function(f) {
		var e;
		if (f < 1000) {
			return "" + f + "ms"
		}
		e = f / 1000;
		if ((e | 0) === e) {
			return "" + e + "s"
		}
		return "" + (e.toFixed(1)) + "s"
	};
	Sierra.Views.Widgets.Heatmap = (function(e) {
		c(d, e);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.el = "#analytics .heatmap";
		d.prototype.events = {
			"change .bucket-range": "change_bucket_range"
		};
		d.prototype._get_history = function() {
			var f, h, g;
			h = Fastly.Stats.channel;
			f = this.dc;
			g = [];
			h.each(function(k) {
				var j, i;
				i = k.recorded;
				j = f === "aggregated" ? k.aggregated.miss_histogram : k.datacenter[f].miss_histogram;
				return g.push({
					time: i,
					histogram: j
				})
			});
			return [{
				label: "miss_latency",
				values: g
			}]
		};
		d.prototype.change_bucket_range = function(f) {
			this.chart.options.bucketRange = [0, parseInt($(f.target).val())];
			this.chart._queue = [];
			this.chart.setData(this._get_history());
			this.chart.redraw();
			return this.chart._paintEntry()
		};
		d.prototype.set_datacenter = function(f) {
			this.dc = f;
			this.chart._queue = [];
			this.chart.setData(this._get_history());
			this.chart.redraw();
			return this.chart._paintEntry()
		};
		d.prototype.history = function(f) {
			return this.chart != null ? this.chart : this.chart = $("#heatmap", this.el).epoch({
				type: "time.heatmap",
				axes: ["left", "right", "bottom"],
				tickFormats: {
					left: b,
					right: b
				},
				windowSize: 100,
				bucketRange: [0, 20000],
				buckets: 40,
				bucketPadding: 1,
				data: this._get_history(),
				opacity: function(h, g) {
					return Math.pow(h / g, 0.49)
				}
			})
		};
		d.prototype.update = function(f) {
			var h, g;
			g = f.now();
			h = f.current(this.dc);
			return this.chart.push([{
				time: g,
				histogram: h.miss_histogram
			}])
		};
		d.prototype.background_changed = function() {
			this.chart.redraw();
			return this.chart._paintEntry()
		};
		return d
	})(Sierra.StatsView);
	Sierra.Views.Widgets.MiniHeatmap = (function(e) {
		c(d, e);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.el = "#configure_overview .stats .heatmap";
		d.prototype.history = function(g) {
			var f;
			f = [];
			g.each(function(h) {
				return f.push({
					time: h.recorded,
					histogram: h.aggregated.miss_histogram
				})
			});
			return this.chart != null ? this.chart : this.chart = $("#mini-heatmap", this.el).epoch({
				type: "time.heatmap",
				axes: [],
				margins: {
					top: 0,
					bottom: 0,
					left: 0,
					right: 0
				},
				windowSize: 60,
				bucketRange: [0, 3000],
				buckets: 20,
				bucketPadding: 1,
				data: [{
					label: "miss_latency",
					values: f
				}],
				opacity: function(i, h) {
					return Math.pow(i / h, 0.49)
				}
			})
		};
		d.prototype.update = function(f) {
			var g;
			g = f.current();
			return this.chart.push([{
				time: g.recorded,
				histogram: g.aggregated.miss_histogram
			}])
		};
		return d
	})(Sierra.Views.Widgets.Heatmap)
}).call(this);
(function() {
	var b, d, e, a = {}.hasOwnProperty,
		c = function(i, g) {
			for (var f in g) {
				if (a.call(g, f)) {
					i[f] = g[f]
				}
			}
			function h() {
				this.constructor = i
			}
			h.prototype = g.prototype;
			i.prototype = new h();
			i.__super__ = g.prototype;
			return i
		};
	b = (function(g) {
		c(f, g);

		function f(h) {
			this.options = h;
			f.__super__.constructor.call(this, this.options);
			this.showAvg = false
		}
		f.prototype.draw = function(n) {
			var m, j, h, l, k;
			if (n == null) {
				n = 0
			}
			f.__super__.draw.call(this, n);
			if (!this.showAvg) {
				return
			}
			h = this.data[this.data.length - 1].values;
			if (!(h.length > 0)) {
				return
			}
			m = 0;
			for (j = l = 0, k = h.length; 0 <= k ? l < k : l > k; j = 0 <= k ? ++l : --l) {
				m += h[j].y0 + h[j].y
			}
			m /= h.length;
			if ($("body").hasClass("dark")) {
				this.ctx.strokeStyle = "white"
			} else {
				this.ctx.strokeStyle = "black"
			}
			this.ctx.lineWidth = 2 * this.pixelRatio;
			this.ctx.setLineDash([2 * this.pixelRatio, 3 * this.pixelRatio]);
			this.ctx.beginPath();
			this.ctx.moveTo(0, this.y()(m));
			this.ctx.lineTo(this.innerWidth(), this.y()(m));
			this.ctx.stroke();
			return this.ctx.setLineDash([])
		};
		return f
	})(Epoch.Time.Area);
	e = (function(f) {
		c(g, f);

		function g() {
			return g.__super__.constructor.apply(this, arguments)
		}
		g.prototype.extent = function() {
			return [0, 1]
		};
		return g
	})(b);
	d = (function(g) {
		c(f, g);

		function f() {
			return f.__super__.constructor.apply(this, arguments)
		}
		f.prototype.ySvg = function() {
			return d3._byte.scale().domain(this.extent(function(h) {
				return h.y
			})).range([this.innerHeight() / this.pixelRatio, 0])
		};
		return f
	})(b);
	Sierra.Views.Widgets.RequestPlot = (function(f) {
		c(g, f);

		function g() {
			return g.__super__.constructor.apply(this, arguments)
		}
		g.prototype.el = "#analytics .vis.requests";
		g.prototype.labels = ["errors", "miss", "hits", "synth", "pass"];
		g.prototype.titles = {
			requests: "Requests",
			errors: "Errors",
			bandwidth: "Bandwidth",
			hit_ratio: "Hit Ratio"
		};
		g.prototype.events = {
			"change select.plot": "change_plot",
			"change [name=show_avg]": "toggle_avg"
		};
		g.prototype.initialize = function() {
			Sierra.StatsView.prototype.initialize.apply(this, arguments);
			return this.plot = "requests"
		};
		g.prototype.change_plot = function(h) {
			this.plot = $(h.target).val();
			$(".epoch", this.el).hide();
			if (this.plot === "requests") {
				$("#request-plot", this.el).show();
				this.chart.draw()
			} else {
				if (this.plot === "errors") {
					$("#errors-plot", this.el).show();
					this.errors_chart.draw()
				} else {
					if (this.plot === "bandwidth") {
						$("#bandwidth-plot", this.el).show();
						this.bandwidth_chart.draw()
					} else {
						if (this.plot === "hit_ratio") {
							$("#hitratio-plot", this.el).show();
							this.hit_ratio_chart.draw()
						}
					}
				}
			}
			$("h3", this.el).text("" + this.titles[this.plot] + " / Time");
			this.update_avg_text();
			$(".request_summary p").addClass("hide");
			return $("." + ("" + this.plot) + "_info").toggleClass("hide")
		};
		g.prototype.toggle_avg = function(h) {
			this.chart.showAvg = !this.chart.showAvg;
			this.errors_chart.showAvg = !this.errors_chart.showAvg;
			this.bandwidth_chart.showAvg = !this.bandwidth_chart.showAvg;
			return this.hit_ratio_chart.showAvg = !this.hit_ratio_chart.showAvg
		};
		g.prototype._get_history = function() {
			var k, j, p, o, l, n, q, h, m, i;
			q = Fastly.Stats.channel;
			j = [];
			i = this.labels;
			for (h = 0, m = i.length; h < m; h++) {
				n = i[h];
				j.push({
					label: n,
					values: []
				})
			}
			o = [];
			k = [];
			l = [];
			p = this.dc;
			q.each(function(w) {
				var t, v, s, u, r;
				v = w.recorded;
				s = w.aggregated;
				if (p !== "aggregated") {
					s = w.datacenter[p]
				}
				for (u = 0, r = j.length; u < r; u++) {
					t = j[u];
					t.values.push({
						time: v,
						y: s[t.label]
					})
				}
				o.push({
					time: v,
					y: s.errors
				});
				k.push({
					time: v,
					y: s.bandwidth
				});
				return l.push({
					time: v,
					y: s.hit_ratio
				})
			});
			return {
				requests: j,
				errors: [{
					label: "errors",
					values: o
				}],
				bandwidth: [{
					label: "bandwidth",
					values: k
				}],
				hit_ratio: [{
					label: "hit_ratio",
					values: l
				}]
			}
		};
		g.prototype.set_datacenter = function(h) {
			var i;
			this.dc = h;
			i = this._get_history();
			this.chart.setData(i.requests);
			this.chart._queue = [];
			this.chart.draw();
			this.errors_chart.setData(i.errors);
			this.errors_chart._queue = [];
			this.errors_chart.draw();
			this.bandwidth_chart.setData(i.bandwidth);
			this.bandwidth_chart._queue = [];
			this.bandwidth_chart.draw();
			this.hit_ratio_chart.setData(i.hit_ratio);
			this.bandwidth_chart._queue = [];
			return this.hit_ratio_chart.draw()
		};
		g.prototype.history = function(h) {
			var i;
			i = this._get_history();
			if (this.chart == null) {
				this.chart = new b({
					el: $("#request-plot", this.el),
					axes: ["left", "right", "bottom"],
					data: i.requests,
					windowSize: 100
				})
			}
			this.chart.draw();
			if (this.errors_chart == null) {
				this.errors_chart = new b({
					el: $("#errors-plot", this.el),
					axes: ["left", "right", "bottom"],
					data: i.errors,
					windowSize: 100
				})
			}
			this.errors_chart.draw();
			if (this.bandwidth_chart == null) {
				this.bandwidth_chart = new d({
					el: $("#bandwidth-plot", this.el),
					axes: ["left", "right", "bottom"],
					data: i.bandwidth,
					tickFormats: {
						left: FUI.format_bytes,
						right: FUI.format_bytes
					},
					windowSize: 100
				})
			}
			this.bandwidth_chart.draw();
			if (this.hit_ratio_chart == null) {
				this.hit_ratio_chart = new e({
					el: $("#hitratio-plot", this.el),
					axes: ["left", "right", "bottom"],
					data: i.hit_ratio,
					tickFormats: {
						left: function(j) {
							return parseInt(j * 100) + "%"
						},
						right: function(j) {
							return parseInt(j * 100) + "%"
						}
					},
					windowSize: 100
				})
			}
			this.hit_ratio_chart.draw();
			return Sierra.StatsView.prototype.history.apply(this, arguments)
		};
		g.prototype.update = function(j) {
			var o, m, i, n, l, h, k;
			n = j.now();
			o = j.current(this.dc);
			m = [];
			k = this.labels;
			for (l = 0, h = k.length; l < h; l++) {
				i = k[l];
				m.push({
					time: n,
					y: o[i]
				})
			}
			this.chart.push(m);
			this.errors_chart.push([{
				time: n,
				y: o.errors
			}]);
			this.bandwidth_chart.push([{
				time: n,
				y: o.bandwidth
			}]);
			this.hit_ratio_chart.push([{
				time: n,
				y: o.hit_ratio
			}]);
			return this.update_avg_text()
		};
		g.prototype.update_avg_text = function() {
			var h;
			h = Fastly.Stats.channel.avg(this.plot, this.dc);
			if (this.plot === "bandwidth") {
				h = FUI.format_bytes(h)
			} else {
				if (this.plot === "hit_ratio") {
					h = parseInt(h * 100) + "%"
				} else {
					h = FUI.format_si(h)
				}
			}
			return $(".requests span.avg-text").text(h)
		};
		return g
	})(Sierra.StatsView);
	Sierra.Views.Widgets.Sparklines = (function(f) {
		c(g, f);

		function g() {
			return g.__super__.constructor.apply(this, arguments)
		}
		g.prototype.el = "#configure_overview .stats .widget.sparklines";
		g.prototype.labels = ["errors", "miss", "hits", "synth", "pass"];
		g.prototype.history = function(j) {
			var m, i, l, h, k;
			m = [];
			k = this.labels;
			for (l = 0, h = k.length; l < h; l++) {
				i = k[l];
				m.push({
					label: i,
					values: []
				})
			}
			j.each(function(r) {
				var p, q, o, n;
				n = [];
				for (q = 0, o = m.length; q < o; q++) {
					p = m[q];
					n.push(p.values.push({
						time: r.recorded,
						y: r.aggregated[p.label]
					}))
				}
				return n
			});
			return this.chart = $("#sparklines", this.el).epoch({
				type: "time.area",
				axes: [],
				data: m,
				margins: {
					top: 6,
					right: 0,
					bottom: 0,
					left: 0
				},
				windowSize: 60
			})
		};
		g.prototype.update = function(j) {
			var n, m, i, l, h, k;
			n = j.current();
			m = [];
			k = this.labels;
			for (l = 0, h = k.length; l < h; l++) {
				i = k[l];
				m.push({
					time: n.recorded,
					y: n.aggregated[i]
				})
			}
			return this.chart.push(m)
		};
		return g
	})(Sierra.StatsView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Widgets.VarnishStats = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.el = "#analytics .varnish_stats";
		d.prototype.template = "analytics/widget/varnish_stats.html";
		d.prototype.type = "current";
		d.prototype.name = "Varnish Stats";
		d.prototype.default_data = {
			timestamp: "N/A",
			hit_ratio: "0%",
			hits: 0,
			miss: 0,
			errors: 0,
			requests: 0,
			hits_time: 0,
			miss_time: 0
		};
		d.prototype.history = function(e) {
			return this.update(e)
		};
		d.prototype.update = function(j) {
			var m, l, i, h, g, f, e;
			$(this.el).parents(".varnish_stats").find(".title").show();
			if ((m = j.current(this.dc)) != null) {
				i = m.hits === 0 ? "N/A" : (m.hits_time * 1000 / m.hits).toFixed(4);
				g = m.miss === 0 ? "N/A" : (m.miss_time * 1000 / m.miss).toFixed(2);
				l = {
					timestamp: new Date(j.current().recorded * 1000).toLocaleTimeString(),
					hit_ratio: (parseFloat(m.hit_ratio) * 100).toFixed(1) + "%",
					hits: m.hits,
					miss: m.miss,
					errors: m.errors,
					requests: m.requests,
					hits_time: i,
					miss_time: g
				}
			} else {
				l = this.default_data
			}
			e = [];
			for (h in l) {
				f = l[h];
				e.push($("." + h, this.el).text(f))
			}
			return e
		};
		d.prototype.set_datacenter = function(e) {
			this.dc = e;
			return this.update(Fastly.Stats.channel)
		};
		d.prototype.reset = function() {
			var f, h, e, g;
			g = ["timestamp", "hit_ratio", "hits", "miss", "hits_time", "miss_time", "errors", "requests"];
			for (h = 0, e = g.length; h < e; h++) {
				f = g[h];
				$("." + f, this.el).html("")
			}
			return Sierra.StatsView.prototype.reset.apply(this, arguments)
		};
		return d
	})(Sierra.StatsView);
	Sierra.Views.Widgets.MiniStats = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.template = "analytics/widget/mini_stats.html";
		c.prototype.history = function(e) {
			return this.update(e)
		};
		c.prototype.format_number = function(e) {
			return FUI.format_si(e, 1)
		};
		c.prototype.update = function(e) {
			var f;
			f = e.current().aggregated;
			$(".hits", this.el).text(this.format_number(f.hits));
			$(".miss", this.el).text(this.format_number(f.miss));
			return $(".errors", this.el).text(this.format_number(f.errors))
		};
		return c
	})(Sierra.StatsView)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Widgets.DataCenters = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.el = "#analytics .datacenters";
		c.prototype.width = 265;
		c.prototype.height = 130;
		c.prototype.fps = 30;
		c.prototype.max_radius = 30;
		c.prototype.centers = {
			"SJC SJC2 SJC3 TWSJC2": {
				x: 35,
				y: 52
			},
			ASH: {
				x: 64,
				y: 53
			},
			"LHR TWLON1": {
				x: 123,
				y: 41
			},
			AMS: {
				x: 129,
				y: 42
			},
			AU: {
				x: 234,
				y: 110
			},
			DAL: {
				x: 53,
				y: 56
			},
			TWSIN1: {
				x: 198,
				y: 83
			},
			NZ: {
				x: 251,
				y: 116
			},
			LAX: {
				x: 37,
				y: 56
			},
			ATL: {
				x: 62,
				y: 57
			},
			NYC: {
				x: 72,
				y: 47
			},
			TYO: {
				x: 226,
				y: 56
			}
		};
		c.prototype.styles = {
			center: "rgba(255, 0, 0, 0.6)",
			title: "#888"
		};
		c.prototype.initialize = function() {
			var h, f, g, e;
			g = this.make_canvas(this.width, this.height), this.canvas = g[0], this.g = g[1];
			e = this.centers;
			for (f in e) {
				h = e[f];
				_.extend(h, {
					current: 0,
					target: 0,
					delta: 0
				})
			}
			this.g.textAlign = "center";
			this.g.textBaseline = "bottom";
			this.g.font = "normal 13px tahoma";
			this.world_map_dark = new Image();
			this.world_map_dark.onload = (function(i) {
				return function() {
					i.world_map_light = new Image();
					i.world_map_light.onload = function() {
						return i.draw_interval = setInterval((function() {
							return i.draw()
						}), 1000 / i.fps)
					};
					i.world_map = i.world_map_light;
					return i.world_map_light.src = "/images/new_world_map.png"
				}
			})(this);
			this.world_map_dark.src = "/images/new_world_map_dark.png";
			$(this.el).append('<p class="widget-label">Global Traffic</p>');
			return Sierra.StatsView.prototype.initialize.apply(this, arguments)
		};
		c.prototype.destroy = function() {
			clearInterval(this.draw_interval);
			this.canvas = null;
			delete this.canvas;
			this.g = null;
			delete this.g;
			return Sierra.StatsView.prototype.destroy.apply(this, arguments)
		};
		c.prototype.background_changed = function(e) {
			if (e === "dark") {
				return this.world_map = this.world_map_dark
			} else {
				return this.world_map = this.world_map_light
			}
		};
		c.prototype.reset = function() {
			var g, e, f;
			f = this.centers;
			for (e in f) {
				g = f[e];
				_.extend(g, {
					current: 0,
					target: 0,
					delta: 0
				})
			}
			return Sierra.StatsView.prototype.reset.apply(this, arguments)
		};
		c.prototype.update = function(r) {
			var m, l, k, e, n, q, o, i, p, j, h, f, g;
			j = [r.current().aggregated.hits,
			{}], o = j[0], k = j[1];
			h = this.centers;
			g = [];
			for (n in h) {
				m = h[n];
				l = 0;
				f = n.split(" ");
				for (i = 0, p = f.length; i < p; i++) {
					e = f[i];
					if (typeof r.current().datacenter === "undefined") {
						continue
					}
					q = r.current().datacenter[e];
					if (q != null) {
						l += q.hits
					}
				}
				m.target = l / o;
				g.push(m.delta = (m.target - m.current) / (this.fps * 2.5))
			}
			return g
		};
		c.prototype.draw = function() {
			this.g.clearRect(0, 0, this.width, this.height);
			this.g.drawImage(this.world_map, 0, 0);
			return this.draw_datacenters()
		};
		c.prototype.draw_datacenters = function() {
			var i, f, h, g, e;
			window.ccc = this.centers;
			h = 2 * Math.PI;
			this.g.fillStyle = this.styles.center;
			g = this.centers;
			e = [];
			for (f in g) {
				i = g[f];
				if (Math.abs(i.target - i.current) <= Math.abs(i.delta)) {
					i.current = i.target;
					i.delta = 0
				} else {
					if (i.delta !== 0) {
						i.current += i.delta
					}
				}
				if (i.current <= 0) {
					continue
				}
				this.g.beginPath();
				this.g.arc(i.x, i.y, this.max_radius * i.current, 0, h);
				e.push(this.g.fill())
			}
			return e
		};
		return c
	})(Sierra.StatsView)
}).call(this);
(function() {
	var a, c, i, e, d, h, g, f = {}.hasOwnProperty,
		b = function(m, k) {
			for (var j in k) {
				if (f.call(k, j)) {
					m[j] = k[j]
				}
			}
			function l() {
				this.constructor = m
			}
			l.prototype = k.prototype;
			m.prototype = new l();
			m.__super__ = k.prototype;
			return m
		};
	h = (function(k) {
		b(j, k);

		function j() {
			return j.__super__.constructor.apply(this, arguments)
		}
		j.prototype.className = "profile";
		j.prototype.template = "account/profile.html";
		j.prototype.events = {
			"submit form": "save"
		};
		j.prototype.initialize = function() {
			Sierra.View.prototype.initialize.apply(this, arguments);
			return Sierra.user.on("updated", (function(l) {
				return function() {
					return l.update_avatar()
				}
			})(this))
		};
		j.prototype.ready = function() {
			return this.form = new FUI.Form("form", this.el)
		};
		j.prototype.update_avatar = function() {
			return $(".avatar img", this.el).replaceWith('<img src="' + (this.model.user.gravatar_url(140)) + '">')
		};
		j.prototype.save = function(l) {
			l.preventDefault();
			this.form.flash("");
			if (!this.form.validate()) {
				return
			}
			this.form.toggle_loading();
			return this.model.user.save(this.form.fields(), {
				success: (function(m) {
					return function(n, o) {
						return m.form.flash("Setting saved!", "success")
					}
				})(this),
				error: (function(m) {
					return function(n, p) {
						var o;
						if ((p != null) && p.responseText) {
							o = JSON.parse(p.responseText).detail
						} else {
							o = "An error occurred, please try again."
						}
						return m.form.flash(o)
					}
				})(this),
				complete: (function(m) {
					return function() {
						return m.form.toggle_loading()
					}
				})(this)
			})
		};
		return j
	})(Sierra.View);
	e = (function(k) {
		b(j, k);

		function j() {
			return j.__super__.constructor.apply(this, arguments)
		}
		j.prototype.className = "password";
		j.prototype.template = "account/password.html";
		j.prototype.events = {
			"submit form": "change_password"
		};
		j.prototype.ready = function() {
			return this.form = new FUI.Form("form", this.el)
		};
		j.prototype.change_password = function(l) {
			l.preventDefault();
			this.form.flash("");
			if (!this.form.validate()) {
				return
			}
			this.form.toggle_loading();
			return Fastly.password(this.form.field("old_password"), this.form.field("new_password"), {
				success: (function(m) {
					return function() {
						m.form.reset();
						return m.form.flash("Password succesfully changed", "success")
					}
				})(this),
				error: (function(m) {
					return function(n) {
						return m.form.flash(n.msg)
					}
				})(this),
				complete: (function(m) {
					return function() {
						return m.form.toggle_loading()
					}
				})(this)
			})
		};
		return j
	})(Sierra.View);
	c = (function(j) {
		b(k, j);

		function k() {
			return k.__super__.constructor.apply(this, arguments)
		}
		k.prototype.className = "company";
		k.prototype.template = "account/company.html";
		k.prototype.partials = {
			cancel_account_modal: "account/cancel_account_modal.html"
		};
		k.prototype.events = {
			"submit form.settings-form": "save",
			"click .cancel-account": "show_cancel_account_modal",
			"submit .cancel-account-modal form": "confirm_cancel_account",
			"change .billing_contact": "billing_contact"
		};
		k.prototype.ready = function() {
			this.form = new FUI.Form("form.settings-form", this.el);
			this.plan_warning = this.form.find(".plan_warning");
			return this.cancel_account = new FUI.ModalForm(".cancel-account-modal", this.el)
		};
		k.prototype.save = function(l) {
			l.preventDefault();
			this.form.flash("");
			if (!this.form.validate()) {
				return
			}
			this.form.toggle_loading();
			return new Sierra.Models.Customer({
				id: this.model.customer.get("id")
			}).save(this.form.fields(), {
				success: (function(m) {
					return function(n) {
						m.form.flash("Company settings saved!", "success");
						return m.model.customer.set(n)
					}
				})(this),
				error: (function(m) {
					return function(n, o) {
						return m.form.error(o)
					}
				})(this),
				complete: (function(m) {
					return function() {
						m.plan_warning.hide();
						return m.form.toggle_loading()
					}
				})(this)
			})
		};
		k.prototype.billing_contact = function() {
			return this.form.flash('Note: make sure your new billing contact\'s role is set to "billing"', "info")
		};
		k.prototype.show_cancel_account_modal = function(l) {
			l.preventDefault();
			this.cancel_account.reset();
			return this.cancel_account.show()
		};
		k.prototype.confirm_cancel_account = function(l) {
			l.preventDefault();
			this.form.flash("");
			if (!this.cancel_account.validate()) {
				return
			}
			this.cancel_account.toggle_loading("Cancelling Account...");
			return Sierra.customer.cancel_account(this.cancel_account.field("password"), {
				success: (function(m) {
					return function() {
						return window.location = "/logout"
					}
				})(this),
				error: (function(m) {
					return function(n) {
						return m.cancel_account.error(n)
					}
				})(this),
				complete: (function(m) {
					return function() {
						return m.cancel_account.toggle_loading()
					}
				})(this)
			})
		};
		return k
	})(Sierra.View);
	a = (function(k) {
		b(j, k);

		function j() {
			return j.__super__.constructor.apply(this, arguments)
		}
		j.prototype.className = "api";
		j.prototype.template = "account/api.html";
		j.prototype.partials = {
			confirm_generate_key_modal: "account/generate_api_key_modal.html"
		};
		j.prototype.events = {
			"click .generate-new-key": "show_confirm_modal",
			"submit .generate-api-key-modal form": "generate_api_key"
		};
		j.prototype.ready = function() {
			return this.confirm = new FUI.ModalForm(".generate-api-key-modal", this.el)
		};
		j.prototype.show_confirm_modal = function(l) {
			return this.confirm.show()
		};
		j.prototype.generate_api_key = function(l) {
			l.preventDefault();
			this.confirm.toggle_loading("Regenerating API Key...");
			return Sierra.customer.reset_api_key(this.confirm.field("password"), {
				success: (function(m) {
					return function(n) {
						$("#api_key").text(n.raw_api_key);
						return m.confirm.hide()
					}
				})(this),
				error: (function(m) {
					return function(n) {
						return m.confirm.flash(n.msg, "error")
					}
				})(this),
				complete: (function(m) {
					return function() {
						return m.confirm.toggle_loading()
					}
				})(this)
			})
		};
		return j
	})(Sierra.View);
	i = (function(k) {
		b(j, k);

		function j() {
			return j.__super__.constructor.apply(this, arguments)
		}
		j.prototype.id = "content";
		j.prototype.title = "Account Settings";
		j.prototype.template = "account/page.html";
		j.prototype.initialize = function() {
			var l;
			Sierra.PageView.prototype.initialize.apply(this, arguments);
			l = {
				model: this.model
			};
			this.add_child("#account .profile", new h(l));
			this.add_child("#account .password", new e(l));
			this.add_child("#account .api", new a(l));
			if (Sierra.can_do("superuser")) {
				this.add_child("#account .company", new c(l));
				this.add_child("#account .users", new Sierra.Views.Account.Users(l));
				return this.add_child("#account .invitations", new Sierra.Views.Account.Invitations({
					model: this.model.invitations
				}))
			}
		};
		return j
	})(Sierra.PageView);
	d = (function(j) {
		b(k, j);

		function k() {
			return k.__super__.constructor.apply(this, arguments)
		}
		k.prototype.id = "content";
		k.prototype.title = "Change Password";
		k.prototype.template = "account/password_page.html";
		k.prototype.events = {
			"submit form": "change_password"
		};
		k.prototype.ready = function() {
			if (this.form) {
				delete this.form
			}
			return this.form = new FUI.Form("form", this.el)
		};
		k.prototype.change_password = function(m) {
			var l;
			m.preventDefault();
			l = this.form.fields();
			this.form.flash("");
			if (!this.form.validate()) {
				return
			}
			if (l.new_password !== l.confirm_password) {
				return this.form.flash("Password does not match confirmation")
			}
			this.form.toggle_loading("Changing password...");
			return Fastly.password(l.old_password, l.new_password, {
				success: (function(n) {
					return function() {
						Sierra.user.set({
							require_new_password: false
						});
						return Sierra.navigate("analytics")
					}
				})(this),
				error: (function(n) {
					return function(o) {
						return n.form.flash(o.msg)
					}
				})(this),
				complete: (function(n) {
					return function() {
						return n.form.toggle_loading()
					}
				})(this)
			})
		};
		return k
	})(Sierra.PageView);
	if ((g = Sierra.Views).Account == null) {
		g.Account = {}
	}
	Sierra.Views.Account.Page = i;
	Sierra.Views.Account.PasswordPage = d
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.View404 = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.id = "content";
		c.prototype.title = "Not found";
		c.prototype.template = "404.html";
		return c
	})(Sierra.PageView)
}).call(this);
(function() {
	var b, e, f, a, c = {}.hasOwnProperty,
		d = function(j, h) {
			for (var g in h) {
				if (c.call(h, g)) {
					j[g] = h[g]
				}
			}
			function i() {
				this.constructor = j
			}
			i.prototype = h.prototype;
			j.prototype = new i();
			j.__super__ = h.prototype;
			return j
		};
	b = (function(h) {
		d(g, h);

		function g() {
			return g.__super__.constructor.apply(this, arguments)
		}
		g.prototype.className = "toolbar category-toolbar";
		g.prototype.template = "admin/stats/toolbar.html";
		g.prototype.events = {
			"change [name=service_id]": "change_service",
			"change [name=region]": "change_region",
			"change [name=view]": "change_view",
			"click .screenshot": "screenshot"
		};
		g.prototype.svg_width = 938;
		g.prototype.svg_height = 300;
		g.prototype.initialize = function() {
			this.canvas = $('<canvas width="' + this.svg_width + '" height="' + this.svg_height + '" style="position: absolute; left: 0; top: 0;" id="screenshot_canvas"></canvas>')[0];
			return Sierra.View.prototype.initialize.apply(this, arguments)
		};
		g.prototype.ready = function() {
			this.services_search = new FUI.SearchBox(".service-search", this.el, {
				model: this.model.services,
				label: "name",
				search_keys: ["name", "customer_name", "id"],
				template: "fui/search_box/services.html"
			});
			$("[name=region]", this.el).val(this.model.region || "all");
			return $("[name=view]", this.el).val(this.model.view || "stack")
		};
		g.prototype.change_service = function(i) {
			i.preventDefault();
			return this.model.set_service(i.target.value)
		};
		g.prototype.change_region = function(i) {
			return this.model.set_region(i.target.value)
		};
		g.prototype.change_view = function(i) {
			return this.model.set_view(i.target.value)
		};
		g.prototype.screenshot = function(i) {
			canvg(this.canvas, '<svg width="' + this.svg_width + '" height="' + this.svg_height + '">' + ($("svg#graph")[0].innerSVG) + "</svg>");
			return window.location = this.canvas.toDataURL("image/png").replace("image/png", "image/octet-stream")
		};
		return g
	})(Sierra.View);
	e = (function(h) {
		d(g, h);

		function g() {
			return g.__super__.constructor.apply(this, arguments)
		}
		g.prototype.className = "display";
		g.prototype.template = "admin/stats/display.html";
		g.prototype.svg_width = 938;
		g.prototype.svg_height = 300;
		g.prototype.margin_top = 30;
		g.prototype.margin_bottom = 30;
		g.prototype.margin_left = 53;
		g.prototype.margin_right = 53;
		g.prototype.events = {
			"mousemove #graph ": "mousemove",
			"mouseout #graph": "mouseout"
		};
		g.prototype.initialize = function() {
			this.width = this.svg_width - this.margin_left - this.margin_right;
			this.height = this.svg_height - this.margin_top - this.margin_bottom;
			this.last_i = -1;
			this.values = null;
			return Sierra.View.prototype.initialize.apply(this, arguments)
		};
		g.prototype.mousemove = function(p) {
			var o, k, j, q, n, s, r, l, m;
			if (this.model.active.data.length === 0) {
				return
			}
			if (!((this.svg != null) && this.model.view !== "stack")) {
				return
			}
			r = p.offsetX - this.margin_left;
			if (r < 0 || r > this.width) {
				return
			}
			n = (this.model.active.data.length * r / this.width) | 0;
			if (n === this.last_i) {
				return
			}
			this.last_i = n;
			s = this.model.active.values_at(n, this.model.fields);
			if (this.model.view === "stack") {
				for (n = l = 1, m = s.length; 1 <= m ? l < m : l > m; n = 1 <= m ? ++l : --l) {
					s[n].y += s[n - 1].y
				}
			}
			k = s[0].date;
			r = this.x(k);
			this.svg.selectAll("line.hover").remove();
			this.svg.append("line").attr("class", "hover").attr("stroke", "black").attr("stroke-width", 1).attr("x1", r).attr("x2", r).attr("y1", this.height - 5).attr("y2", this.height + 5);
			this.svg.selectAll("text.hover").remove();
			if (this.model.by === "day") {
				j = "M jS Y";
				if (r < this.width / 2 - 25) {
					q = r + 7
				} else {
					if (r > this.width / 2 + 25) {
						q = r - 70
					} else {
						q = this.width / 2 - 25
					}
				}
			} else {
				j = "M jS Y, h:i A";
				if (r < this.width / 2 - 50) {
					q = r + 7
				} else {
					if (r > this.width / 2 + 50) {
						q = r - 116
					} else {
						q = this.width / 2 - 50
					}
				}
			}
			this.svg.append("text").attr("class", "hover").attr("x", q).attr("y", this.height - 4).attr("fill", "#222").text(FUI.date(k, j, false));
			o = this.svg.selectAll("circle.hover").data(s);
			o.enter().append("circle").attr("class", "hover").attr("r", "4").attr("stroke", "#333");
			o.attr("cx", (function(i) {
				return function(t) {
					return i.x(t.date)
				}
			})(this)).attr("cy", (function(i) {
				return function(t) {
					return i.y(t.y)
				}
			})(this)).attr("fill", function(i) {
				return i.color
			});
			return o.exit().remove()
		};
		g.prototype.mouseout = function(i) {
			this.last_i = -1;
			return this.svg.selectAll(".hover").remove()
		};
		g.prototype.ready = function() {
			if (this.model.view === "stack") {
				return this.render_stack()
			} else {
				if (this.model.view === "line") {
					return this.render_line()
				}
			}
		};
		g.prototype.get_scales = function(o) {
			var m, j, n, p, k, q, i, l;
			if (o == null) {
				o = false
			}
			n = this.model.fields;
			l = this.model.active.range(n, o), k = l[0], p = l[1];
			if (n.length === 1 && n.indexOf("hit_ratio") === 0) {
				k = Math.max(0, this.model.active.min("hit_ratio") - (1 - p) / 2);
				p = 1
			}
			m = this.model.active.data;
			if (m.length > 0) {
				i = FUI.date_to_utc(new Date(m[0].start_time * 1000));
				j = FUI.date_to_utc(new Date(m[m.length - 1].start_time * 1000))
			} else {
				q = 1000 * (this.model.active.now() - (86400 * 30));
				i = FUI.date_to_utc(new Date(q));
				j = FUI.date_to_utc(new Date())
			}
			this.x = d3.time.scale().domain([i, j]).range([0, this.width]);
			this.y = d3.scale.linear().domain([k, p]).range([this.height, k]);
			return [this.x, this.y]
		};
		g.prototype.get_layers = function() {
			return this.model.active.values(this.model.fields)
		};
		g.prototype.get_svg = function(i, j) {
			return this.svg = d3.select(this.el).append("svg:svg").attr("id", "graph").attr("width", this.svg_width).attr("height", this.svg_height).append("svg:g").attr("transform", "translate(" + this.margin_left + ", " + this.margin_top + ")")
		};
		g.prototype.render_axes = function(k, i, o) {
			var n, m, j, l;
			m = d3.svg.axis().scale(i).orient("bottom");
			k.append("g").attr("class", "x-axis").attr("transform", "translate(0, " + this.height + ")").call(m);
			n = function(q, p) {
				return FUI.format_si(q, 1)
			};
			j = d3.svg.axis().scale(o).orient("left").tickFormat(n);
			k.append("g").attr("class", "y-axis").call(j);
			l = d3.svg.axis().scale(o).orient("right").tickFormat(n);
			k.append("g").attr("class", "y-axis-right").attr("transform", "translate(" + this.width + ", 0)").call(l);
			return k.selectAll(".domain").attr("stroke-width", "1").attr("stroke", "black").attr("fill", "none")
		};
		g.prototype.render_line = function() {
			var j, n, k, l, i, o, m;
			n = this.get_layers();
			m = this.get_scales(), i = m[0], o = m[1];
			k = d3.svg.line().x(function(p) {
				return i(p.date)
			}).y(function(p) {
				return o(p.y)
			});
			l = this.get_svg();
			j = l.selectAll(".field").data(n).enter().append("g").attr("class", "field");
			j.append("path").attr("class", "line").attr("d", function(p) {
				return k(p.values)
			}).attr("stroke-width", 1.5).attr("stroke", function(p) {
				return p.color
			}).attr("fill", "transparent");
			return this.render_axes(l, i, o)
		};
		g.prototype.render_stack = function() {
			var m, l, o, j, k, i, p, n;
			o = this.get_layers();
			n = this.get_scales(true), i = n[0], p = n[1];
			l = this.model.fields.length === 1 && this.model.fields.indexOf("hit_ratio") === 0;
			j = d3.layout.stack().values(function(q) {
				return q.values
			});
			m = d3.svg.area().x(function(q) {
				return i(q.date)
			}).y0((function(q) {
				return function(r) {
					if (l) {
						return q.height
					} else {
						return p(r.y0)
					}
				}
			})(this)).y1(function(q) {
				return p(q.y0 + q.y)
			});
			k = this.get_svg();
			k.selectAll("path.area").data(j(o)).enter().append("path").attr("class", "area").attr("d", function(q) {
				return m(q.values)
			}).attr("fill", function(q) {
				return q.color
			}).attr("stroke", "#555").attr("stroke-width", 1);
			return this.render_axes(k, i, p)
		};
		return g
	})(Sierra.View);
	f = (function(g) {
		d(h, g);

		function h() {
			return h.__super__.constructor.apply(this, arguments)
		}
		h.prototype.className = "fields";
		h.prototype.template = "admin/stats/fields.html";
		h.prototype.ready = function() {
			$(".color-check, .check", this.el).mouseup((function(i) {
				return function(j) {
					return i.toggle_field(j)
				}
			})(this));
			return $(".color-check", this.el).each((function(i) {
				return function(j, k) {
					if (i.model.fields.indexOf($(k).attr("data-name")) >= 0) {
						$(".check", k).css("background-color", $(k).attr("data-color"));
						return $(k).attr("data-value", "1")
					}
				}
			})(this))
		};
		h.prototype.toggle_field = function(m) {
			var i, j, k, l;
			m.stopPropagation();
			if ($(m.target).hasClass("color-check")) {
				i = $(m.target)
			} else {
				i = $(m.target).parents(".color-check")
			}
			k = i.attr("data-name");
			l = i.attr("data-value");
			j = i.attr("data-color");
			if (l === "1") {
				i.attr("data-value", "0");
				$(".check", i).css("background-color", "transparent");
				return this.model.remove_field(k)
			} else {
				i.attr("data-value", "1");
				$(".check", i).css("background-color", j);
				return this.model.add_field(k)
			}
		};
		return h
	})(Sierra.View);
	a = (function(h) {
		d(g, h);

		function g() {
			return g.__super__.constructor.apply(this, arguments)
		}
		g.prototype.className = "toolbar timeline-toolbar";
		g.prototype.template = "admin/stats/timeline_toolbar.html";
		g.prototype.events = {
			"click .update": "change_range",
			"change [name=by]": "change_by",
			"keydown [type=text]": "check_enter"
		};
		g.prototype.ready = function() {
			return $("[name=by]", this.el).val(this.model.by)
		};
		g.prototype.check_enter = function(i) {
			if (i.keyCode !== 13) {
				return
			}
			i.preventDefault();
			$(i.target).blur();
			return this.change_range()
		};
		g.prototype.change_range = function(k) {
			var i, m, l, j;
			j = [$("[name=from]", this.el).val(), $("[name=to]", this.el).val(), $("[name=by]", this.el).val()], m = j[0], l = j[1], i = j[2];
			return this.model.set_time(m, l, i)
		};
		g.prototype.change_by = function(j) {
			var i;
			i = this.model.default_range[j.target.value];
			return this.model.set_time(i.from, i.to, j.target.value)
		};
		return g
	})(Sierra.View);
	Sierra.Views.AdminStats = {};
	Sierra.Views.AdminStats.Page = (function(h) {
		d(g, h);

		function g() {
			return g.__super__.constructor.apply(this, arguments)
		}
		g.prototype.id = "content";
		g.prototype.title = "Historical Stats";
		g.prototype.template = "admin/stats/page.html";
		g.prototype.initialize = function() {
			var i;
			Sierra.PageView.prototype.initialize.apply(this, arguments);
			i = {
				model: this.model
			};
			this.add_child(".category-toolbar", new b(i));
			this.add_child(".display", new e(i));
			this.add_child(".fields", new f(i));
			return this.add_child(".timeline-toolbar", new a(i))
		};
		return g
	})(Sierra.PageView)
}).call(this);
(function() {
	var c, h, l, j, n, b, g, k, m, a, f, e, i = {}.hasOwnProperty,
		d = function(r, p) {
			for (var o in p) {
				if (i.call(p, o)) {
					r[o] = p[o]
				}
			}
			function q() {
				this.constructor = r
			}
			q.prototype = p.prototype;
			r.prototype = new q();
			r.__super__ = p.prototype;
			return r
		};
	m = (function(p) {
		d(o, p);

		function o() {
			return o.__super__.constructor.apply(this, arguments)
		}
		o.prototype.template = "billing/print.html";
		o.prototype.render = function() {
			this.popup_html = FUI.render(this.template, this.data, this.partials);
			return this.trigger("render")
		};
		o.prototype.show = function(q, r) {
			this.data = q.serialize();
			this.data.invoice = q.invoices.getByCid(r).serialize();
			this.render();
			this.window = window.open("", "", "width=800,height=1000");
			return this.window.document.write(this.popup_html)
		};
		return o
	})(Sierra.View);
	k = new m();
	n = (function(p) {
		d(o, p);

		function o() {
			return o.__super__.constructor.apply(this, arguments)
		}
		o.prototype.id = "pay_modal";
		o.prototype.template = "billing/pay.html";
		o.prototype.partials = {
			card_fields: "billing/card_fields.html"
		};
		o.prototype.respond_to = {
			"credit_card:changed": "render_form",
			"credit_card:destroyed": "render_form"
		};
		o.prototype.events = {
			"click .change": "change",
			"submit form": "pay_bill"
		};
		o.prototype.initialize = function() {
			return Sierra.View.prototype.initialize.apply(this, arguments)
		};
		o.prototype.render_form = function() {
			var q;
			q = FUI.render("billing/card_fields.html", this.model.serialize());
			return $(".modal-body fieldset").html(q)
		};
		o.prototype.change = function(q) {
			q.preventDefault();
			if ($(q.target).data("cancel") == null) {
				return this.show_fields()
			} else {
				return this.hide_fields()
			}
		};
		o.prototype.show_fields = function() {
			var q;
			(q = $(".change", this.el)).text("Cancel Change");
			q.data("cancel", true);
			$(".fields, .form-actions", this.el).show();
			return $("input[type=submit]", this.el).attr("value", "Save & Pay")
		};
		o.prototype.hide_fields = function() {
			var q;
			(q = $(".change", this.el)).text("Change");
			q.removeData("cancel");
			$(".fields, .form-actions", this.el).hide();
			return $("input[type=submit]", this.el).attr("value", "Submit Payment")
		};
		o.prototype.pay_bill = function(q) {
			q.preventDefault();
			if ($("input[name=number]").is(":visible")) {
				return this.update_card_and_pay()
			} else {
				return this.submit_payment()
			}
		};
		o.prototype.update_card_and_pay = function() {
			var q;
			(q = e()).toggle_loading("Saving credit card...");
			return this.model.credit_card.save(q.fields(), {
				success: (function(r) {
					return function() {
						return r.submit_payment()
					}
				})(this),
				error: (function(r) {
					return function(s, t) {
						return q.error(t)
					}
				})(this),
				complete: (function(r) {
					return function() {
						return q.toggle_loading()
					}
				})(this)
			})
		};
		o.prototype.submit_payment = function() {
			var q;
			(q = e()).toggle_loading("Submitting payment...");
			return this.model.invoices.getByCid(q.cid()).pay({
				success: (function(r) {
					return function() {
						q.hide();
						return r.model.trigger("invoice:paid")
					}
				})(this),
				error: (function(r) {
					return function(s) {
						return q.error(s)
					}
				})(this),
				complete: (function(r) {
					return function() {
						return q.toggle_loading()
					}
				})(this)
			})
		};
		return o
	})(Sierra.View);
	e = function() {
		return new FUI.ModalForm("#pay_modal .modal", "#billing")
	};
	h = (function(o) {
		d(p, o);

		function p() {
			return p.__super__.constructor.apply(this, arguments)
		}
		p.prototype.id = "mark_paid_modal";
		p.prototype.template = "billing/mark_paid.html";
		p.prototype.events = {
			"submit form": "mark_paid"
		};
		p.prototype.mark_paid = function(r) {
			var q;
			r.preventDefault();
			(q = f()).toggle_loading("Marking bill as paid...");
			this.model.invoices.getByCid(q.cid()).mark_as_paid(q.fields(), {
				success: (function(s) {
					return function() {
						q.hide();
						return s.model.trigger("invoice:paid")
					}
				})(this),
				error: (function(s) {
					return function(t) {
						return q.error(t)
					}
				})(this),
				complete: (function(s) {
					return function() {
						return q.toggle_loading()
					}
				})(this)
			});
			return console.log("Mark Paid", q.fields())
		};
		return p
	})(Sierra.View);
	f = function() {
		return new FUI.ModalForm("#mark_paid_modal .modal", "#billing")
	};
	Sierra.Views.Billing = (function(p) {
		d(o, p);

		function o() {
			return o.__super__.constructor.apply(this, arguments)
		}
		o.prototype.id = "content";
		o.prototype.title = "Billing";
		o.prototype.template = "billing/page.html";
		o.prototype.events = {
			"click .sidebar li a": "navigate",
			"change [name=customer_id]": "change_customer"
		};
		o.prototype.initialize = function() {
			var q;
			Sierra.PageView.prototype.initialize.apply(this, arguments);
			q = {
				model: this.model
			};
			this.add_child(".header .notification", new l(q));
			this.add_child("#overview", new j(q));
			this.add_child("#invoice", new c(q));
			this.add_child("#settings", new a(q));
			this.add_child("#pay_modal", new n(q));
			this.add_child("#mark_paid_modal", new h(q));
			this.add_child("#pricing_extras", new g(q));
			return this.add_child("#plan_breakdown", new b(q))
		};
		o.prototype.set_view = function(q) {
			if (q === "overview") {
				$("#invoice").hide();
				return $("#overview").show()
			} else {
				if (q === "invoice") {
					$("#overview").hide();
					return $("#invoice").show()
				}
			}
		};
		o.prototype.ready = function() {
			this.fat = new FUI.FatNav(".fat-nav", this.el);
			return this.customer_search = new FUI.SearchBox(".customer-search", this.el, {
				template: "fui/search_box/customers.html",
				model: this.model.customers,
				search_keys: ["name", "id"]
			})
		};
		o.prototype.navigate = function(q) {
			return this.fat.navigate(q)
		};
		o.prototype.change_customer = function(q) {
			q.preventDefault();
			return this.model.set_customer(q.target.value)
		};
		return o
	})(Sierra.PageView);
	l = (function(o) {
		d(p, o);

		function p() {
			return p.__super__.constructor.apply(this, arguments)
		}
		p.prototype.className = "notification";
		p.prototype.template = "billing/notification.html";
		p.prototype.respond_to = {
			"invoice:change": "render"
		};
		return p
	})(Sierra.View);
	j = (function(o) {
		d(p, o);

		function p() {
			return p.__super__.constructor.apply(this, arguments)
		}
		p.prototype.id = "overview";
		p.prototype.className = "nav-section";
		p.prototype.template = "billing/overview.html";
		p.prototype.partials = {
			summary: "billing/summary.html"
		};
		p.prototype.events = {
			"click .print": "print",
			"click .pay": "pay",
			"click .mark-paid": "mark_paid"
		};
		p.prototype.respond_to = {
			"invoice:change": "render"
		};
		p.prototype.ready = function() {
			var s, t, r, q;
			r = $("#invoice_chart", this.el)[0];
			t = this.model.invoices.data_table();
			q = {
				width: "598",
				height: "150",
				backgroundColor: "#f6f6f6",
				legend: {
					position: "none"
				},
				pointSize: 7,
				chartArea: {
					width: "85%",
					height: "80%",
					top: "5%"
				}
			};
			s = new google.visualization.AreaChart(r);
			return s.draw(t, q)
		};
		p.prototype.print = function(q) {
			q.preventDefault();
			return k.show(this.model, $(q.target).cid())
		};
		p.prototype.pay = function(r) {
			var q;
			r.preventDefault();
			(q = e()).cid($(r.target).cid());
			return q.show()
		};
		p.prototype.mark_paid = function(r) {
			var q;
			r.preventDefault();
			if (!Sierra.can_do("salesadmin")) {
				return
			}(q = f()).cid($(r.target).cid());
			return q.show()
		};
		return p
	})(Sierra.View);
	c = (function(p) {
		d(o, p);

		function o() {
			return o.__super__.constructor.apply(this, arguments)
		}
		o.prototype.id = "invoice";
		o.prototype.className = "nav-section";
		o.prototype.template = "billing/invoice.html";
		o.prototype.partials = {
			summary: "billing/summary.html",
			regions: "billing/regions.html"
		};
		o.prototype.events = {
			"click .pay": "pay",
			"click .print": "print"
		};
		o.prototype.respond_to = {
			"invoice:change": "render"
		};
		o.prototype.pay = function(r) {
			var q;
			r.preventDefault();
			(q = e()).cid($(r.target).cid());
			return q.show()
		};
		o.prototype.print = function(q) {
			q.preventDefault();
			return k.show(this.model, $(q.target).cid())
		};
		return o
	})(Sierra.View);
	a = (function(p) {
		d(o, p);

		function o() {
			return o.__super__.constructor.apply(this, arguments)
		}
		o.prototype.id = "settings";
		o.prototype.className = "nav-section";
		o.prototype.template = "billing/settings.html";
		o.prototype.partials = {
			card_fields: "billing/card_fields.html"
		};
		o.prototype.events = {
			"submit form.credit-card-form": "submit_credit_card",
			"submit form.settings-form": "submit_pricing_plan",
			"click .remove": "remove_credit_card",
			"click .change": "show_form",
			'change select[name="pricing_plan"]': "check_coupon_form"
		};
		o.prototype.respond_to = {
			"credit_card:changed": "render",
			"credit_card:destroyed": "render"
		};
		o.prototype.submit_credit_card = function(r) {
			var q;
			r.preventDefault();
			q = new FUI.Form(".credit-card-form", this.el);
			q.flash();
			q.toggle_loading();
			return this.model.credit_card.save(q.fields(), {
				error: (function(s) {
					return function(t, u) {
						q.error(u);
						return q.toggle_loading()
					}
				})(this)
			})
		};
		o.prototype.remove_credit_card = function(r) {
			var q;
			r.preventDefault();
			q = new FUI.Form(".credit-card-form", this.el);
			q.flash();
			q.toggle_loading();
			return this.model.credit_card.destroy({
				error: (function(s) {
					return function(t, u) {
						q.error(u);
						return q.toggle_loading()
					}
				})(this)
			})
		};
		o.prototype.show_form = function(q) {
			q.preventDefault();
			$(".fields, .form-actions", this.el).show();
			return $(q.target).parents(".control-group").hide()
		};
		o.prototype.submit_pricing_plan = function(r) {
			var q;
			r.preventDefault();
			q = new FUI.Form(".settings-form", this.el);
			q.toggle_loading("Saving Pricing Plan...");
			return this.model.customer.save(q.fields(), {
				success: (function(s) {
					return function() {
						return q.flash("Plan saved!", "success")
					}
				})(this),
				error: (function(s) {
					return function(t, u) {
						return q.error(u)
					}
				})(this),
				complete: (function(s) {
					return function() {
						q.toggle_loading();
						$('input[name="coupon"]').val("");
						return s.check_coupon_form()
					}
				})(this)
			})
		};
		o.prototype.check_coupon_form = function(u) {
			var r, s, q, t;
			q = new FUI.Form(".settings-form", this.el);
			t = this.model.check_coupon(q.field("pricing_plan")), r = t[0], s = t[1];
			if (r) {
				$('input[name="coupon"]').prop("disabled", false)
			} else {
				$('input[name="coupon"]').prop("disabled", true)
			}
			return $("#warning_note").text(s)
		};
		return o
	})(Sierra.View);
	g = (function(p) {
		d(o, p);

		function o() {
			return o.__super__.constructor.apply(this, arguments)
		}
		o.prototype.className = "nav-section";
		o.prototype.id = "pricing_extras";
		o.prototype.model_name = "PricingExtra";
		o.prototype.collection_name = "pricing_extras";
		o.prototype.template = "billing/pricing_extras/list.html";
		o.prototype.partials = {
			modal: "billing/pricing_extras/modal.html",
			entry: "billing/pricing_extras/entry.html"
		};
		o.prototype.initialize = function(q) {
			return Sierra.ResourceView.prototype.initialize.call(this, {
				model: q.model.pricing_extras
			})
		};
		o.prototype.ready = function() {
			this.resource_options = {
				customer_id: this.collection.customer_id
			};
			return Sierra.ResourceView.prototype.ready.apply(this, arguments)
		};
		return o
	})(Sierra.ResourceView);
	b = (function(p) {
		d(o, p);

		function o() {
			return o.__super__.constructor.apply(this, arguments)
		}
		o.prototype.id = "plan_breakdown";
		o.prototype.className = "nav-section";
		o.prototype.template = "billing/plan_breakdown.html";
		return o
	})(Sierra.View)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Views.Confirm = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.className = "confirm";
		c.prototype.template = "common/confirm_modal.html";
		c.prototype.events = {
			"submit form": "confirmed"
		};
		c.prototype.defaultOptions = {
			title: "Confirm",
			body: "Are you sure?",
			button: "Confirm",
			escaped: false
		};
		c.prototype.ready = function() {
			this.form = new FUI.ModalForm(".modal", this.el);
			return Sierra.View.prototype.ready.apply(this, arguments)
		};
		c.prototype.flash = function(f, e) {
			this.msg = f;
			this.type = e;
			return this.form.flash(this.msg, this.type)
		};
		c.prototype.confirm = function(e) {
			var f;
			this.options = e != null ? e : {};
			_.defaults(this.options, this.defaultOptions);
			if (this.options.escaped) {
				f = "html"
			} else {
				f = "text"
			}
			$(".modal-header h3", this.el)[f](this.options.title);
			$(".modal-body", this.el)[f](this.options.body);
			$(".modal-footer input[type=submit]", this.el).val(this.options.button);
			this.form.reset();
			if (this.form.is_loading()) {
				this.form.toggle_loading()
			}
			return this.form.show()
		};
		c.prototype.confirmed = function(f) {
			f.preventDefault();
			if (this.options.callback != null) {
				return this.options.callback(this.model, this.form)
			}
		};
		c.prototype.hide = function() {
			return this.form.hide()
		};
		return c
	})(Sierra.View)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Invitation = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.url = function() {
			if (this.get("id") == null) {
				return "/invitation"
			}
			return "/invitation/" + (this.get("id"))
		};
		c.prototype.cancel = function(e) {
			return this.request("PUT", "/cancel", e)
		};
		c.accept = function(f, g, e) {
			return Fastly.put("/invitation/accept/" + f, g, e)
		};
		return c
	})(Sierra.Model);
	Sierra.Collections.Invitations = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.model = Sierra.Models.Invitation;
		c.prototype.url = function() {
			return "/invitation"
		};
		return c
	})(Sierra.Collection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Event = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.attrs = {
			date: "date"
		};
		c.prototype.date = function() {
			return FUI.date(this.get("timestamp"), "D M j G:i:s")
		};
		c.prototype.fetch = function() {};
		c.prototype.save = function() {};
		c.prototype.destroy = function() {};
		return c
	})(Sierra.Model);
	Sierra.Collections.EventLog = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.limit = 5;
		c.prototype.model = Sierra.Models.Event;
		c.prototype.url = function() {
			return "/event_log/" + this.service_id + "?limit=" + this.limit
		};
		c.prototype.comparator = function(f, e) {
			if (f.get("timestamp") > e.get("timestamp")) {
				return -1
			} else {
				return 1
			}
		};
		c.prototype.fetch = function(e, f) {
			this.service_id = e;
			return Sierra.Collection.prototype.fetch.call(this, f)
		};
		return c
	})(Sierra.Collection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.MainMenu = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.initialize = function() {
			Sierra.Model.prototype.initialize.apply(this, arguments);
			this.attributes = {
				analytics: {
					href: "#analytics"
				},
				stats: {
					href: "#stats",
					include: function() {
						return Sierra.customer.has_option("has_historical_stats")
					}
				},
				configure: {
					href: "#configure",
					include: function() {
						return Sierra.customer.has_option("has_config_panel")
					},
					role: "engineer"
				},
				streaming: {
					href: "#streaming",
					include: function() {
						return Sierra.customer.has_option("has_streaming")
					},
					role: "engineer"
				},
				account: {
					href: "#account"
				},
				billing: {
					href: "#billing",
					role: "billing"
				},
				admin: {
					href: "#admin",
					role: "internal"
				}
			};
			return $(window).on("hashchange", (function(e) {
				return function() {
					var f;
					f = e.get_hash_label();
					return e.trigger("hash:changed", f)
				}
			})(this))
		};
		c.prototype.get_hash_label = function() {
			var f, g, e, h;
			f = null;
			h = this.attributes;
			for (e in h) {
				g = h[e];
				if (window.location.hash.match("#" + e)) {
					f = e;
					break
				}
			}
			return f
		};
		c.prototype.serialize = function() {
			var f, e, h, g;
			if (!Sierra.user) {
				return
			}
			h = [];
			g = this.attributes;
			for (e in g) {
				f = g[e];
				if ((f.include != null) && !f.include()) {
					continue
				}
				if ((f.role != null) && !Sierra.can_do(f.role)) {
					continue
				}
				f = {
					label: e,
					href: f.href
				};
				if (window.location.hash.match("#" + e)) {
					f.selected = "true"
				}
				h.push(f)
			}
			return h
		};
		c.prototype.fetch = function() {};
		return c
	})(Sierra.Model)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.CacheSettings = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "cache_settings";
		return c
	})(Sierra.ResourceModel);
	Sierra.Collections.CacheSettings = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "cache_settings";
		c.prototype.model = Sierra.Models.CacheSettings;
		return c
	})(Sierra.ResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.OpenStack = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.object = "openstack";
		return d
	})(Sierra.LoggingResourceModel);
	Sierra.Collections.OpenStacks = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "openstack";
		c.prototype.model = Sierra.Models.OpenStack;
		c.prototype.sort_key = "name";
		return c
	})(Sierra.LoggingResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.RequestSettings = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "request_settings";
		c.prototype.attrs = {
			force_miss_label: "force_miss",
			force_ssl_label: "force_ssl",
			bypass_busy_wait_label: "bypass_busy_wait",
			timer_support_label: "timer_support",
			xff_label: "xff_label"
		};
		c.prototype.xff_label_map = {
			clear: "Clear",
			leave: "Leave",
			append: "Append",
			append_all: "Append All",
			overwrite: "Overwrite"
		};
		c.prototype.boolean_label = function(e) {
			if (this.get(e) == null) {
				return "N/A"
			}
			if (this.get(e) | 0 === 1) {
				return "Yes"
			} else {
				return "No"
			}
		};
		c.prototype.force_miss = function() {
			return this.boolean_label("force_miss")
		};
		c.prototype.force_ssl = function() {
			return this.boolean_label("force_ssl")
		};
		c.prototype.bypass_busy_wait = function() {
			return this.boolean_label("bypass_busy_wait")
		};
		c.prototype.timer_support = function() {
			return this.boolean_label("timer_support")
		};
		c.prototype.xff_label = function() {
			return this.xff_label_map[this.get("xff")]
		};
		return c
	})(Sierra.ResourceModel);
	Sierra.Collections.RequestSettings = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "request_settings";
		c.prototype.model = Sierra.Models.RequestSettings;
		return c
	})(Sierra.ResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Sumologic = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "sumologic";
		return c
	})(Sierra.LoggingResourceModel);
	Sierra.Collections.Sumologics = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.object = "sumologic";
		d.prototype.model = Sierra.Models.Sumologic;
		d.prototype.sort_key = "name";
		return d
	})(Sierra.LoggingResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.LogShuttle = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "logshuttle";
		return c
	})(Sierra.LoggingResourceModel);
	Sierra.Collections.LogShuttles = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "logshuttle";
		c.prototype.model = Sierra.Models.LogShuttle;
		c.prototype.sort_key = "name";
		return c
	})(Sierra.LoggingResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Header = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.object = "header";
		return d
	})(Sierra.ResourceModel);
	Sierra.Collections.Headers = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.object = "header";
		d.prototype.model = Sierra.Models.Header;
		return d
	})(Sierra.ResourceCollection)
}).call(this);
(function() {
	var a, b = {}.hasOwnProperty,
		c = function(g, e) {
			for (var d in e) {
				if (b.call(e, d)) {
					g[d] = e[d]
				}
			}
			function f() {
				this.constructor = g
			}
			f.prototype = e.prototype;
			g.prototype = new f();
			g.__super__ = e.prototype;
			return g
		};
	a = /^\*\.|^\.\*\./;
	Sierra.Models.Domain = (function(e) {
		c(d, e);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.object = "domain";
		d.prototype.attrs = {
			preview: "preview"
		};
		d.prototype.preview = function() {
			var f;
			if (this.get("name").match(a)) {
				return
			}
			f = "http";
			if (this.get("name").match(/\.ssl\.fastly\.net$/)) {
				f += "s"
			}
			f += "://" + (this.get("name"));
			if (!this.get("name").match(/\.ssl\.fastly\.net$/)) {
				f += ".global.prod.fastly.net"
			}
			return f
		};
		return d
	})(Sierra.ResourceModel);
	Sierra.Collections.Domains = (function(d) {
		c(e, d);

		function e() {
			return e.__super__.constructor.apply(this, arguments)
		}
		e.prototype.object = "domain";
		e.prototype.model = Sierra.Models.Domain;
		e.prototype.sort_key = "name";
		e.prototype.no_wildcards = function() {
			var f;
			f = this.filter(function(g) {
				return g.get("name").indexOf("*") === -1
			});
			return new Sierra.Collections.Domains(f)
		};
		return e
	})(Sierra.ResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Papertrail = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "papertrail";
		return c
	})(Sierra.LoggingResourceModel);
	Sierra.Collections.Papertrails = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "papertrail";
		c.prototype.model = Sierra.Models.Papertrail;
		c.prototype.sort_key = "name";
		return c
	})(Sierra.LoggingResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Gzip = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "gzip";
		return c
	})(Sierra.ResourceModel);
	Sierra.Collections.Gzips = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "gzip";
		c.prototype.model = Sierra.Models.Gzip;
		return c
	})(Sierra.ResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Director = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "director";
		c.prototype.attrs = {
			type_name: "type_name"
		};
		c.prototype.type_name = function() {
			if (this.get("type") === 1) {
				return "Random"
			} else {
				return "Round-robin"
			}
		};
		return c
	})(Sierra.ResourceModel);
	Sierra.Collections.Directors = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.object = "director";
		d.prototype.model = Sierra.Models.Director;
		return d
	})(Sierra.ResourceCollection)
}).call(this);
(function() {
	var b = {}.hasOwnProperty,
		c = function(g, e) {
			for (var d in e) {
				if (b.call(e, d)) {
					g[d] = e[d]
				}
			}
			function f() {
				this.constructor = g
			}
			f.prototype = e.prototype;
			g.prototype = new f();
			g.__super__ = e.prototype;
			return g
		},
		a = function(d, e) {
			return function() {
				return d.apply(e, arguments)
			}
		};
	Sierra.Models.Vcl = (function(d) {
		c(e, d);

		function e() {
			return e.__super__.constructor.apply(this, arguments)
		}
		e.prototype.object = "vcl";
		e.prototype.attrs = {
			type: "type",
			is_main: "is_main",
			vcl_href: "vcl_href",
			download_href: "download_href"
		};
		e.prototype.is_main = function() {
			return this.get("main")
		};
		e.prototype.type = function() {
			if (this.is_main()) {
				return "Main"
			} else {
				return "Include"
			}
		};
		e.prototype.download_href = function() {
			return "/service/" + (this.get("service_id")) + "/version/" + (this.get("version")) + "/vcl/" + (this.get("name")) + "/download"
		};
		e.prototype.vcl_href = function() {
			return ["/service", this.get("service_id"), "version", this.get("version"), "vcl"].join("/")
		};
		e.prototype.content = function(f) {
			return this.request("GET", "/content", f)
		};
		return e
	})(Sierra.ResourceModel);
	Sierra.Models.GeneratedVcl = (function(e) {
		c(d, e);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.object = "generated_vcl";
		d.prototype.attrs = {
			download_href: "download_href"
		};
		d.prototype.content = function(f) {
			return this.request("GET", "/content", f)
		};
		return d
	})(Sierra.ResourceModel);
	Sierra.Collections.Vcls = (function(d) {
		c(e, d);

		function e() {
			this.comparator = a(this.comparator, this);
			return e.__super__.constructor.apply(this, arguments)
		}
		e.prototype.object = "vcl";
		e.prototype.model = Sierra.Models.Vcl;
		e.prototype.main = null;
		e.prototype.comparator = function(h, g) {
			var f, j, i;
			if (h.get("main")) {
				return -1
			}
			if (g.get("main")) {
				return 1
			}
			i = [h.get("name").toLowerCase(), g.get("name").toLowerCase()], f = i[0], j = i[1];
			if (f < j) {
				return -1
			} else {
				return 1
			}
		};
		e.prototype.get_main = function() {
			var f;
			f = this.find(function(g) {
				return g.get("main")
			});
			return f
		};
		e.prototype._prepareModel = function() {
			var f;
			f = Sierra.ResourceCollection.prototype._prepareModel.apply(this, arguments);
			if (f.get("main")) {
				this.main = f
			}
			return f
		};
		return e
	})(Sierra.ResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.SysLog = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "syslog";
		c.prototype.save = function(h, g) {
			var f, j, e, i;
			if (this.is_new) {
				i = ["tls_hostname", "tls_ca_cert"];
				for (j = 0, e = i.length; j < e; j++) {
					f = i[j];
					if (h[f] === "") {
						delete h[f]
					}
				}
			}
			return c.__super__.save.call(this, h, g)
		};
		return c
	})(Sierra.LoggingResourceModel);
	Sierra.Collections.SysLogs = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "syslog";
		c.prototype.model = Sierra.Models.SysLog;
		c.prototype.sort_key = "name";
		return c
	})(Sierra.LoggingResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.FTP = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "ftp";
		return c
	})(Sierra.LoggingResourceModel);
	Sierra.Collections.FTPs = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "ftp";
		c.prototype.model = Sierra.Models.FTP;
		c.prototype.sort_key = "name";
		return c
	})(Sierra.LoggingResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.S3 = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "s3";
		c.prototype.attrs = {
			prettyRedundancy: "prettyRedundancy"
		};
		c.prototype.prettyRedundancy = function() {
			return {
				standard: "Standard",
				reduced_redundancy: "Reduced"
			}[this.get("redundancy")]
		};
		return c
	})(Sierra.LoggingResourceModel);
	Sierra.Collections.S3s = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "s3";
		c.prototype.model = Sierra.Models.S3;
		c.prototype.sort_key = "name";
		return c
	})(Sierra.LoggingResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Partner = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.url = function() {
			if (this.get("id") != null) {
				return "/partner/" + (this.get("id"))
			} else {
				return "/partner"
			}
		};
		return c
	})(Sierra.ResourceModel);
	Sierra.Collections.Partners = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.url = function() {
			return "/partner"
		};
		d.prototype.model = Sierra.Models.Partner;
		d.prototype.sort_key = "name";
		return d
	})(Sierra.ResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Condition = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.object = "condition";
		return d
	})(Sierra.ResourceModel);
	Sierra.Collections.Conditions = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "condition";
		c.prototype.model = Sierra.Models.Condition;
		c.prototype.size = function(e) {
			if (e == null) {
				return Sierra.ResourceCollection.prototype.size.apply(this)
			}
			return this.filter(function(f) {
				return f.get("type") === e
			}).length
		};
		c.prototype.get = function(e) {
			return this.find(function(f) {
				return f.get("name") === e
			})
		};
		return c
	})(Sierra.ResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.SplunkStorm = Sierra.LoggingResourceModel.extend({
		object: "splunk_storm"
	});
	Sierra.Collections.SplunkStorms = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.object = "splunk_storm";
		d.prototype.model = Sierra.Models.SplunkStorm;
		d.prototype.sort_key = "name";
		return d
	})(Sierra.LoggingResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Wordpress = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.object = "wordpress";
		return d
	})(Sierra.ResourceModel);
	Sierra.Collections.Wordpress = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.object = "wordpress";
		d.prototype.model = Sierra.Models.Wordpress;
		d.prototype.sort_key = "name";
		return d
	})(Sierra.ResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Logentry = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "logentries";
		return c
	})(Sierra.LoggingResourceModel);
	Sierra.Collections.Logentries = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "logentries";
		c.prototype.model = Sierra.Models.Logentry;
		c.prototype.sort_key = "name";
		return c
	})(Sierra.LoggingResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Backend = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "backend";
		c.prototype.attrs = {
			healthchecks: "healthchecks",
			is_s3: "is_s3"
		};
		c.prototype.healthchecks = function() {
			return this.get("healthchecks")
		};
		c.prototype.is_s3 = function() {
			return this.get("address").match(/s3\.amazonaws\.com$/)
		};
		return c
	})(Sierra.ResourceModel);
	Sierra.Collections.Backends = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "backend";
		c.prototype.model = Sierra.Models.Backend;
		c.prototype.check_all = function(e) {
			return this.request("GET", "/check_all", e)
		};
		return c
	})(Sierra.ResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.ResponseObject = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.object = "response_object";
		return d
	})(Sierra.ResourceModel);
	Sierra.Collections.ResponseObjects = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.object = "response_object";
		d.prototype.model = Sierra.Models.ResponseObject;
		return d
	})(Sierra.ResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Cloudfile = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "cloudfiles";
		return c
	})(Sierra.LoggingResourceModel);
	Sierra.Collections.Cloudfiles = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.object = "cloudfiles";
		c.prototype.model = Sierra.Models.Cloudfile;
		c.prototype.sort_key = "name";
		return c
	})(Sierra.LoggingResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.HealthCheck = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.object = "healthcheck";
		return d
	})(Sierra.ResourceModel);
	Sierra.Collections.HealthChecks = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.object = "healthcheck";
		d.prototype.model = Sierra.Models.HealthCheck;
		d.prototype.sort_key = "name";
		return d
	})(Sierra.ResourceCollection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Service = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.attrs = {
			search_name: "search_name",
			configure_href: "configure_href",
			admin_stats_href: "admin_stats_href"
		};
		d.prototype.changed_only = true;
		d.prototype.url = function() {
			if (this.get("id")) {
				return "/service/" + this.get("id")
			} else {
				return "/service"
			}
		};
		d.prototype.configure_href = function() {
			return "#configure/service/" + this.get("id")
		};
		d.prototype.admin_stats_href = function() {
			return "#admin/stats/service/" + (this.get("id"))
		};
		d.prototype.search_name = function() {
			if (Sierra.can_do("internal")) {
				if (this.get("customer_name") == null) {
					return this.get("name")
				}
				return this.get("customer_name") + " - " + this.get("name")
			} else {
				return this.get("name").toLowerCase()
			}
		};
		d.prototype.domains = function(e) {
			return this.request("GET", "/domain", e)
		};
		d.prototype.details = function(e) {
			return this.request("GET", "/details", e)
		};
		d.prototype.purge_all = function(e) {
			return this.request("POST", "/purge_all", e)
		};
		d.prototype.purge_key = function(f, e) {
			return this.request("POST", "/purge/" + f, e)
		};
		d.prototype.purge = function(f, g, e) {
			if (e == null) {
				e = {}
			}
			g = g.replace(/^\//, "");
			_.defaults(e, {
				type: "POST",
				dataType: "json",
				url: "/purge/" + encodeURI([f, g].join("/"))
			});
			return Fastly.ajax(e)
		};
		d.quickstart = function(f, e) {
			return Fastly.ajax(_.defaults(e, {
				data: f,
				dataType: "json",
				type: "POST",
				url: "/quickstart"
			}))
		};
		d.prototype.diff = function(g, f, e) {
			return this.request("GET", "/diff/from/" + g + "/to/" + f + "?format=html", e)
		};
		d.prototype.syslog_status = function(e) {
			return this.request("GET", "/logging_status", e)
		};
		return d
	})(Sierra.Model);
	Sierra.Collections.Services = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.url = function() {
			return "/service"
		};
		c.prototype.model = Sierra.Models.Service;
		c.prototype.sort_key = "search_name";
		c.prototype.serialize = function() {
			var i, e, g, h, f;
			i = Sierra.Collection.prototype.serialize.call(this, arguments);
			g = [];
			for (h = 0, f = i.length; h < f; h++) {
				e = i[h];
				if (e.name !== "" && e.customer_name !== "" && e.customer_name !== null) {
					g.push(e)
				}
			}
			return g
		};
		return c
	})(Sierra.Collection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Limit = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.attrs = {
			label: "label"
		};
		d.prototype.label = function() {
			var e, f;
			f = this.get("field").replace(/^[^.]+\./, "").split("_");
			return ((function() {
				var i, h, g;
				g = [];
				for (i = 0, h = f.length; i < h; i++) {
					e = f[i];
					g.push(e.charAt(0).toUpperCase() + e.substr(1))
				}
				return g
			})()).join(" ")
		};
		d.prototype.url = function() {
			throw "Cannot directly set/fetch limits from model"
		};
		return d
	})(Sierra.Model);
	Sierra.Collections.Limits = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.model = Sierra.Models.Limit;
		c.prototype.url = function() {
			return "/customer/" + this.customer_id + "/limits"
		};
		c.prototype.set_customer_id = function(e) {
			return this.customer_id = e
		};
		c.prototype.update = function(e, f) {
			return Fastly.put(this.url(), e, f)
		};
		return c
	})(Sierra.Collection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Version = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.attrs = {
			"locked?": "is_locked",
			"active?": "is_active",
			dev: "is_dev",
			edit_url: "edit_url"
		};
		d.prototype.url = function() {
			var f, e, g;
			g = [this.get("service_id"), this.get("number")], e = g[0], f = g[1];
			if (!f) {
				return "/service/" + e + "/version"
			}
			return "/service/" + e + "/version/" + f
		};
		d.prototype.isNew = function() {
			return this.get("number") == null
		};
		d.prototype.is_active = function() {
			return this.get("active")
		};
		d.prototype.is_locked = function() {
			return this.get("locked")
		};
		d.prototype.is_dev = function() {
			return !this.get("active") && !this.get("locked")
		};
		d.prototype.edit_url = function() {
			return "#configure/service/" + (this.get("service_id")) + "/version/" + (this.get("number"))
		};
		d.prototype.action = function(f, e, k, h, g) {
			var i, j;
			if (k == null) {
				k = true
			}
			if (h == null) {
				h = "PUT"
			}
			if (g == null) {
				g = true
			}
			if (e == null) {
				e = {}
			}
			j = e.success;
			i = e.complete;
			e.success = (function(l) {
				return function(m) {
					l.trigger(f, l, m);
					if (k) {
						l.set(m);
						if (k) {
							l.trigger("updated", l, m)
						}
					}
					if (j != null) {
						return j(m)
					}
				}
			})(this);
			e.complete = (function(l) {
				return function() {
					if (g) {
						l.trigger("complete", l)
					}
					if (i != null) {
						return i()
					}
				}
			})(this);
			if (g) {
				this.trigger("fetch", this)
			}
			return this.request(h, "/" + f, e)
		};
		d.prototype.clone = function(e) {
			return this.action("clone", e, false)
		};
		d.prototype.validate_version = function(e) {
			return this.action("validate", e, false, "GET", false)
		};
		d.prototype.activate = function(e) {
			return this.action("activate", e)
		};
		d.prototype.deactivate = function(e) {
			return this.action("deactivate", e)
		};
		d.prototype.lock = function(e) {
			return this.action("lock", e)
		};
		d.prototype.settings = function(e) {
			if (e.data) {
				return this.put("/settings", e)
			} else {
				return this.request("GET", "/settings", e)
			}
		};
		d.prototype.serialize = function() {
			var m, g, h, j, i, f, l, e;
			m = Sierra.Model.prototype.serialize.apply(this, arguments);
			i = {};
			if (m.settings != null) {
				l = m.settings;
				for (g in l) {
					f = l[g];
					e = g.split("."), j = e[0], h = e[1];
					if (i[j] == null) {
						i[j] = {}
					}
					i[j][h] = f
				}
			}
			m.settings = i;
			m.previous = this.get("number") === 1 ? 1 : this.get("number") - 1;
			return m
		};
		return d
	})(Sierra.Model);
	Sierra.Collections.Versions = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.model = Sierra.Models.Version;
		c.prototype.comparator = function(g, f) {
			var e, i, h;
			h = [g.get("number") | 0, f.get("number") | 0], e = h[0], i = h[1];
			if (e > i) {
				return -1
			} else {
				return 1
			}
		};
		c.prototype.set_service_id = function(e) {
			return this.service_id = serviceid
		};
		c.prototype.url = function() {
			return "/service/" + this.service_id + "/version"
		};
		c.prototype.get = function(e) {
			e = e | 0;
			return this.find(function(f) {
				return f.get("number") === e
			})
		};
		c.prototype.active = function() {
			return this.find(function(e) {
				return e.is_active()
			})
		};
		c.prototype.purge = function(f, g, e) {
			if (e == null) {
				e = {}
			}
			_.defaults(e, {
				type: "POST",
				dataType: "json",
				url: "/purge/" + encodeURI([f, g].join("/"))
			});
			return Fastly.ajax(e)
		};
		return c
	})(Sierra.Collection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Customer = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.changed_only = true;
		d.prototype.option_names = ["has_config_panel", "can_upload_vcl", "can_edit_matches", "can_configure_wordpress", "can_stream_syslog", "has_historical_stats", "has_improved_logging", "has_streaming", "has_openstack_logging", "can_read_public_ip_list", "has_improved_security"];
		d.prototype.has_many = {
			users: {
				collection: "Users",
				path: "/users"
			},
			services: {
				collection: "Services",
				path: "/services"
			}
		};
		d.prototype.has_one = {
			owner: {
				model: "User",
				url: "/user/:owner_id"
			},
			billing_contact: {
				model: "User",
				url: "/user/:billing_contact_id"
			}
		};
		d.prototype.url = function() {
			if (this.get("id")) {
				return "/customer/" + (this.get("id"))
			} else {
				return "/customer"
			}
		};
		d.prototype.dates_active = function() {
			var e;
			e = ["2010/10", "2008/09"];
			return e
		};
		d.prototype.is_read_only = function() {
			return (this.get("readonly") | 0) === 1
		};
		d.prototype.has_option = function(e) {
			return Sierra.can_do("internal") || this.check_option(e)
		};
		d.prototype.check_option = function(e) {
			var f;
			if (!(_.indexOf(this.option_names, e) >= 0)) {
				return false
			}
			f = this.get(e);
			return f && (f | 0) === 1
		};
		d.prototype.serialize = function() {
			var i, f, h, e, g;
			i = Sierra.Model.prototype.serialize.apply(this);
			g = this.option_names;
			for (h = 0, e = g.length; h < e; h++) {
				f = g[h];
				if (this.check_option(f)) {
					i[f] = true
				} else {
					delete i[f]
				}
			}
			return i
		};
		d.prototype.cancel_account = function(f, e) {
			if (e == null) {
				e = {}
			}
			if (e.data == null) {
				e.data = {}
			}
			e.data.password = f;
			return this.request("DELETE", "", e)
		};
		d.prototype.reset_api_key = function(f, e) {
			var g;
			if (e == null) {
				e = {}
			}
			g = e.success;
			e.success = (function(h) {
				return function(i) {
					h.set("raw_api_key", i.raw_api_key);
					if (g != null) {
						return g(i)
					}
				}
			})(this);
			return Fastly.post("/api_key/reset", {
				password: f
			}, e)
		};
		d.prototype.get_limits = function(e) {
			return this.request("GET", "/limits", e)
		};
		d.prototype.set_limits = function(e) {
			return this.request("PUT", "/limits", {
				data: e
			})
		};
		return d
	})(Sierra.Model);
	Sierra.Models.CustomerDetails = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.url = function() {
			return "/customer/details/" + (this.get("id"))
		};
		c.prototype.initialize = function() {
			Sierra.Model.prototype.initialize.apply(this, arguments);
			return this.on("change", (function(e) {
				return function() {
					e.customer = new Sierra.Models.Customer(e.get("customer"));
					e.owner = new Sierra.Models.User(e.get("owner"));
					if (e.get("billing_contact")) {
						e.billing_contact = new Sierra.Models.User(e.get("billing_contact"))
					} else {
						e.billing_contact = null
					}
					e.credit_card = new Sierra.Models.CreditCard(e.get("credit_card"));
					return e.credit_card.set({
						customer_id: e.customer.get("id")
					})
				}
			})(this))
		};
		c.prototype.fetch = function() {
			this.set("billing_contact", null);
			return Sierra.Model.prototype.fetch.apply(this, arguments)
		};
		return c
	})(Sierra.Model);
	Sierra.Collections.Customers = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.url = function() {
			return "/customer"
		};
		c.prototype.model = Sierra.Models.Customer;
		c.prototype.sort_key = "name";
		c.prototype.initialize = function() {
			Sierra.Collection.prototype.initialize.apply(this, arguments);
			return this.on("success", (function(e) {
				return function() {
					return e._by_plan = null
				}
			})(this))
		};
		c.prototype.by_plan = function() {
			var g, f, e;
			if (this._by_plan != null) {
				return this._by_plan
			}
			f = {};
			this.each(function(i) {
				var h;
				return (f[h = i.get("pricing_plan")] != null ? f[h] : f[h] = []).push(i.serialize())
			});
			return this._by_plan = (function() {
				var h;
				h = [];
				for (e in f) {
					g = f[e];
					h.push({
						name: e,
						customers: g,
						count: g.length
					})
				}
				return h
			})()
		};
		return c
	})(Sierra.Collection);
	Sierra.Collections.NoServiceCustomers = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.url = "/metrics/no_service_customers";
		return c
	})(Sierra.Collections.Customers);
	Sierra.Collections.NewCustomers = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.url = function() {
			return "/metrics/customers"
		};
		return d
	})(Sierra.Collections.Customers)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Metrics = {};
	Sierra.Models.Metrics.Billing = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.url = function() {
			return "/metrics/billing"
		};
		return c
	})(Sierra.Model);
	Sierra.Models.Metrics.Prediction = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.url = function() {
			return "/metrics/billing/prediction"
		};
		c.prototype.serialize = function() {
			var i, f, e, g, h;
			f = [];
			h = this.get("customers");
			for (e in h) {
				i = h[e];
				f.push(i)
			}
			g = Sierra.Model.prototype.serialize.call(this);
			g.customers = f;
			return g
		};
		return c
	})(Sierra.Model)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.PricingExtra = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.url = function() {
			if (this.get("name")) {
				return "/customer/" + (this.get("customer_id")) + "/pricing_extra/" + (encodeURIComponent(this.get("name")))
			} else {
				return "/customer/" + (this.get("customer_id")) + "/pricing_extra"
			}
		};
		c.prototype.destroy = function(e) {
			if (e == null) {
				e = {}
			}
			this.set("id", this.get("name"));
			return Sierra.Model.prototype.destroy.call(this, e)
		};
		c.prototype.isNew = function() {
			return this.get("name") == null
		};
		return c
	})(Sierra.Model);
	Sierra.Collections.PricingExtras = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.model = Sierra.Models.PricingExtra;
		c.prototype.url = function() {
			return "/customer/" + this.customer_id + "/pricing_extra"
		};
		c.prototype.set_customer_id = function(e) {
			this.customer_id = e
		};
		return c
	})(Sierra.Collection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.User = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.roles = ["billing", "engineer", "user", "superuser", "internal", "salesadmin"];
		d.prototype.attrs = {
			first_name: "first_name",
			roles: "get_roles",
			two_factor_auth_enabled: "two_factor_auth_enabled"
		};
		d.prototype.url = function() {
			if (this.id) {
				return "/user/" + this.id
			} else {
				return "/user"
			}
		};
		d.prototype.verify_with_authenticator = function(f, e) {
			return Fastly.post("/two_factor_auth/verify", {
				token: f
			}, e)
		};
		d.prototype.verify_with_recovery_code = function(f, e) {
			return Fastly.post("/two_factor_auth/verify_by_recovery_code", {
				code: f
			}, e)
		};
		d.prototype.two_factor_auth_enabled = function() {
			return this.get("two_factor_auth_enabled")
		};
		d.prototype.get_recovery_codes = function(e) {
			return Fastly.get("/two_factor_auth/recovery_codes", {}, e)
		};
		d.prototype.generate_recovery_codes = function(e) {
			return Fastly.post("/two_factor_auth/recovery_codes/refresh", {}, e)
		};
		d.prototype.setup_two_factor_auth = function(f, e) {
			return Fastly.ajax({
				url: "/two_factor_auth/setup",
				type: "POST",
				data: {
					password: f
				},
				success: function(g) {
					return e.success(g)
				},
				error: function(g) {
					return e.error(g)
				},
				complete: function() {
					return e.complete()
				}
			})
		};
		d.prototype.enable_two_factor_auth = function(f, e) {
			return Fastly.post("/two_factor_auth/enable", {
				token: f
			}, e)
		};
		d.prototype.disable_two_factor_auth = function(f, e) {
			return Fastly.post("/two_factor_auth/disable", {
				token: f
			}, e)
		};
		d.prototype.admin_disable_two_factor_auth = function(e) {
			return Fastly.post("/admin/disable_two_factor_auth", {
				login: this.get("login")
			}, e)
		};
		d.prototype.first_name = function() {
			return this.get("name").split(/\s+/)[0]
		};
		d.prototype.password = function(e) {
			if (this.get("id") == null) {
				return
			}
			return this.request("POST", "/password", e)
		};
		d.prototype.get_roles = function(e) {
			var j, g, i, f, h;
			if (e == null) {
				e = true
			}
			g = [];
			h = this.roles;
			for (i = 0, f = h.length; i < f; i++) {
				j = h[i];
				g.push(this.get("role") === j && e ? {
					name: j,
					selected: true
				} : {
					name: j
				})
			}
			return g
		};
		d.prototype.randomize_password = function(e) {
			if (this.get("id") == null) {
				return
			}
			return this.request("POST", "/randomize_password", e)
		};
		d.prototype.assume = function(e) {
			if (e == null) {
				e = {}
			}
			e.type = "POST";
			e.dataType = "json";
			e.url = "/admin/assume/" + encodeURIComponent(this.get("login"));
			return Fastly.ajax(e)
		};
		d.prototype.unlock = function(e) {
			return this.request("POST", "/unlock", e)
		};
		d.prototype.lock = function(e) {
			return this.request("POST", "/lock", e)
		};
		d.prototype.gravatar_url = function(e) {
			if (e == null) {
				e = 40
			}
			return "https://secure.gravatar.com/avatar/" + (this.get("email_hash")) + "?s=" + e
		};
		d.request_reset = function(f, e) {
			return Fastly.post("/user/" + encodeURIComponent(f) + "/password/request_reset", {}, e)
		};
		return d
	})(Sierra.Model);
	Sierra.Collections.Users = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.model = Sierra.Models.User;
		c.prototype.sort_key = "name";
		c.prototype.initialize = function(f, e) {
			if (e == null) {
				e = {}
			}
			this.show_all_users = !e.customer_only;
			return Sierra.Collection.prototype.initialize.apply(this, arguments)
		};
		c.prototype.url = function() {
			if (Sierra.can_do("internal") && this.show_all_users) {
				return "/user"
			}
			return Sierra.customer.users.url()
		};
		return c
	})(Sierra.Collection);
	Sierra.Collections.UnverifiedUsers = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.url = "/metrics/unverified_users";
		return c
	})(Sierra.Collections.Users);
	Sierra.Collections.SearchUsers = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.url = "/user/search";
		return c
	})(Sierra.Collections.Users)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.PricingPlan = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.url = function() {
			return ""
		};
		c.prototype.attrs = {
			label: "label",
			monthly_cost: "monthly_cost",
			price: "price"
		};
		c.prototype.label = function() {
			var e;
			e = this.get("id");
			return e.charAt(0).toUpperCase() + e.slice(1)
		};
		c.prototype.monthly_cost = function() {
			var e;
			e = parseFloat(this.get("cost"));
			if (e === 0) {
				return "Free"
			}
			return "$" + e + " / mo"
		};
		c.prototype.price = function() {
			return "$" + (parseFloat(this.get("cost")).toFixed(2))
		};
		return c
	})(Sierra.Model);
	Sierra.Collections.PricingPlans = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.model = Sierra.Models.PricingPlan;
		d.prototype.url = function() {
			return "/prices"
		};
		d.prototype.comparator = function(f, e) {
			if (f.get("cost") < e.get("cost")) {
				return -1
			} else {
				return 1
			}
		};
		d.prototype.reset = function(j, h) {
			var e, g, i, f;
			if (j.length != null) {
				g = [];
				for (i = 0, f = j.length; i < f; i++) {
					e = j[i];
					g.push(e)
				}
				return Sierra.Collection.prototype.reset.call(this, g, h)
			} else {
				if (j["public"]) {
					return Sierra.Collection.prototype.reset.apply(this, arguments)
				}
			}
		};
		d.prototype.serialize = function(i) {
			var g, h, f, e;
			if (i == null) {
				i = Sierra.customer
			}
			g = Sierra.Collection.prototype.serialize.apply(this, arguments);
			if (i != null) {
				for (f = 0, e = g.length; f < e; f++) {
					h = g[f];
					if (i.get("pricing_plan") === h.id) {
						h.selected = true
					}
				}
			}
			return g
		};
		d.prototype.fetch = function(e) {
			var f;
			if (e == null) {
				e = {}
			}
			if (e.success != null) {
				f = e.success;
				e.success = (function(g) {
					return function(h) {
						g.reset(h.plans);
						return f(h)
					}
				})(this)
			}
			return this.request("GET", "", e)
		};
		return d
	})(Sierra.Collection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Invoice = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.region_names = {
			usa: "United States",
			europe: "Europe",
			australia: "Australia",
			asia: "Asia",
			all: "All Regions"
		};
		c.prototype.url = function() {
			var i, h, e, f, g;
			g = [this.get("year"), this.get("month"), this.get("customer_id")], f = g[0], h = g[1], i = g[2];
			e = "/billing";
			if ((f != null) && (h != null)) {
				e += "/year/" + f + "/month/" + h
			}
			e += "?no_list=true";
			if ((i != null) && i.length > 0) {
				e += "&explicit_customer_id=" + i
			}
			return e
		};
		c.prototype.is_paid = function() {
			return this.get("status").status === "Paid"
		};
		c.prototype.is_month_to_date = function() {
			return this.get("status").status === "Month to date"
		};
		c.prototype.is_outstanding = function() {
			return this.get("status").status === "Outstanding"
		};
		c.prototype.pay = function(e) {
			var f;
			if (e == null) {
				e = {}
			}
			e.data = {
				invoice_id: this.get("invoice_id")
			};
			e.type = "POST";
			f = e.success;
			e.success = (function(g) {
				return function(i) {
					var h;
					h = g.get("status");
					h.status = "Paid";
					g.set({
						status: h
					});
					g.trigger("change");
					if (f != null) {
						return f()
					}
				}
			})(this);
			e.url = "/billing/paycc";
			return Fastly.ajax(e)
		};
		c.prototype.mark_as_paid = function(e, f) {
			var g;
			if (!Sierra.can_do("salesadmin")) {
				return
			}
			if (f == null) {
				f = {}
			}
			f.data = e;
			f.type = "PUT";
			g = f.success;
			f.success = (function(h) {
				return function(j) {
					var i;
					i = h.get("status");
					i.status = "Paid";
					h.set("status", i);
					h.trigger("change");
					if (g != null) {
						return g()
					}
				}
			})(this);
			f.url = "/billing/invoice/" + (this.get("invoice_id")) + "/pay/via/" + e.payment_method;
			return Fastly.ajax(f)
		};
		c.prototype.serialize = function() {
			var E, C, A, n, u, B, x, D, y, s, L, F, N, q, r, k, M, h, K, z, w, m, j, g, e, H, J, I, G, v, p, o, l, i, f;
			k = [];
			v = this.region_names;
			for (L in v) {
				N = v[L];
				if (this.attributes.regions[L] == null) {
					continue
				}
				r = this.attributes.regions[L];
				r.key = L;
				r.name = N;
				r.cost = parseFloat(r.cost).toFixed(2);
				if (r.bandwidth != null) {
					p = r.bandwidth.tiers;
					for (m = 0, H = p.length; m < H; m++) {
						w = p[m];
						w.units = w.units | 0
					}
				}
				if (r.requests != null) {
					o = r.requests.tiers;
					for (j = 0, J = o.length; j < J; j++) {
						w = o[j];
						w.units = w.units | 0
					}
				}
				k.push(r)
			}
			h = [];
			l = this.attributes.services;
			for (y in l) {
				M = l[y];
				M.id = y;
				h.push(M)
			}
			u = [];
			if (this.attributes.total.extras != null) {
				i = this.attributes.total.extras;
				for (g = 0, I = i.length; g < I; g++) {
					n = i[g];
					if ((n.setup != null) && parseFloat(n.setup) > 0) {
						n.setup = parseFloat(n.setup).toFixed(2)
					}
					if ((n.recurring != null) && parseFloat(n.recurring) > 0) {
						n.recurring = parseFloat(n.recurring).toFixed(2)
					}
					u.push(n)
				}
			}
			this.attributes.total.extras = u;
			this.attributes.total.extras.sort(function(O, t) {
				if (O.name.toUpperCase() >= t.name.toUpperCase()) {
					return 1
				} else {
					return -1
				}
			});
			K = FUI.util.Date.parse(this.get("start_time"));
			A = FUI.util.Date.parse(this.get("end_time"));
			F = new Date((A - K) / 2 + K);
			if (this.is_month_to_date()) {
				D = "#billing/customer/" + (this.get("customer_id")) + "/month_to_date"
			} else {
				D = "#billing/customer/" + (this.get("customer_id")) + "/year/" + (F.getUTCFullYear()) + "/month/" + (F.getUTCMonth() + 1)
			}
			x = location.protocol + "//" + window.location.hostname;
			E = FUI.util.Date.format(F, "F Y");
			B = FUI.util.Date.format(F, "Y-m-01");
			F.setMonth(F.getUTCMonth() + 1);
			C = FUI.util.Date.format(F, "Y-m-01");
			s = {
				date: E,
				full_date: B,
				due_date: C,
				regions: k,
				services: h,
				invoice_id: this.get("invoice_id"),
				billing_ref: this.get("billing_ref"),
				total: _.clone(this.attributes.total),
				status: _.clone(this.attributes.status),
				href: D,
				host: x,
				cid: this.cid
			};
			z = this.get("status").status;
			if (z === "Outstanding") {
				s.outstanding = true
			}
			if (z === "Month to date") {
				s.month_to_date = true
			}
			if (z === "Paid") {
				s.paid = true
			}
			if (z !== "Paid" && z !== "Pending" && s.total.cost >= 0.01) {
				s.show_pay = true
			}
			if (Sierra.can_do("salesadmin")) {
				s.total.percentile = (s.total.bandwidth / 231.428).toFixed(4)
			}
			if (z === "Outstanding" && parseFloat(s.total.cost.toFixed(2)) === 0) {
				s.status.status = "Paid (Free)"
			}
			q = s.total.plan_name;
			s.total.pretty_plan_name = q.charAt(0).toUpperCase() + q.slice(1);
			f = ["cost", "bandwidth_cost", "requests_cost", "overage", "incurred_cost", "prepaid", "rollover", "discount", "cost_before_discount", "plan_minimum"];
			for (e = 0, G = f.length; e < G; e++) {
				L = f[e];
				if (s.total[L] == null) {
					continue
				}
				s.total[L] = s.total[L].toFixed(2)
			}
			s.total.bandwidth = s.total.bandwidth.toFixed(1);
			return s
		};
		return c
	})(Sierra.Model);
	Sierra.Collections.Invoices = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.model = Sierra.Models.Invoice;
		c.prototype.initialize = function(f, e) {
			if (e == null) {
				e = {}
			}
			this.customer_id = e.customer_id;
			return Sierra.Collection.prototype.initialize.apply(this, arguments)
		};
		c.prototype.comparator = function(g, f) {
			var e, h;
			e = FUI.date(g.get("start_time"));
			h = FUI.date(f.get("start_time"));
			if (e > h) {
				return -1
			} else {
				return 1
			}
		};
		c.prototype.set_customer_id = function(e) {
			return this.customer_id = e
		};
		c.prototype.get_by_date = function(f, e) {
			return this.find(function(j) {
				var h, g, k, i;
				i = j.get("start_time").match(/^(\d+)-(\d+)/), h = i[0], k = i[1], g = i[2];
				return (g | 0) === (f | 0) && (k | 0) === (e | 0)
			})
		};
		c.prototype.url = function() {
			var e;
			e = "/billing/invoice";
			if ((this.customer_id != null) && this.customer_id.length > 0) {
				e += "?explicit_customer_id=" + this.customer_id
			}
			return e
		};
		c.prototype.outstanding = function() {
			return this.filter(function(e) {
				return e.is_outstanding()
			})
		};
		c.prototype.paid = function() {
			return this.filter(function(e) {
				return e.is_paid()
			})
		};
		c.prototype.month_to_date = function() {
			return this.find(function(e) {
				return e.is_month_to_date()
			})
		};
		c.prototype.current = function() {
			return this.first()
		};
		c.prototype.data_table = function() {
			var f, e;
			e = new google.visualization.DataTable();
			e.addColumn("string", "month");
			e.addColumn("number", "cost");
			f = this.map(function(h) {
				var i, g;
				g = FUI.date(h.get("start_time"), "M 'y");
				i = parseFloat(h.get("total").cost.toFixed(2));
				return [g, i]
			});
			e.addRows(f.splice(0, 6).reverse());
			return e
		};
		return c
	})(Sierra.Collection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Templates = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.url = function() {
			return "/templates.json?" + Sierra.version
		};
		c.prototype.initialize = function() {
			Sierra.Model.prototype.initialize.apply(this, arguments);
			return this.compiled = {}
		};
		c.prototype.get = function(e) {
			var f;
			if (this.compiled[e] != null) {
				return this.compiled[e]
			}
			f = Sierra.Model.prototype.get.call(this, e);
			return this.compiled[e] = Handlebars.compile(f)
		};
		return c
	})(Sierra.Model)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Auth = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.initialize = function() {
			this.plans = new Sierra.Collections.PricingPlans();
			this.signup_fields = {};
			return this.return_to = ""
		};
		c.prototype.set_invitation_code = function(e) {
			return this.invitation_code = e
		};
		c.prototype.accept_invitation = function(e, f) {
			return Sierra.Models.Invitation.accept(this.invitation_code, e, f)
		};
		c.prototype.reset_password = function(e) {
			return this.password_reset.reset(e)
		};
		c.prototype.set_signup_fields = function(e) {
			this.signup_fields = _.clone(e);
			delete this.signup_fields.password;
			return delete this.signup_fields.phone_number
		};
		c.prototype.set_password_reset = function(e) {
			return this.password_reset = new Sierra.Models.PasswordReset(e)
		};
		c.prototype.serialize = function() {
			return {
				plans: this.plans.serialize(),
				signup_fields: this.signup_fields,
				return_to: this.return_to
			}
		};
		c.prototype.fetch = function(e) {
			return this.plans.fetch(e)
		};
		return c
	})(Sierra.Model)
}).call(this);
(function() {
	var d, b, a = {}.hasOwnProperty,
		c = function(h, f) {
			for (var e in f) {
				if (a.call(f, e)) {
					h[e] = f[e]
				}
			}
			function g() {
				this.constructor = h
			}
			g.prototype = f.prototype;
			h.prototype = new g();
			h.__super__ = f.prototype;
			return h
		};
	d = function(e) {
		var g, f;
		g = moment.unix(e);
		f = "MMM D";
		if (g.dayOfYear() === 1) {
			f += ", YYYY"
		}
		return g.format(f)
	};
	b = function(e) {
		var g, f;
		g = moment.unix(e);
		f = "H:mm";
		if (g.hour() === 0 && g.minute() === 0) {
			f = "MMM D"
		}
		if (g.dayOfYear() === 1) {
			f += ", YYYY"
		}
		return g.format(f)
	};
	Sierra.Models.Stats = (function(e) {
		var g;
		c(f, e);

		function f() {
			return f.__super__.constructor.apply(this, arguments)
		}
		g = 3000;
		f.prototype.default_range = {
			day: {
				from: moment().subtract("month", 6).subtract("day", 1),
				to: moment().subtract("day", 1)
			},
			hour: {
				from: moment().subtract("week", 1),
				to: moment().subtract("day", 1)
			},
			minute: {
				from: moment().subtract("minute", 180),
				to: moment().subtract("minute", 15)
			}
		};
		f.prototype.time_formats = {
			day: d,
			hour: b,
			minute: b
		};
		f.prototype.initialize = function() {
			this.services = new Sierra.Collections.Services();
			this.services_loaded = false;
			this.service_id = "all";
			this.service = null;
			this.from = this.default_range.day.from.format("X") | 0;
			this.to = this.default_range.day.to.format("X") | 0;
			this.by = "day";
			this.region = null;
			return this.active = null
		};
		f.prototype.set_service_id = function(h) {
			this.service_id = h;
			if (h === "all") {
				Sierra.last_service = null
			} else {
				Sierra.last_service = h
			}
			return this._set_url()
		};
		f.prototype.set_date_range = function(i, h) {
			this.from = i.unix();
			this.to = h.unix();
			return this._set_url()
		};
		f.prototype.set_by = function(h) {
			this.by = h;
			return this._set_url()
		};
		f.prototype.set_date_range_and_by = function(j, i, h) {
			this.from = j.unix();
			this.to = i.unix();
			this.by = h;
			return this._set_url()
		};
		f.prototype.set_region = function(h) {
			this.force_reload = true;
			this.region = h;
			return this._set_url()
		};
		f.prototype.get_time_format = function() {
			return this.time_formats[this.by]
		};
		f.prototype.get_record_count = function() {
			var h;
			h = (function() {
				switch (this.by) {
				case "day":
					return 86400;
				case "hour":
					return 3600;
				case "minute":
					return 60
				}
			}).call(this);
			return parseInt((this.to - this.from) / h)
		};
		f.prototype.validate = function() {
			var h;
			h = this.get_record_count() > g ? "Selected time range exceeds " + g + " records" : this.to > moment(new Date()).unix() ? "You cannot choose a time in the future." : null;
			if (h != null) {
				this.trigger("invalid", this, h)
			} else {
				this.trigger("valid", this)
			}
			return h
		};
		f.prototype.serialize = function() {
			var i, j, h;
			i = {};
			if (this.service != null) {
				i.service = this.service.serialize()
			} else {
				i.service = {
					id: "all",
					name: "All Services"
				}
			}
			h = moment.unix(this.from);
			j = moment.unix(this.to);
			if (this.by === "day") {
				i.from = h.format("MMMM D, YYYY");
				i.to = j.format("MMMM D, YYYY")
			} else {
				i.from = h.format("MMMM D, YYYY H:mm");
				if (h.date() === j.date() && h.year() === j.year()) {
					i.to = j.format("H:mm")
				} else {
					i.to = j.format("MMMM D, YYYY H:mm")
				}
			}
			i.by = this.by;
			i.count = this.active.data.length;
			return i
		};
		f.prototype.fetch = function(l) {
			var m, h, j, o, i, n;
			h = (function(k) {
				return function(r) {
					var u, q, v, t, p, s;
					if (r.service_id != null) {
						k.active = new Sierra.ServiceStatsModel(r.service_id);
						k.service = k.services.get(r.service_id);
						if (k.service == null) {
							return k.set_service_id(k.services.first().get("id"))
						}
						k.service_id = k.service.get("id")
					} else {
						u = r.customer_id ? r.customer_id : Sierra.customer.get("id");
						k.active = new Sierra.AggregateStatsModel(u);
						k.service = null;
						k.service_id = null
					}
					s = ["from", "to", "region", "by", "view"];
					for (t = 0, p = s.length; t < p; t++) {
						q = s[t];
						if (r[q] == null) {
							continue
						}
						k[q] = r[q].replace(/[&\/]/, "")
					}
					k.to = parseInt(k.to);
					k.from = parseInt(k.from);
					if (r.fields != null) {
						k.fields = r.fields.split(/\s*,\s*/)
					}
					v = r.success;
					r.success = function(w) {
						k.trigger("data:loaded");
						if (v != null) {
							return v(w)
						}
					};
					if (r.from == null) {
						r.from = k.from
					}
					if (r.to == null) {
						r.to = k.to
					}
					if (r.by == null) {
						r.by = k.by
					}
					if (r.region == null) {
						r.region = k.region
					}
					return k.active.fetch(r)
				}
			})(this);
			m = (this.service != null) && (l.service_id == null);
			m || (m = (this.service == null) && (l.service_id != null));
			m || (m = (this.service != null) && (l.service_id != null) && this.service.get("id") !== l.service_id);
			if (this.force_reload) {
				this.force_reload = false;
				m = true
			}
			if (!m) {
				n = ["from", "to", "region", "by"];
				for (o = 0, i = n.length; o < i; o++) {
					j = n[o];
					if (l[j] == null) {
						continue
					}
					if (this[j] !== l[j].replace(/[&\/]/, "")) {
						m = true;
						break
					}
				}
			}
			if (!(m || !this.services_loaded)) {
				if (l.fields != null) {
					this.fields = l.fields.split(/\s*,\s*/)
				}
				if (l.view != null) {
					this.view = l.view
				}
				return l.success()
			}
			FUI.show_page_loading();
			if (this.services_loaded) {
				return h(l)
			}
			return this.fetch_services({
				success: (function(k) {
					return function() {
						return h(l)
					}
				})(this)
			})
		};
		f.prototype.fetch_services = function(h) {
			var i;
			i = h.success;
			h.success = (function(j) {
				return function() {
					j.services_loaded = true;
					j.default_service = j.services.first();
					j.services.add({
						id: "all",
						name: "All Services"
					});
					if (i != null) {
						return i()
					}
				}
			})(this);
			return this.services.fetch(h)
		};
		f.prototype._set_url = function() {
			var i, l, m, j, h;
			if (this.validate()) {
				return
			}
			if (this.service_id === "all") {
				j = "stats"
			} else {
				j = "stats/service/" + this.service_id
			}
			l = {
				to: this.to,
				from: this.from,
				by: this.by,
				region: this.region
			};
			m = [];
			for (i in l) {
				h = l[i];
				if (h != null) {
					m.push("" + i + "=" + h)
				}
			}
			if (!m.length) {
				return Sierra.navigate(j)
			}
			return Sierra.navigate(j + "/" + m.join("&"))
		};
		return f
	})(Sierra.Model)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Streaming = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.initialize = function() {
			Sierra.Model.prototype.initialize.apply(this, arguments);
			return this.collection = new Sierra.Collections.Streams()
		};
		d.prototype.url = function() {
			if (this.id) {
				return "/stream/" + this.id
			} else {
				return "/stream"
			}
		};
		d.prototype.fetch = function(e) {
			FUI.show_page_loading();
			return this.collection.fetch(e)
		};
		return d
	})(Sierra.Model);
	Sierra.Models.Stream = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.urlRoot = "/stream";
		d.prototype.get_rendition_id = function(f) {
			var g, i, e, h;
			h = this.get("renditions_list");
			for (i = 0, e = h.length; i < e; i++) {
				g = h[i];
				if (g.name === f) {
					return g.id
				}
			}
			return null
		};
		d.prototype.add_rendition = function(f, e) {
			var g;
			g = e.success;
			e.success = (function(h) {
				return function(i) {
					h.get("renditions_list").push({
						name: i.name,
						id: i.id
					});
					if (g != null) {
						return g(i)
					}
				}
			})(this);
			e.data = {
				name: f
			};
			this.request("POST", "/rendition", e);
			return console.log("add rendition", f, e)
		};
		d.prototype.remove_rendition = function(f, e) {
			var g, h;
			if ((g = this.get_rendition_id(f)) == null) {
				return
			}
			h = e.success;
			e.success = (function(i) {
				return function(o) {
					var k, l, n, j, m;
					m = i.get("renditions_list");
					for (k = n = 0, j = m.length; n < j; k = ++n) {
						l = m[k];
						if (l.name === f) {
							i.get("renditions_list").splice(k, 1);
							break
						}
					}
					if (h != null) {
						return h(o)
					}
				}
			})(this);
			this.request("DELETE", "/rendition/" + g, e);
			return console.log("remove rendition", f, e)
		};
		return d
	})(Sierra.Model);
	Sierra.Collections.Streams = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.url = function() {
			return "/stream"
		};
		c.prototype.model = Sierra.Models.Stream;
		return c
	})(Sierra.Collection)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Configure = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.collection_map = {
			backends: "Backends",
			conditions: "Conditions",
			domains: "Domains",
			healthchecks: "HealthChecks",
			syslogs: "SysLogs",
			logentries: "Logentries",
			papertrails: "Papertrails",
			sumologics: "Sumologics",
			splunk_storms: "SplunkStorms",
			s3s: "S3s",
			ftps: "FTPs",
			openstacks: "OpenStacks",
			logshuttles: "LogShuttles",
			cloudfiles: "Cloudfiles",
			vcls: "Vcls",
			wordpress: "Wordpress",
			request_settings: "RequestSettings",
			cache_settings: "CacheSettings",
			response_objects: "ResponseObjects",
			headers: "Headers",
			gzips: "Gzips"
		};
		c.prototype.resource_type_name = {
			Backends: "Backend",
			Conditions: "Condition",
			Domains: "Domain",
			HealthChecks: "Health Check",
			SysLogs: "Syslog",
			Logentries: "Logentry",
			Papertrails: "Papertrail",
			Sumologics: "Sumologic",
			SplunkStorms: "SplunkStorm",
			S3s: "S3",
			FTPs: "FTP",
			OpenStacks: "OpenStack",
			LogShuttles: "LogShuttle",
			Cloudfiles: "Cloudfile",
			Vcls: "VCL",
			Wordpress: "WordPress",
			RequestSettings: "Request Settings",
			CacheSettings: "Cache Settings",
			ResponseObjects: "Response",
			Headers: "Header",
			Gzips: "Gzip"
		};
		c.prototype.max_deployed = 3;
		c.prototype.max_development = 3;
		c.prototype.events_enabled = true;
		c.prototype.initialize = function() {
			var n, m, e, p, k, j, o, f, l, i, h, g;
			this.services_loaded = false;
			this.services = new Sierra.Collections.Services();
			this.versions = new Sierra.Collections.Versions();
			this.event_log = new Sierra.Collections.EventLog();
			this.event_log_interval = null;
			this.message = null;
			this.section = "domains-list";
			this.changes = false;
			this.has_active_version = false;
			l = [{}, {}], this.resources = l[0], this.active_resources = l[1];
			i = this.collection_map;
			for (p in i) {
				m = i[p];
				n = this.resources[m] = new Sierra.Collections[m]();
				this.active_resources[m] = new Sierra.Collections[m]();
				h = ["add", "update", "remove"];
				for (k = 0, o = h.length; k < o; k++) {
					e = h[k];
					n.on(e, (function(q) {
						return function() {
							q.trigger("resource:changed");
							return q.validate_changes()
						}
					})(this))
				}
				g = ["add", "remove"];
				for (j = 0, f = g.length; j < f; j++) {
					e = g[j];
					n.on(e, (function(q) {
						return function(r) {
							return q.changes = true
						}
					})(this))
				}
				n.on("change", (function(q) {
					return function(r) {
						if (!_.isEmpty(_.omit(r.changed, "version"))) {
							return q.changes = true
						}
					}
				})(this))
			}
			return setInterval(((function(q) {
				return function() {
					return q.fetch_events()
				}
			})(this)), 15000)
		};
		c.prototype.get_message = function() {
			var e;
			e = this.message;
			this.message = null;
			return e
		};
		c.prototype.resource_options = function() {
			return {
				service_id: this.service.get("id"),
				version: this.version.get("number"),
				locked: this.version.get("locked")
			}
		};
		c.prototype.validate_changes = function() {
			var l, h, f, g, e, i, k, j;
			this.trigger("version:validate");
			i = this.version.validate_version({
				complete: (function(m) {
					return function() {
						return m.trigger("version:validate_complete")
					}
				})(this),
				error: (function(m) {
					return function() {
						return m.trigger("version:invalid", "There was an error in validation.")
					}
				})(this)
			});
			f = false;
			j = this.active_resources;
			for (g in j) {
				l = j[g];
				if (l.is_logging_resource_collection) {
					f = true
				}
			}
			e = null;
			if (f) {
				e = this.service.syslog_status()
			}
			k = function(q, p) {
				var o, n, r, m;
				if (p) {
					p = p[0];
					o = [];
					for (r in p) {
						m = p[r];
						n = (new RegExp(this.service.id + "/(.*)")).exec(r);
						if (n !== null && m.BrokenNow) {
							g = n[1];
							o.push("" + g + ' ("' + m.LastError + '")')
						}
					}
					if (o.length) {
						o = "The following syslog configs appear to be broken in the active configuration: " + (o.join(", "))
					} else {
						o = null
					}
				}
				q = q[0];
				if (q.status === "ok" && !q.msg && !o) {
					return this.trigger("version:valid")
				} else {
					if (q.status === "ok") {
						return this.trigger("version:warning", [q.msg, o].join("\n\n"))
					} else {
						return this.trigger("version:invalid", [q.msg, o].join("\n\n"))
					}
				}
			};
			h = function(m) {
				var n;
				if (m.status === 200) {
					n = m.responseJSON;
					if (n.status === "ok" && !n.msg) {
						return this.trigger("version:valid")
					} else {
						if (n.status === "ok") {
							return this.trigger("version:warning", n.msg)
						} else {
							return this.trigger("version:invalid", n.msg)
						}
					}
				}
			};
			return $.when(i, e).then(_.bind(k, this), _.bind(h, this, i))
		};
		c.prototype.is_version = function(f, e) {
			if (!((this.service != null) && (this.version != null))) {
				return false
			}
			return this.service.get("id") === f && this.version.get("number") === parseInt(e)
		};
		c.prototype.add_service = function(f, g) {
			var e, h;
			e = new Sierra.Models.Service();
			h = g.success;
			g.success = (function(i) {
				return function(j) {
					i.services.add(e);
					if (h != null) {
						return h(j)
					}
				}
			})(this);
			return e.save(f, g)
		};
		c.prototype.set_service = function(f, e) {
			if (e == null) {
				e = false
			}
			if (e) {
				this.services_loaded = false
			}
			return Sierra.navigate("configure/service/" + f)
		};
		c.prototype.reload_service = function(e) {
			return this.trigger("reload:service", e)
		};
		c.prototype.set_service_for_editor = function(g) {
			var e, f;
			e = this.services.get(g);
			f = e.get("version") || e.get("active_version");
			return Sierra.navigate("configure/service/" + (e.get("id")) + "/version/" + f)
		};
		c.prototype.set_version = function(f) {
			var e;
			e = "configure/service/" + (this.service.get("id")) + "/version/" + f;
			if (this.section != null) {
				e += "/" + this.section
			}
			return Sierra.navigate(e)
		};
		c.prototype.set_section = function(e) {
			if (e == null) {
				return
			}
			this.section = e;
			return this.trigger("section:changed", this.section)
		};
		c.prototype.destroy_service = function(e) {
			var f;
			f = this.service.get("id");
			this.services.remove(this.service);
			this.services_loaded = false;
			Sierra.last_service = null;
			return this.service.destroy(e)
		};
		c.prototype.destroy_condition = function(g, t) {
			var m, n, f, q, r, l, p, k, e, s, i, o, j, h;
			q = "" + (g.get("type").toLowerCase()) + "_condition";
			s = g.get("name");
			e = [];
			j = this.resources;
			for (r in j) {
				m = j[r];
				m.each(function(u) {
					if (u.get(q) === s) {
						return e.push(u)
					}
				})
			}
			f = (function(u) {
				return function() {
					return g.destroy(t)
				}
			})(this);
			n = e.length;
			if (n > 0) {
				p = {};
				p[q] = "";
				k = {
					success: (function(u) {
						return function() {
							if (!(--n)) {
								return f()
							}
						}
					})(this),
					error: (function(u) {
						return function(v, w) {}
					})(this)
				};
				h = [];
				for (i = 0, o = e.length; i < o; i++) {
					l = e[i];
					h.push(l.save(p, k))
				}
				return h
			} else {
				return f()
			}
		};
		c.prototype.parse_details = function(e, o, k, n) {
			var j, m, f, p, h, l, i, g;
			this.versions.reset(e.versions);
			if (this.check_clone(e, o, k, n)) {
				return
			}
			this.find_selected_version(e);
			this.version.set({
				settings: e.version.settings
			});
			p = this.resource_options();
			i = this.collection_map;
			for (m in i) {
				j = i[m];
				this.resources[j].reset(e.version[m], p);
				this.resources[j].each(function(q) {
					q.set(p);
					return q.is_new = false
				})
			}
			if (e.active_version != null) {
				g = this.collection_map;
				for (m in g) {
					j = g[m];
					this.active_resources[j].reset(e.active_version[m], p);
					this.active_resources[j].each(function(q) {
						q.set(p);
						return q.is_new = false
					})
				}
				this.has_active_version = true;
				this.compare_to_active(e)
			} else {
				this.has_active_version = false
			}
			if (!_.isArray(o)) {
				o = [o]
			}
			for (h = 0, l = o.length; h < l; h++) {
				f = o[h];
				this.trigger(f, this)
			}
			this.trigger("complete", this);
			if (n != null) {
				return n()
			}
		};
		c.prototype.compare_to_active = function(e) {
			var g, m, n, l, p, o, j, k, h, f;
			this.changes = false;
			k = this.collection_map;
			for (p in k) {
				m = k[p];
				for (l = j = 0, h = this.resources[m].length; 0 <= h ? j < h : j > h; l = 0 <= h ? ++j : --j) {
					n = this.resources[m].at(l);
					g = this.active_resources[m].at(l);
					if (g == null) {
						return (this.changes = true)
					}
					if (JSON.stringify(g.attributes) !== JSON.stringify(n.attributes)) {
						return (this.changes = true)
					}
				}
			}
			f = e.active_version.settings;
			for (p in f) {
				o = f[p];
				if (e.version.settings[p] !== o) {
					return (this.changes = true)
				}
			}
		};
		c.prototype.check_clone = function(e, m, i, l) {
			var f, j, h, g, k;
			if (!(i && !Sierra.can_do("salesadmin") && !Sierra.customer.is_read_only())) {
				return false
			}
			if ((j = this.versions.first()).is_dev()) {
				return false
			}
			f = this.versions.find(function(n) {
				return n.get("active")
			});
			h = this.versions.find(function(n) {
				return n.get("locked")
			});
			g = j.get("number") + 1;
			if (this.version != null) {
				this.version.off("clone")
			}
			k = new Sierra.Models.Version({
				number: g,
				service_id: this.service.get("id"),
				updated_at: FUI.util.Date.format(new Date(), "m/d/Y")
			});
			this.service.set({
				version: g
			});
			e.versions.push(k.serialize());
			(f || h).clone({
				success: (function(n) {
					return function() {
						return n.parse_details(e, m, false, l)
					}
				})(this)
			});
			return true
		};
		c.prototype.find_selected_version = function(e) {
			if (this.version != null) {
				this.version.off()
			}
			this.version = this.versions.get(e.version.number);
			this.version.on("activate", (function(f) {
				return function(g, i) {
					var j, h;
					j = f.versions.active();
					if (j != null) {
						j.set({
							active: false
						})
					}
					f.version.set({
						active: true
					});
					f.message = "Version " + (g.get("number")) + " has been activated and locked. A new version that you can edit has been created.";
					if (Sierra.can_do("salesadmin")) {
						f.version.set({
							locked: true
						});
						f.changes = false;
						return f.trigger("version:activate")
					}
					if (!(h = f.versions.first()).is_dev()) {
						return f.version.clone()
					}
					return f.set_version(h.get("number"))
				}
			})(this));
			this.version.on("deactivate", (function(f) {
				return function(g, h) {
					f.version.set({
						active: false
					});
					f.message = "Version " + (g.get("number")) + " has been deactivated";
					f.changes = true;
					return f.trigger("version:deactivate")
				}
			})(this));
			this.version.on("clone", (function(f) {
				return function(g, h) {
					f.versions.add(new Sierra.Models.Version(h, {
						update: true
					}));
					return f.set_version(h.number)
				}
			})(this));
			this.version.on("updated", (function(f) {
				return function() {
					return f.trigger("version:updated", f.version)
				}
			})(this));
			return this.version.on("fetch", (function(f) {
				return function() {
					return f.trigger("fetch", f)
				}
			})(this))
		};
		c.prototype.fetch_details = function(e) {
			var g, f;
			f = ["service:loaded", "service:changed", "version:changed"];
			if (this.service != null) {
				this.service.off()
			}
			if (e.service_id != null) {
				this.service = this.services.get(e.service_id);
				if (this.service == null) {
					return Sierra.navigate("configure")
				}
			} else {
				this.service = this.services.default_service()
			}
			this.service.on("updated", (function(h) {
				return function() {
					return h.trigger("service:updated")
				}
			})(this));
			this.trigger("fetch", this);
			g = {};
			if (e.version != null) {
				g.version = e.version
			}
			return this.service.details({
				data: g,
				success: (function(h) {
					return function(i) {
						return h.parse_details(i, f, e.clone, e.success)
					}
				})(this)
			})
		};
		c.prototype.fetch = function(e) {
			FUI.show_page_loading();
			if (this.services_loaded) {
				return this.fetch_details(e)
			} else {
				this.services_loaded = true;
				return this.services.fetch({
					success: (function(f) {
						return function() {
							return f.fetch_details(e)
						}
					})(this)
				})
			}
		};
		c.prototype.fetch_services = function(e) {
			this.services_loaded = true;
			FUI.show_page_loading();
			return this.services.fetch(e)
		};
		c.prototype.fetch_events = function(e) {
			var f;
			if (!((this.service != null) && this.service.get("id"))) {
				return
			}
			if (e == null) {
				e = {}
			}
			f = e.success;
			e.success = (function(g) {
				return function(h) {
					g.trigger("event_log:changed");
					if (f != null) {
						return f()
					}
				}
			})(this);
			return this.event_log.fetch(this.service.get("id"), e)
		};
		c.prototype.get_customer_options = function() {
			return ["can_upload_vcl", "can_configure_wordpress", "can_edit_matches", "can_stream_syslog", "has_improved_logging", "has_openstack_logging", "can_read_public_ip_list", "has_improved_security"]
		};
		c.prototype.save_settings = function(e) {
			var f;
			f = e.success;
			e.success = (function(g) {
				return function() {
					g.trigger("resource:changed");
					if (f != null) {
						return f()
					}
				}
			})(this);
			return this.version.settings(e)
		};
		c.prototype.by_condition = function() {
			var i, j, l, m, k, f, g, n, e, h;
			f = {};
			this.resources.Conditions.each(function(o) {
				return f[o.get("name")] = {
					condition: o.serialize(),
					models: [],
					is_mapped: false
				}
			});
			m = (function() {
				var r, p, q, o;
				q = ["request", "response", "cache"];
				o = [];
				for (r = 0, p = q.length; r < p; r++) {
					n = q[r];
					o.push("" + n + "_condition")
				}
				return o
			})();
			j = this.resources.Conditions;
			h = this.resources;
			for (k in h) {
				i = h[k];
				i.each((function(o) {
					return function(t) {
						var w, v, p, s, u, r, q;
						q = [];
						for (u = 0, r = m.length; u < r; u++) {
							v = m[u];
							s = t.get(v);
							if (!(s && (f[s] != null))) {
								continue
							}
							w = j.find(function(x) {
								return x.get("name") === s
							});
							p = t.serialize();
							p.resource_type = o.resource_type_name[k];
							f[s].models.push(p);
							q.push(f[s].is_mapped = true)
						}
						return q
					}
				})(this))
			}
			e = ["REQUEST", "RESPONSE", "CACHE"];
			return ((function() {
				var o;
				o = [];
				for (g in f) {
					l = f[g];
					o.push(l)
				}
				return o
			})()).sort(function(u, s) {
				var q, p, t, r, o;
				o = [u.condition, s.condition], q = o[0], p = o[1];
				t = e.indexOf(q.type);
				r = e.indexOf(p.type);
				if (t !== r) {
					return t - r
				}
				if (parseInt(q.priority) !== parseInt(p.priority)) {
					return parseInt(q.priority) - parseInt(p.priority)
				}
				return q.name.localeCompare(p.name)
			})
		};
		c.prototype.serialize = function() {
			var j, s, q, t, r, n, f, w, g, o, m, u, e, p, l, i, h;
			p = [
				[],
				[]
			], r = p[0], t = p[1];
			l = this.versions.models;
			for (o = 0, u = l.length; o < u; o++) {
				w = l[o];
				if (w.is_dev() && r.length < this.max_development) {
					r.push(w.serialize())
				}
				if ((w.is_locked() || w.is_active()) && t.length < this.max_deployed) {
					t.push(w.serialize())
				}
			}
			g = {
				all: this.versions.serialize(),
				total: this.versions.size()
			};
			if (r.length > 0) {
				g.development = r
			}
			if (t.length > 0) {
				g.deployed = t
			}
			j = this.versions.active();
			if (j != null) {
				g.active = j.serialize()
			}
			q = {
				service: this.service.serialize(),
				version: this.version.serialize(),
				services: this.services.serialize(),
				versions: g,
				resources: {},
				customer_options: {},
				locked: this.version.is_locked(),
				active: this.version.is_active() || false,
				dev: !this.version.is_locked() && !this.version.is_active(),
				event_log: this.event_log.serialize(),
				changes: this.changes,
				has_active_version: this.has_active_version,
				edit_href: "#configure/service/" + this.service.get("id") + "/version/" + this.version.get("number"),
				by_condition: this.by_condition()
			};
			q.has_conditions = q.by_condition.length > 0;
			if (Sierra.can_do("internal")) {
				q.customer_admin_href = "#admin/" + (this.service.get("customer_id"));
				q.customer_billing_href = "#billing/customer/" + (this.service.get("customer_id"))
			}
			i = this.get_customer_options();
			for (m = 0, e = i.length; m < e; m++) {
				f = i[m];
				if (Sierra.customer.has_option(f)) {
					q.customer_options[f] = true
				}
			}
			h = this.resources;
			for (n in h) {
				s = h[n];
				q.resources[n] = s.serialize()
			}
			if (j != null) {
				q.service.active = true
			}
			q.regular_domains = this.active_resources.Domains.no_wildcards().serialize();
			return q
		};
		return c
	})(Sierra.Model)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Admin = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.initialize = function() {
			var e;
			e = [null, null], this.customer = e[0], this.owner = e[1];
			this.customers = new Sierra.Collections.Customers();
			this.all_users = new Sierra.Collections.SearchUsers();
			this.new_customers = new Sierra.Collections.NewCustomers();
			this.unverified_users = new Sierra.Collections.UnverifiedUsers();
			this.no_service_customers = new Sierra.Collections.NoServiceCustomers();
			this.customer = new Sierra.Models.Customer();
			this.users = this.customer.users;
			this.services = this.customer.services;
			this.limits = new Sierra.Collections.Limits();
			this.partners = new Sierra.Collections.Partners();
			this.section = null;
			this.on_owner_change = (function(f) {
				return function() {
					return f.owner = f.users.get(f.customer.get("owner_id"))
				}
			})(this);
			this.on_name_change = (function(f) {
				return function() {
					return f.customers.trigger("update")
				}
			})(this);
			this.users.on("add", (function(f) {
				return function(g, h) {
					return f.all_users.add(g)
				}
			})(this));
			this.users.on("remove", (function(f) {
				return function(g) {
					return f.all_users.remove(g)
				}
			})(this));
			this.customer.on("change:owner_id", this.on_owner_change);
			return this.customer.on("change:name", this.on_name_change)
		};
		c.prototype.is_customer = function(e) {
			return this.customer.get("id") === e
		};
		c.prototype.set_section = function(e) {
			this.section = e;
			return this.trigger("section:changed", e)
		};
		c.prototype.set_customer = function(f) {
			var e;
			e = "admin/" + f;
			if (this.section != null) {
				e += "/" + this.section
			}
			return Sierra.navigate(e)
		};
		c.prototype.success = function(e, f) {
			this.owner = this.users.get(this.customer.get("owner_id"));
			if (f != null) {
				return f()
			}
		};
		c.prototype.complete = function(e, f) {
			this.trigger("complete");
			if (f != null) {
				return f()
			}
		};
		c.prototype.fetch = function(i, g) {
			var f, e, j, h;
			if (g == null) {
				g = {}
			}
			h = [g.success, g.complete], j = h[0], f = h[1];
			g.success = (function(k) {
				return function() {
					return k.success(i, j)
				}
			})(this);
			g.complete = (function(k) {
				return function() {
					return k.complete(i, f)
				}
			})(this);
			this.trigger("fetch");
			FUI.show_page_loading();
			this.customer.set("id", i);
			this.limits.set_customer_id(i);
			e = [this.customers, this.customer, this.all_users, this.new_customers, this.unverified_users, this.no_service_customers, this.customer.services, this.customer.users, this.limits, this.partners];
			return this.fetch_all(e, g)
		};
		c.prototype.serialize = function() {
			var g, f, e;
			f = this.customer.get("id");
			e = {
				customer: this.customer.serialize(),
				customers: this.customers.serialize(),
				users: this.users.serialize(),
				all_users: this.all_users.serialize(),
				new_customers: this.new_customers.serialize(),
				unverified_users: this.unverified_users.serialize(),
				no_service_customers: this.no_service_customers.serialize(),
				services: this.services.serialize(),
				limits: this.limits.serialize(),
				partners: this.partners.serialize()
			};
			if (this.owner != null) {
				e.customer.owner = this.owner.serialize()
			} else {
				e.customer.owner = null
			}
			g = this.customer.get("billing_contact_id");
			if ((g != null) && (this.users.get(g) != null)) {
				e.customer.billing = this.users.get(g).serialize()
			}
			return e
		};
		return c
	})(Sierra.Model)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Analytics = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.initialize = function() {
			this.loaded = false;
			this.service = null;
			this.services = new Sierra.Collections.Services();
			this.dc = "all";
			return Sierra.Model.prototype.initialize.apply(this, arguments)
		};
		c.prototype.set_service = function(e) {
			if (!(this.services.size() > 0 && this.services.get(e))) {
				return false
			}
			this.service = this.services.get(e);
			this.trigger("service:changed", e);
			return true
		};
		c.prototype.fetch = function(e) {
			this.loaded = true;
			FUI.show_page_loading();
			return this.services.fetch(e)
		};
		c.prototype.serialize = function() {
			var e;
			e = {
				service: this.service.serialize(),
				services: this.services.serialize()
			};
			if (Sierra.can_do("internal") && (this.service != null)) {
				e.customer_admin_href = "#admin/" + (this.service.get("customer_id"));
				e.customer_billing_href = "#billing/customer/" + (this.service.get("customer_id"))
			}
			return e
		};
		return c
	})(Sierra.Model)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Account = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.attrs = {
			customer: "get_customer",
			user: "get_user",
			users: "all_users",
			Invitations: "get_invitations"
		};
		c.prototype.initialize = function() {
			this.user = null;
			this.customer = null;
			this.users = new Sierra.Collections.Users([], {
				customer_only: true
			});
			return this.invitations = new Sierra.Collections.Invitations()
		};
		c.prototype.fetch = function(e) {
			var f;
			f = [Sierra.user, Sierra.customer], this.user = f[0], this.customer = f[1];
			if (Sierra.can_do("superuser")) {
				FUI.show_page_loading();
				return Fastly.fetch_all([this.users, this.invitations], e)
			} else {
				return e.success()
			}
		};
		c.prototype.get_customer = function() {
			return this.customer.serialize()
		};
		c.prototype.get_user = function() {
			return this.user.serialize()
		};
		c.prototype.get_invitations = function() {
			return this.invitations.serialize()
		};
		c.prototype.all_users = function() {
			var f, h, g, e;
			h = this.users.serialize();
			for (g = 0, e = h.length; g < e; g++) {
				f = h[g];
				if (f.id === this.customer.get("owner_id")) {
					f.selected = true
				}
				if (f.id === this.customer.get("billing_contact_id")) {
					f.billing = true
				}
			}
			return h
		};
		return c
	})(Sierra.Model)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.AdminStats = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.default_range = {
			day: {
				from: "four months ago",
				to: "yesterday"
			},
			hour: {
				from: "one week ago",
				to: "yesterday"
			},
			minute: {
				from: "180 minutes ago",
				to: "30 minutes ago"
			}
		};
		c.prototype.initialize = function() {
			this.services = new Sierra.Collections.Services();
			this.services_loaded = false;
			this.service = null;
			this.default_service = null;
			this.service_id = null;
			this.force_reload = false;
			this.type = "global";
			this.by = "day";
			this.from = this.default_range.day.from;
			this.to = this.default_range.day.to;
			this.view = "line";
			this.region = null;
			return this.fields = ["requests"]
		};
		c.prototype.set_time = function(g, f, e) {
			if (g != null) {
				this.from = g
			}
			if (f != null) {
				this.to = f
			}
			if (e != null) {
				this.by = e
			}
			this.force_reload = true;
			return Sierra.navigate(this.get_url())
		};
		c.prototype.set_view = function(e) {
			this.view = e;
			return Sierra.navigate(this.get_url())
		};
		c.prototype.set_service = function(e) {
			this.service_id = e.replace(/[&\/]/, "");
			return Sierra.navigate(this.get_url())
		};
		c.prototype.set_to = function(e) {
			this.to = e.replace(/[&\/]/, "");
			return Sierra.navigate(this.get_url())
		};
		c.prototype.set_from = function(e) {
			this.from = e.replace(/[&\/]/, "");
			return Sierra.navigate(this.get_url())
		};
		c.prototype.set_region = function(e) {
			if (e === "all") {
				this.region = null
			} else {
				this.region = e.replace(/[&\/]/, "")
			}
			this.force_reload = true;
			return Sierra.navigate(this.get_url())
		};
		c.prototype.set_by = function(e) {
			this.by = e.replace(/[&\/]/, "");
			return Sierra.navigate(this.get_url())
		};
		c.prototype.set_fields = function(e) {
			if (!_.isArray(e) || e.length < 1) {
				this.fields = ["requests"]
			} else {
				this.fields = e
			}
			return Sierra.navigate(this.get_url())
		};
		c.prototype.add_field = function(e) {
			if (!((e != null) && e.length > 0)) {
				return
			}
			this.fields.push(e);
			return Sierra.navigate(this.get_url())
		};
		c.prototype.remove_field = function(f) {
			var e;
			if (!((f != null) && f.length > 0)) {
				return
			}
			e = this.fields.indexOf(f);
			if (e >= 0) {
				this.fields.splice(e, 1);
				if (!this.fields.length) {
					this.fields = ["requests"]
				}
			}
			return Sierra.navigate(this.get_url())
		};
		c.prototype.get_url = function() {
			var e;
			e = "admin/stats";
			if (this.type === "service" && (this.service_id != null)) {
				e += "/service/" + this.service_id
			}
			return e + this.options_url()
		};
		c.prototype.options_url = function() {
			var f, g, e, h;
			g = [];
			h = {
				to: this.to,
				from: this.from,
				by: this.by,
				region: this.region,
				fields: this.fields.join(","),
				view: this.view
			};
			for (f in h) {
				e = h[f];
				if (f === "fields" && e === "requests") {
					continue
				}
				if (e != null) {
					g.push("" + f + "=" + e)
				}
			}
			if (g.length) {
				return "/" + (g.join("&"))
			} else {
				return ""
			}
		};
		c.prototype.fetch = function(h) {
			var i, e, g, l, f, j;
			e = (function(k) {
				return function(o) {
					var r, n, s, q, m, p;
					if (o.service_id != null) {
						k.type = "service";
						k.active = new Sierra.ServiceStatsModel(o.service_id);
						k.service = k.services.get(o.service_id);
						if (k.service == null) {
							return k.set_service(k.services.first().get("id"))
						}
						k.service_id = k.service.get("id")
					} else {
						k.type = "global";
						r = o.customer_id ? o.customer_id : Sierra.customer.get("id");
						k.active = new Sierra.AggregateStatsModel(r);
						k.service = null;
						k.service_id = null
					}
					p = ["from", "to", "region", "by", "view"];
					for (q = 0, m = p.length; q < m; q++) {
						n = p[q];
						if (o[n] == null) {
							continue
						}
						k[n] = o[n].replace(/[&\/]/, "")
					}
					if (o.fields != null) {
						k.fields = o.fields.split(/\s*,\s*/)
					}
					s = o.success;
					o.success = function(t) {
						k.trigger("data:loaded");
						if (s != null) {
							return s(t)
						}
					};
					return k.active.fetch(o)
				}
			})(this);
			i = (this.service != null) && (h.service_id == null);
			i || (i = (this.service == null) && (h.service_id != null));
			i || (i = (this.service != null) && (h.service_id != null) && this.service.get("id") !== h.service_id);
			if (this.force_reload) {
				this.force_reload = false;
				i = true
			}
			if (!i) {
				j = ["from", "to", "region", "by"];
				for (l = 0, f = j.length; l < f; l++) {
					g = j[l];
					if (h[g] == null) {
						continue
					}
					if (this[g] !== h[g].replace(/[&\/]/, "")) {
						i = true;
						break
					}
				}
			}
			if (!(i || !this.services_loaded)) {
				if (h.fields != null) {
					this.fields = h.fields.split(/\s*,\s*/)
				}
				if (h.view != null) {
					this.view = h.view
				}
				return h.success()
			}
			FUI.show_page_loading();
			if (this.services_loaded) {
				return e(h)
			}
			return this.fetch_services({
				success: (function(k) {
					return function() {
						return e(h)
					}
				})(this)
			})
		};
		c.prototype.fetch_services = function(e) {
			var f;
			f = e.success;
			e.success = (function(g) {
				return function() {
					g.services_loaded = true;
					g.default_service = g.services.first();
					if (f != null) {
						return f()
					}
				}
			})(this);
			return this.services.fetch(e)
		};
		c.prototype.serialize = function() {
			var e, g, f;
			if (this.all_fields == null) {
				this.all_fields = (function() {
					var k, i, j, h;
					j = Sierra.StatsModel.field_list_order;
					h = [];
					for (k = 0, i = j.length; k < i; k++) {
						f = j[k];
						g = Sierra.StatsModel.field_labels[f];
						e = Sierra.StatsModel.field_colors[f];
						h.push({
							name: f,
							label: g,
							color: e
						})
					}
					return h
				})()
			}
			return {
				type: this.type,
				type_global: this.type === "global",
				type_service: this.type === "service",
				from: this.from,
				to: this.to,
				by: this.by,
				service_id: this.service_id,
				services: this.services.serialize(),
				default_service: this.default_service.serialize(),
				service: this.service != null ? this.service.serialize() : null,
				region: this.region || "all",
				options: this.options_url(),
				all_fields: this.all_fields,
				view: this.view
			}
		};
		return c
	})(Sierra.Model)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.Billing = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.initialize = function() {
			var e;
			Sierra.Model.prototype.initialize.apply(this, arguments);
			this.customer_details = new Sierra.Models.CustomerDetails();
			this.customers = new Sierra.Collections.Customers();
			this.invoice = new Sierra.Models.Invoice();
			this.invoices = new Sierra.Collections.Invoices();
			this.plans = new Sierra.Collections.PricingPlans();
			this.credit_card = new Sierra.Models.CreditCard();
			this.mtd = new Sierra.Models.Invoice();
			this.pricing_extras = new Sierra.Collections.PricingExtras();
			this.plan = null;
			this.print = false;
			e = [null, null], this.month = e[0], this.year = e[1];
			this.on("success", (function(f) {
				return function() {
					return f.parse_details()
				}
			})(this));
			this.credit_card.on("change", (function(f) {
				return function() {
					return f.trigger("credit_card:changed")
				}
			})(this));
			this.credit_card.on("destroyed", (function(f) {
				return function() {
					f.credit_card.clear();
					f.credit_card.set({
						customer_id: f.customer.get("id")
					});
					return f.trigger("credit_card:destroyed")
				}
			})(this));
			return this.invoices.on("change", (function(f) {
				return function() {
					return f.trigger("invoice:change")
				}
			})(this))
		};
		c.prototype.set_customer = function(e) {
			if (!Sierra.can_do("internal")) {
				return
			}
			return Sierra.navigate("billing/customer/" + e)
		};
		c.prototype.check_coupon = function(e) {
			var f, g;
			if (this.customer.get("has_coupon")) {
				f = false;
				g = "You already have a coupon applied."
			} else {
				if ((e != null) && e !== "developer") {
					f = true;
					g = "Enter your coupon code now."
				} else {
					f = false;
					g = "Coupons can only be applied when upgrading to a paid plan from developer."
				}
			}
			return [f, g]
		};
		c.prototype.parse_details = function() {
			if ((this.month != null) && (this.year != null)) {
				this.invoice = this.invoices.get_by_date(this.month, this.year)
			} else {
				this.invoice = this.mtd
			}
			this.customer = this.customer_details.customer;
			this.plan = this.plans.get(this.customer.get("pricing_plan"));
			this.owner = this.customer_details.owner;
			this.billing_contact = this.customer_details.billing_contact;
			if (this.customer_details.credit_card != null) {
				this.credit_card.clear();
				return this.credit_card.set(this.customer_details.credit_card.attributes)
			} else {
				return this.credit_card.set("customer_id", this.customer.get("id"))
			}
		};
		c.prototype.serialize = function() {
			var k, l, p, h, j, m, o, e, f, n, g;
			h = {
				invoices: this.invoices.serialize(),
				plan: this.plan.serialize(),
				plans: this.plans.serialize(this.customer).sort(function(q, i) {
					if (q.label <= i.label) {
						return -1
					} else {
						return 1
					}
				}),
				print: this.print,
				credit_card: this.credit_card.serialize(),
				billing_ref: this.customer.get("billing_ref")
			};
			o = this.customer.get("postal_address");
			if (o != null) {
				e = (_.escape(o)).replace(/\n/g, "<br>");
				h.postal_address_html = new Handlebars.SafeString(e)
			}
			l = (new Date()).getFullYear();
			h.years = (function() {
				var q, i;
				i = [];
				for (j = q = 0; q <= 10; j = ++q) {
					i.push({
						year: l + j
					})
				}
				return i
			})();
			if (this.invoice != null) {
				h.dates = FUI.util.Date.range(this.customer.get("created_at"), this.invoice.get("year"), this.invoice.get("month"))
			} else {
				h.dates = FUI.util.Date.range(this.customer.get("created_at"))
			}
			if (this.invoice != null) {
				h.invoice = this.invoice.serialize()
			}
			if ((h.invoice != null) && (h.invoice.total != null)) {
				h.invoice.total.bandwidth_unit = this.customer.get("pricing_plan") === "percentile" ? "Mbps" : "GB"
			}
			if (this.owner != null) {
				h.owner = this.owner.serialize()
			}
			if (this.billing_contact != null) {
				h.billing_contact = this.billing_contact.serialize()
			}
			if (Sierra.can_do("internal")) {
				h.customer = this.customer.serialize()
			}
			if (Sierra.can_do("internal")) {
				p = this.customers.serialize();
				for (f = 0, n = p.length; f < n; f++) {
					k = p[f];
					if (k.id === this.customer.get("id")) {
						k.selected = true
					}
				}
				_.extend(h, {
					show_customers: true,
					customers: p,
					by_plan: this.customers.by_plan(),
					pricing_extras: this.pricing_extras.serialize()
				})
			}
			m = this.invoices.outstanding();
			if (m.length > 0) {
				h.outstanding_invoices = m;
				h.outstanding = m.length
			}
			if (Sierra.can_do("internal")) {
				h.admin = true
			}
			h.overview_href = "#billing";
			if (Sierra.can_do("internal")) {
				h.overview_href += "/customer/" + this.customer.get("id")
			}
			g = this.check_coupon(), h.coupon_enabled = g[0], h.coupon_message = g[1];
			return h
		};
		c.prototype.fetch = function(g, e) {
			var h, f;
			if (e == null) {
				e = {}
			}
			f = [e.month, e.year], this.month = f[0], this.year = f[1];
			this.mtd.set("customer_id", g);
			this.pricing_extras.set_customer_id(g);
			this.customer_details.set({
				id: g
			});
			this.invoices.set_customer_id(g);
			h = [this.mtd, this.pricing_extras, this.customer_details, this.invoices];
			if (this.plan == null) {
				h.push(this.plans)
			}
			if (Sierra.can_do("internal")) {
				h.push(this.customers)
			}
			FUI.show_page_loading();
			return this.fetch_all(h, e, ["invoice:changed"])
		};
		return c
	})(Sierra.Model)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.StatsModel = (function() {
		function c() {
			var d;
			this.set_aggregate();
			if ((d = Sierra.env) === "development" || d === "staging") {
				this.headers = {
					"Fastly-Key": Sierra.customer.get("raw_api_key")
				};
				this.endpoint = "https://api.fastly.com"
			} else {
				this.headers = {};
				this.endpoint = Sierra.api_uri
			}
		}
		c.prototype.set_aggregate = function(d) {
			this.url = "" + this.endpoint + "/stats/aggregate";
			if ((d != null) && Sierra.can_do("internal")) {
				return this.url += "/customer/" + d
			}
		};
		c.prototype.set_by_service = function(d) {
			return this.url = "" + this.endpoint + "/stats/service/" + d
		};
		c.prototype.now = function() {
			var e;
			e = new Date();
			return Date.UTC(e.getFullYear(), e.getMonth(), e.getDate(), e.getHours(), e.getMinutes()) / 1000
		};
		c.prototype.max = function(d) {
			return _.max(_.map(this.data, function(e) {
				return e[d]
			}))
		};
		c.prototype.min = function(d) {
			return _.min(_.map(this.data, function(e) {
				return e[d]
			}))
		};
		c.prototype.avg = function(j) {
			var g, k, i, f, h, e;
			i = _.map(this.data, function(d) {
				return d[j]
			});
			f = 0;
			g = 0;
			for (h = 0, e = i.length; h < e; h++) {
				k = i[h];
				if (!_.isFinite(k)) {
					continue
				}
				f += parseFloat(k);
				g++
			}
			if (g === 0) {
				return 0
			} else {
				return f / g
			}
		};
		c.prototype.nintyfifth = function(f) {
			var e, d;
			d = _.map(this.data, function(g) {
				return parseFloat(g[f])
			});
			e = _.filter(d, function(g) {
				return _.isFinite(g)
			});
			e.sort();
			return e[(0.95 * e.length) | 0]
		};
		c.prototype.total = function(i) {
			var j, h, f, g, e;
			h = _.map(this.data, function(d) {
				return d[i]
			});
			f = 0;
			for (g = 0, e = h.length; g < e; g++) {
				j = h[g];
				if (!_.isFinite(j)) {
					continue
				}
				f += parseFloat(j)
			}
			return f
		};
		c.prototype.sort_fields = function(d) {
			if (d == null) {
				d = []
			}
			return d.sort(function(g, f) {
				var e, h;
				e = Sierra.StatsModel.field_sort_order.indexOf(g);
				h = Sierra.StatsModel.field_sort_order.indexOf(f);
				if (e < h) {
					return 1
				} else {
					return -1
				}
			})
		};
		c.prototype.range = function(e, d) {
			var f;
			if (d == null) {
				d = false
			}
			if (!d) {
				return [0, _.max((function() {
					var i, h, g;
					g = [];
					for (i = 0, h = e.length; i < h; i++) {
						f = e[i];
						g.push(_.max(_.map(this.data, function(j) {
							return parseFloat(j[f])
						})))
					}
					return g
				}).call(this))]
			}
			return [0, _.max(_.map(this.data, function(g) {
				return _.reduce((function() {
					var j, i, h;
					h = [];
					for (j = 0, i = e.length; j < i; j++) {
						f = e[j];
						h.push(parseFloat(g[f]))
					}
					return h
				})(), function(i, h) {
					return i + h
				})
			}))]
		};
		c.prototype.epoch_data = function(d) {
			var h, f, g, j, e, k;
			if (d == null) {
				d = []
			}
			if (!((d != null) && d.length)) {
				return []
			}
			return g = (function() {
				var m, l, i;
				i = [];
				for (m = 0, l = d.length; m < l; m++) {
					f = d[m];
					e = (function() {
						var o, n;
						o = this.data;
						n = [];
						for (h in o) {
							j = o[h];
							k = this.data[h][f];
							if (_.isString(k)) {
								k = parseFloat(k)
							}
							n.push({
								x: j.start_time | 0,
								y: k
							})
						}
						return n
					}).call(this);
					i.push({
						label: f,
						values: e
					})
				}
				return i
			}).call(this)
		};
		c.prototype.values = function(h) {
			var e, f, k, d, g, n, j, m, l;
			if (h == null) {
				h = []
			}
			if (!((h != null) && h.length)) {
				return []
			}
			this.sort_fields();
			return g = (function() {
				var p, o, i;
				i = [];
				for (p = 0, o = h.length; p < o; p++) {
					d = h[p];
					k = Sierra.StatsModel.field_labels[d];
					e = Sierra.StatsModel.field_colors[d];
					l = (function() {
						var r, q;
						r = this.data;
						q = [];
						for (f in r) {
							n = r[f];
							m = this.data[f][d];
							if (_.isString(m)) {
								m = parseFloat(m)
							}
							j = FUI.date_to_utc(new Date(n.start_time * 1000));
							q.push({
								x: f,
								y: parseFloat(this.data[f][d]),
								color: e,
								label: k,
								date: j
							})
						}
						return q
					}).call(this);
					i.push({
						name: d,
						label: k,
						color: e,
						values: l
					})
				}
				return i
			}).call(this)
		};
		c.prototype.values_at = function(f, h) {
			var e, k, d, g, m, j, l;
			if (h == null) {
				h = []
			}
			if (!((h != null) && h.length && (this.data != null) && (this.data[f] != null))) {
				return []
			}
			this.sort_fields();
			return g = (function() {
				var o, n, i;
				i = [];
				for (o = 0, n = h.length; o < n; o++) {
					d = h[o];
					k = Sierra.StatsModel.field_labels[d];
					e = Sierra.StatsModel.field_colors[d];
					m = this.data[f];
					l = this.data[f][d];
					if (_.isString(l)) {
						l = parseFloat(l)
					}
					j = FUI.date_to_utc(new Date(m.start_time * 1000));
					i.push({
						x: f,
						y: parseFloat(this.data[f][d]),
						color: e,
						label: k,
						date: j
					})
				}
				return i
			}).call(this)
		};
		c.prototype.fetch = function(f) {
			var e, i, j, h, d, g;
			if (f == null) {
				f = {}
			}
			if ((f.from != null) && (f.to != null)) {
				if (f.from >= this.start_timestamp && f.to <= this.end_timestamp) {
					return
				}
			}
			j = f.success;
			f.success = (function(k) {
				return function(l) {
					k.success(l);
					if (j != null) {
						return j(l)
					}
				}
			})(this);
			f.type = "GET";
			i = [];
			g = ["from", "to", "region", "by"];
			for (h = 0, d = g.length; h < d; h++) {
				e = g[h];
				if (f[e]) {
					i.push("" + e + "=" + (encodeURIComponent(f[e])))
				}
			}
			this.by = f.by != null ? f.by : "day";
			f.dontRewriteAPI = true;
			f.headers = this.headers;
			f.url = "" + this.url + "?" + (i.join("&"));
			return Fastly.ajax(f)
		};
		c.prototype.success = function(e) {
			var l, j, m, g, k, h, f, d;
			if (this.data) {
				h = e.data;
				for (g = 0, k = h.length; g < k; g++) {
					m = h[g];
					if (!(m.start_time >= this.start_timestamp && m.start_time <= this.end_timestamp)) {
						this.data.push(m)
					}
				}
				this.data.sort(function(n, i) {
					if (n.start_time < i.start_time) {
						return -1
					} else {
						return 1
					}
				})
			} else {
				this.data = e.data
			}
			if ((this.data != null) && this.data.length) {
				this.start_timestamp = this.data[0].start_time;
				this.end_timestamp = this.data[this.data.length - 1].start_time
			}
			f = this.data;
			d = [];
			for (j in f) {
				l = f[j];
				this.data[j]["other_5xx"] = parseFloat(l.status_5xx) - parseFloat(l.status_503);
				this.data[j]["other_3xx"] = parseFloat(l.status_3xx) - (parseFloat(l.status_301) + parseFloat(l.status_302) + parseFloat(l.status_304));
				if (parseFloat(l.miss) === 0) {
					this.data[j]["origin_latency"] = 0
				} else {
					this.data[j]["origin_latency"] = 1000 * parseFloat(l.miss_time) / parseFloat(l.miss)
				}
				if (parseFloat(l.requests) === 0) {
					d.push(this.data[j]["cache_coverage"] = this.data[j]["error_ratio"] = 0)
				} else {
					this.data[j]["cache_coverage"] = (parseFloat(l.requests) - parseFloat(l.pass) - parseFloat(l.uncacheable)) / parseFloat(l.requests);
					d.push(this.data[j]["error_ratio"] = (parseFloat(l.status_5xx) + parseFloat(l.status_4xx)) / parseFloat(l.requests))
				}
			}
			return d
		};
		return c
	})();
	Sierra.StatsModel.field_sort_order = ["uncacheable", "errors", "pass", "pipe", "miss", "hits", "requests", "status_1xx", "status_2xx", "status_3xx", "status_4xx", "status_5xx", "status_200", "status_204", "status_301", "status_302", "status_304", "status_503", "hits_time", "miss_time", "bandwidth", "body_size", "header_size", "hit_ratio"];
	Sierra.StatsModel.field_list_order = ["requests", "hits", "miss", "pass", "errors", "hits_time", "miss_time", "body_size", "header_size", "hit_ratio", "status_1xx", "status_2xx", "status_3xx", "status_4xx", "status_5xx", "status_200", "status_204", "status_301", "status_302", "status_304", "status_503"];
	Sierra.StatsModel.field_colors = {
		bandwidth: "#494b89",
		body_size: "#6264b3",
		errors: "#e6717b",
		header_size: "#acaeee",
		hit_ratio: "#eeaee6",
		hits: "#738949",
		hits_time: "#9cb262",
		miss: "#cdae49",
		miss_time: "#f7ca62",
		pass: "#8b5183",
		pipe: "#de7dcd",
		requests: "#494b89",
		status_1xx: "#9c7d41",
		status_2xx: "#738949",
		status_3xx: "#cdae49",
		status_4xx: "#bd595a",
		status_5xx: "#e6717b",
		status_200: "#738949",
		status_204: "#9cb262",
		status_301: "#cdae49",
		status_302: "#f7ca62",
		status_304: "#f7dba4",
		status_503: "#e6717b",
		uncacheable: "#eeaee6"
	};
	Sierra.StatsModel.field_labels = {
		bandwidth: "Bandwidth",
		body_size: "Body Size",
		errors: "Errors",
		header_size: "Header Size",
		hit_ratio: "Hit Ratio",
		hits: "Hits",
		hits_time: "Hit Time",
		miss: "Misses",
		miss_time: "Miss Time",
		pass: "Passes",
		pipe: "Pipes",
		requests: "Requests",
		status_1xx: "1XX",
		status_2xx: "2XX",
		status_3xx: "3XX",
		status_4xx: "4XX",
		status_5xx: "5XX",
		status_200: "200",
		status_204: "204",
		status_301: "301",
		status_302: "302",
		status_304: "304",
		status_503: "503",
		uncacheable: "Uncachable"
	};
	Sierra.AggregateStatsModel = (function(c) {
		b(d, c);

		function d(f, e) {
			if (e == null) {
				e = "day"
			}
			d.__super__.constructor.call(this, e);
			this.set_aggregate(f)
		}
		return d
	})(Sierra.StatsModel);
	Sierra.ServiceStatsModel = (function(c) {
		b(d, c);

		function d(e, f) {
			if (f == null) {
				f = "day"
			}
			d.__super__.constructor.call(this, f);
			this.set_by_service(e)
		}
		return d
	})(Sierra.StatsModel)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.PasswordReset = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.reset = function(e) {
			return Fastly.post("/user/" + encodeURIComponent(this.get("user")) + "/password/reset/" + this.get("hash") + "/" + this.get("time") + "/" + this.get("rand"), {}, e)
		};
		return d
	})(Sierra.Model)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Models.CreditCard = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.attrs = {
			card_class: "card_class",
			number_hint: "number_hint",
			is_autopay: "is_autopay"
		};
		c.prototype.url = function() {
			return "/customer/" + (this.get("customer_id")) + "/credit_card"
		};
		c.prototype.isNew = function() {
			return this.get("details") == null
		};
		c.prototype.is_autopay = function() {
			if (this.get("details") == null) {
				return false
			}
			return (this.get("details").autopay | 0) === 1
		};
		c.prototype.card_class = function() {
			if (this.isNew()) {
				return "other"
			}
			switch (this.get("details").type) {
			case "Visa":
				return "visa";
			case "MasterCard":
				return "mastercard";
			case "American Express":
				return "amex";
			default:
				return "other"
			}
		};
		c.prototype.number_hint = function() {
			var f, e, g;
			if (this.isNew()) {
				return null
			}
			g = [this.get("details").type, this.get("details").last_four], e = g[0], f = g[1];
			switch (e) {
			case "Visa":
			case "MasterCard":
			case "JCB":
				return "**** **** **** " + f;
			case "American Express":
				return "**** ****** *" + f;
			case "Diners Club":
				return "**** ****** " + f;
			default:
				return "**** **** **** " + f
			}
		};
		c.prototype.save = function(f, g) {
			var e;
			if (g == null) {
				g = {}
			}
			e = {
				number: f.number,
				cvc: f.cvc,
				exp_month: f.exp_month,
				exp_year: f.exp_year
			};
			return Stripe.createToken(e, (function(h) {
				return function(i, j) {
					if (j.error) {
						if (g.error != null) {
							g.error(h, {
								responseText: '{"msg":"' + j.error.message + '"}'
							})
						}
						if (g.complete != null) {
							return g.complete()
						}
					} else {
						return Sierra.Model.prototype.save.call(h, {
							cc_token: j.id,
							autopay: f.autopay,
							limit: f.limit
						}, g)
					}
				}
			})(this))
		};
		return c
	})(Sierra.Model)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Router404 = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.initialize = function() {
			return this.route(/.*/, "_404")
		};
		d.prototype._404 = function() {
			return FUI.render(new Sierra.View404)
		};
		return d
	})(Sierra.Router)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Routers.Account = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.authorize = true;
		c.prototype.view = "Account";
		c.prototype.layout_view = "Page";
		c.prototype.view_el = "#account";
		c.prototype.routes = {
			account: "account",
			"account/password": "password",
			settings: "route_to_password",
			"settings/password": "route_to_password",
			"account/confirmation_used": "confirmation_used",
			"account/security": "security",
			"account/security/2fa": "security_2fa"
		};
		c.prototype.initialize = function() {
			this.model = new Sierra.Models.Account();
			return Sierra.Router.prototype.initialize.apply(this, arguments)
		};
		c.prototype.account = function() {
			if (this.page == null) {
				this.page = new Sierra.Views.Account.Page({
					model: this.model
				})
			}
			return this.model.fetch({
				success: (function(e) {
					return function() {
						return FUI.render(e.page)
					}
				})(this)
			})
		};
		c.prototype.route_to_password = function() {
			return Sierra.navigate("account/password")
		};
		c.prototype.password = function() {
			if (this.password_page == null) {
				this.password_page = new Sierra.Views.Account.PasswordPage()
			}
			return FUI.render(this.password_page)
		};
		c.prototype.confirmation_used = function() {
			return FUI.render(new Sierra.Views.Account.ConfirmationUsed())
		};
		c.prototype.security = function() {
			FUI.show_page_loading();
			if (this.overview_page == null) {
				this.overview_page = new Sierra.Views.Account.Security.Overview({
					model: this.model
				})
			}
			return this.model.fetch({
				success: (function(e) {
					return function() {
						return FUI.render(e.overview_page)
					}
				})(this)
			})
		};
		c.prototype.security_2fa = function() {
			FUI.show_page_loading();
			if (this.setup_page == null) {
				this.setup_page = new Sierra.Views.Account.Security.TwoFactor({
					model: this.model
				})
			}
			return this.model.fetch({
				success: (function(e) {
					return function() {
						return FUI.render(e.setup_page)
					}
				})(this)
			})
		};
		return c
	})(Sierra.Router)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Routers.Admin = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.authorize = true;
		c.prototype.view = "Account";
		c.prototype.view_el = "#account";
		c.prototype.routes = {
			admin: "admin",
			"admin/:customer_id": "admin",
			"admin/:customer_id/:section": "admin"
		};
		c.prototype.initialize = function() {
			this.model = new Sierra.Models.Admin();
			return Sierra.Router.prototype.initialize.apply(this, arguments)
		};
		c.prototype.admin = function(f, e) {
			if (f == null) {
				f = Sierra.customer.get("id")
			}
			if (this.page == null) {
				this.page = new Sierra.Views.Admin({
					model: this.model
				})
			}
			if ((e != null) && this.model.is_customer(f)) {
				return this.model.set_section(e)
			}
			return this.model.fetch(f, {
				success: (function(g) {
					return function() {
						FUI.render(g.page);
						if (e == null) {
							e = "users"
						}
						return g.model.set_section(e)
					}
				})(this)
			})
		};
		return c
	})(Sierra.Router)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Routers.AdminStats = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.authorize = true;
		c.prototype.view = "Stats";
		c.prototype.view_el = "#stats";
		c.prototype.routes = {
			"admin/stats": "stats",
			"admin/stats/:params": "stats",
			"admin/stats/service/:service_id": "stats_by_service",
			"admin/stats/service/:service_id/:params": "stats_by_service",
			"admin/stats/customer/:customer_id": "stats_by_customer",
			"admin/stats/customer/:customer_id/:params": "stats_by_customer"
		};
		c.prototype.initialize = function() {
			window.sm = this.model = new Sierra.Models.AdminStats();
			return Sierra.Router.prototype.initialize.apply(this, arguments)
		};
		c.prototype.get_page = function() {
			return this.page != null ? this.page : this.page = new Sierra.Views.AdminStats.Page({
				model: this.model
			})
		};
		c.prototype.fetch_and_render = function(g, o) {
			var h, l, e, n, i, m, j, f;
			if (o == null) {
				o = {}
			}
			if (g != null) {
				j = g.split("&");
				for (i = 0, m = j.length; i < m; i++) {
					e = j[i];
					l = e.match(/([^=]+)=([^=]+)/);
					if (l == null) {
						continue
					}
					f = l, l = f[0], h = f[1], n = f[2];
					o[h] = n
				}
			}
			o.success = (function(k) {
				return function() {
					return FUI.render(k.get_page())
				}
			})(this);
			return this.model.fetch(o)
		};
		c.prototype.stats = function(e) {
			return this.fetch_and_render(e)
		};
		c.prototype.stats_by_service = function(e, f) {
			return this.fetch_and_render(f, {
				service_id: e
			})
		};
		c.prototype.stats_by_customer = function(e, f) {
			return this.fetch_and_render(f, {
				customer_id: e
			})
		};
		return c
	})(Sierra.Router)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Routers.Analytics = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.authorize = true;
		c.prototype.routes = {
			analytics: "find_default_service",
			"analytics/:id": "analytics",
			demo: "demo",
			fluent: "fluent",
			s3: "s3",
			hud: "redirect"
		};
		c.prototype.initialize = function() {
			this.model = new Sierra.Models.Analytics();
			return Sierra.Router.prototype.initialize.apply(this, arguments)
		};
		c.prototype.redirect = function() {
			return Sierra.navigate("analytics")
		};
		c.prototype.find_default_service = function() {
			return this.model.fetch({
				success: (function(e) {
					return function() {
						return e.set_default()
					}
				})(this)
			})
		};
		c.prototype.set_default = function() {
			var e, f;
			e = this.model.services.serialize()[0];
			if (e == null) {
				return Sierra.navigate("quickstart")
			}
			Sierra.last_service = f = Sierra.last_service || e.id;
			return Sierra.navigate("analytics/" + f)
		};
		c.prototype.render = function() {
			if (this.page == null) {
				this.page = new Sierra.Views.Analytics({
					model: this.model
				})
			}
			return FUI.render(this.page)
		};
		c.prototype.analytics = function(e) {
			if (this.model.set_service(e)) {
				Sierra.last_service = e;
				return this.render()
			}
			FUI.show_page_loading();
			return this.model.fetch({
				success: (function(f) {
					return function() {
						if (f.model.set_service(e)) {
							Sierra.last_service = e;
							return f.render()
						}
						return f.set_default()
					}
				})(this)
			})
		};
		c.prototype.demo = function() {
			return FUI.render((this.demo_view != null ? this.demo_view : this.demo_view = new Sierra.Views.AnalyticsDemo()))
		};
		c.prototype.fluent = function() {
			return FUI.render((this.demo_view != null ? this.demo_view : this.demo_view = new Sierra.Views.AnalyticsDemoFluent2014()))
		};
		c.prototype.s3 = function() {
			return FUI.render((this.s3_view != null ? this.s3_view : this.s3_view = new Sierra.Views.S3()))
		};
		return c
	})(Sierra.Router)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Routers.Auth = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.authorize = false;
		c.prototype.view = "Auth";
		c.prototype.routes = {
			login: "login",
			"login?*querystring": "login",
			signup: "signup",
			thanks: "thanks",
			password_reset: "request_reset_password",
			"user/:user/password/reset/:hash/:time/:rand": "reset_password",
			"invitation/accept/:code": "accept_invitation",
			authenticate: "two_factor_login",
			recovery: "two_factor_recovery_code_login"
		};
		c.prototype.parseQueryString = function(k) {
			var j, h, f, i, g, e;
			if (!_.isString(k)) {
				return
			}
			k = k.substring(k.indexOf("?") + 1);
			j = {};
			f = decodeURI(k).split(/&/g);
			for (g = 0, e = f.length; g < e; g++) {
				i = f[g];
				h = i.split("=");
				if (h.length >= 1) {
					i = void 0;
					if (h.length === 2) {
						i = h[1]
					}
					j[h[0]] = i
				}
			}
			return j
		};
		c.prototype.initialize = function() {
			Fastly.success("/login", (function(e) {
				return function() {
					FUI.app_loading();
					if ((e.model.return_to != null) && e.model.return_to !== "") {
						console.log("returning to: " + e.model.return_to);
						return Sierra.navigate(e.model.return_to)
					} else {
						return Sierra.land()
					}
				}
			})(this));
			this.model = new Sierra.Models.Auth();
			return this.views = {}
		};
		c.prototype.render_page = function(f, e) {
			if (e == null) {
				e = true
			}
			if ((Sierra.user != null) && e) {
				return Sierra.navigate("analytics")
			}
			return FUI.render(f)
		};
		c.prototype.login = function(e) {
			var g, f;
			if (e == null) {
				e = ""
			}
			g = this.parseQueryString(e);
			if (g && g["return"]) {
				this.model.return_to = g["return"]
			}
			if ((f = this.views).login == null) {
				f.login = new Sierra.Views.Auth.Login({
					model: this.model
				})
			}
			return this.render_page(this.views.login)
		};
		c.prototype.two_factor_login = function() {
			var e;
			if ((e = this.views).two_factor_login == null) {
				e.two_factor_login = new Sierra.Views.Auth.TwoFactorLogin
			}
			return this.render_page(this.views.two_factor_login, false)
		};
		c.prototype.two_factor_recovery_code_login = function() {
			var e;
			if ((e = this.views).two_factor_recovery_code_login == null) {
				e.two_factor_recovery_code_login = new Sierra.Views.Auth.TwoFactorRecoveryCodeLogin
			}
			return this.render_page(this.views.two_factor_recovery_code_login, false)
		};
		c.prototype.signup = function() {
			var e;
			if (Sierra.env !== "production") {
				if ((e = this.views).signup == null) {
					e.signup = new Sierra.Views.Auth.SignUp({
						model: this.model
					})
				}
				return this.model.fetch({
					success: (function(f) {
						return function() {
							return f.render_page(f.views.signup)
						}
					})(this)
				})
			} else {
				return window.location = "https://www.fastly.com/signup"
			}
		};
		c.prototype.thanks = function() {
			var e;
			if ((e = this.views).thanks == null) {
				e.thanks = new Sierra.Views.Auth.ThankYou({
					model: this.model
				})
			}
			return this.render_page(this.views.thanks)
		};
		c.prototype.request_reset_password = function() {
			var e;
			if ((e = this.views).request_reset == null) {
				e.request_reset = new Sierra.Views.Auth.RequestResetPassword({
					model: this.model
				})
			}
			return this.render_page(this.views.request_reset, false)
		};
		c.prototype.reset_password = function(e, i, h, g) {
			var f;
			this.model.set_password_reset({
				user: e,
				hash: i,
				time: h,
				rand: g
			});
			if ((f = this.views).reset == null) {
				f.reset = new Sierra.Views.Auth.ResetPassword({
					model: this.model
				})
			}
			return this.render_page(this.views.reset, false)
		};
		c.prototype.accept_invitation = function(f) {
			var e;
			this.model.set_invitation_code(f);
			if ((e = this.views).accept == null) {
				e.accept = new Sierra.Views.Auth.AcceptInvitation({
					model: this.model
				})
			}
			return this.render_page(this.views.accept)
		};
		return c
	})(Sierra.Router)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Routers.Billing = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.authorize = {
			roles: ["billing", "internal", "superuser", "salesadmin"]
		};
		c.prototype.routes = {
			billing: "find_default_customer",
			"billing/customer/:customer_id": "overview",
			"billing/customer/:customer_id/month_to_date": "billing_month_to_date",
			"billing/customer/:customer_id/year/:year/month/:month": "billing_by_month"
		};
		c.prototype.initialize = function() {
			this.model = new Sierra.Models.Billing();
			return Sierra.Router.prototype.initialize.apply(this, arguments)
		};
		c.prototype.find_default_customer = function() {
			if (Sierra.last_billing_customer_id) {
				return Sierra.navigate("billing/customer/" + Sierra.last_billing_customer_id)
			} else {
				return Sierra.navigate("billing/customer/" + Sierra.customer.id)
			}
		};
		c.prototype.fetch = function(g, e, f) {
			if (f == null) {
				f = {}
			}
			return this.model.fetch(g, _.defaults(f, {
				success: (function(h) {
					return function() {
						Sierra.last_billing_customer_id = g;
						FUI.render((h.page != null ? h.page : h.page = new Sierra.Views.Billing({
							model: h.model
						})));
						return h.page.set_view(e)
					}
				})(this),
				error: (function(h) {
					return function(i, j) {
						if (j.status === 404) {
							return Sierra.navigate("billing")
						}
					}
				})(this)
			}))
		};
		c.prototype.overview = function(e) {
			return this.fetch(e, "overview")
		};
		c.prototype.billing_month_to_date = function(e) {
			return this.fetch(e, "invoice")
		};
		c.prototype.billing_by_month = function(g, e, f) {
			return this.fetch(g, "invoice", {
				year: e,
				month: f
			})
		};
		return c
	})(Sierra.Router)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Routers.Configure = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.authorize = {
			roles: ["engineer", "superuser", "internal", "salesadmin"]
		};
		c.prototype.routes = {
			configure: "find_default_service",
			"configure/service": "find_default_service",
			"configure/service/:service": "overview",
			"configure/service/:service/version/:version": "editor",
			"configure/service/:service/version/:version/:section": "editor",
			"configure/service/:service/diff": "diff",
			"configure/service/:service/diff/:version1,:version2": "diff_with_parameters",
			"configure/service/:service/vcl/:version": "vcl"
		};
		c.prototype.vcl = function(f, e) {
			return this.fetch({
				service_id: f,
				version: e,
				clone: true,
				success: (function(g) {
					return function() {
						var h;
						h = g.model.resource_options();
						return (new Sierra.Models.GeneratedVcl(h)).content({
							success: function(i) {
								var j;
								j = i.content.replace(/<pre>\s*/, "<pre>");
								return FUI.render(new Sierra.Views.Configure.Vcl(new Handlebars.SafeString(j), h))
							},
							error: function(k) {
								var i, j;
								i = JSON.parse(k.responseText).detail;
								if (i != null) {
									j = '<p class="red">' + i + "</p>"
								} else {
									j = '<p class="red">An error occurred while fetching the generated VCL.</p>'
								}
								return FUI.render(new Sierra.Views.Configure.Vcl(new Handlebars.SafeString(j), h))
							}
						})
					}
				})(this)
			})
		};
		c.prototype.diff = function(e) {
			return this.fetch({
				service_id: e,
				clone: true,
				success: (function(f) {
					return function() {
						return Sierra.Views.Configure.Diff.decide_which_versions(f.model)
					}
				})(this)
			})
		};
		c.prototype.diff_with_parameters = function(f, e, g) {
			return this.fetch({
				service_id: f,
				clone: true,
				success: (function(h) {
					return function() {
						return h.model.service.diff(e, g, {
							success: function(i) {
								return FUI.render(new Sierra.Views.Configure.Diff(h.model, e, g, i.diff))
							}
						})
					}
				})(this)
			})
		};
		c.prototype.initialize = function() {
			this.model = new Sierra.Models.Configure();
			this.views = {};
			return Sierra.Router.prototype.initialize.apply(this, arguments)
		};
		c.prototype.fetch = function(e) {
			var f;
			f = e.success;
			e.success = (function(g) {
				return function() {
					Sierra.last_service = e.service_id;
					if (f != null) {
						return f.apply(g, arguments)
					}
				}
			})(this);
			return this.model.fetch(_.defaults(e, {
				error: (function(g) {
					return function(h, i) {
						Sierra.last_service = null;
						if (i.status === 404) {
							return Sierra.navigate("configure")
						}
					}
				})(this)
			}))
		};
		c.prototype.find_default_service = function() {
			return this.model.fetch_services({
				success: (function(e) {
					return function() {
						var f;
						if (!(e.model.services.size() > 0)) {
							return Sierra.navigate("quickstart")
						}
						f = e.model.services.first().get("id");
						if (e.model.services.size() === 1) {
							Sierra.last_service = f
						} else {
							Sierra.last_service = Sierra.last_service || f
						}
						return Sierra.navigate("configure/service/" + Sierra.last_service)
					}
				})(this)
			})
		};
		c.prototype.overview = function(e) {
			var f;
			if ((f = this.views).overview == null) {
				f.overview = new Sierra.Views.Configure.Overview({
					model: this.model
				})
			}
			return this.fetch({
				service_id: e,
				clone: true,
				success: (function(g) {
					return function() {
						return FUI.render(g.views.overview)
					}
				})(this)
			})
		};
		c.prototype.editor = function(f, e, h) {
			var g;
			if ((g = this.views).editor == null) {
				g.editor = new Sierra.Views.Configure.Editor({
					model: this.model
				})
			}
			if ((h != null) && this.model.is_version(f, e)) {
				FUI.render(this.views.editor);
				return this.model.set_section(h)
			} else {
				return this.fetch({
					service_id: f,
					version: e,
					clone: false,
					success: (function(i) {
						return function() {
							FUI.render(i.views.editor);
							return i.model.set_section(h)
						}
					})(this)
				})
			}
		};
		return c
	})(Sierra.Router)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Routers.Stats = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.authorize = {
			include: function() {
				return Sierra.customer.has_option("has_historical_stats")
			}
		};
		d.prototype.routes = {
			stats: "stats_by_last_service",
			"stats/:params": "stats_by_last_service",
			"stats/service/:service_id": "stats_by_service",
			"stats/service/:service_id/:params": "stats_by_service"
		};
		d.prototype.initialize = function() {
			window.sm = this.model = new Sierra.Models.Stats();
			return Sierra.Router.prototype.initialize.apply(this, arguments)
		};
		d.prototype.fetch_and_render = function(g, p) {
			var h, l, e, o, n, i, m, j, f;
			if (p == null) {
				p = {}
			}
			if (g != null) {
				j = g.split("&");
				for (i = 0, m = j.length; i < m; i++) {
					e = j[i];
					l = e.match(/([^=]+)=([^=]+)/);
					if (l == null) {
						continue
					}
					f = l, l = f[0], h = f[1], n = f[2];
					p[h] = n
				}
			}
			o = p.success;
			p.success = (function(k) {
				return function() {
					if (k.page == null) {
						k.page = new Sierra.Views.Stats.Page({
							model: k.model
						})
					}
					if (!$("#historical_stats").size()) {
						FUI.render(k.page)
					} else {
						k.model.trigger("update");
						FUI.hide_page_loading()
					}
					if (o != null) {
						return o.apply(k, arguments)
					}
				}
			})(this);
			return this.model.fetch(p)
		};
		d.prototype.stats_by_last_service = function(f) {
			var e;
			if (Sierra.last_service != null) {
				e = "stats/service/" + Sierra.last_service;
				if (f != null) {
					e += "/" + f
				}
				return Sierra.navigate(e)
			} else {
				return this.fetch_and_render(f)
			}
		};
		d.prototype.stats_by_service = function(e, f) {
			return this.fetch_and_render(f, {
				service_id: e
			})
		};
		return d
	})(Sierra.Router)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Routers.Stream = (function(c) {
		b(d, c);

		function d() {
			return d.__super__.constructor.apply(this, arguments)
		}
		d.prototype.authorize = {
			roles: "engineer",
			include: function() {
				return Sierra.customer.has_option("has_streaming")
			}
		};
		d.prototype.routes = {
			streaming: "overview",
			"streaming/:id": "edit",
			"streaming/:id/stats": "stats"
		};
		d.prototype.initialize = function() {
			Sierra.Router.prototype.initialize.apply(this, arguments);
			this.model = new Sierra.Models.Streaming();
			return this.views = {}
		};
		d.prototype.overview = function() {
			var e;
			if ((e = this.views).overview == null) {
				e.overview = new Sierra.Views.Stream.Overview({
					model: this.model
				})
			}
			return this.model.fetch({
				success: (function(f) {
					return function() {
						return FUI.render(f.views.overview)
					}
				})(this)
			})
		};
		d.prototype.edit = function(f) {
			var e;
			if ((e = this.views).editor == null) {
				e.editor = new Sierra.Views.Stream.Editor({
					model: this.model
				})
			}
			return this.model.fetch({
				success: (function(g) {
					return function() {
						return FUI.render(g.views.editor)
					}
				})(this)
			})
		};
		d.prototype.stats = function(f) {
			var e;
			if ((e = this.views).stats == null) {
				e.stats = new Sierra.Views.Stream.Stats({
					model: this.model
				})
			}
			return this.model.fetch({
				success: (function(g) {
					return function() {
						return FUI.render(g.views.stats)
					}
				})(this)
			})
		};
		return d
	})(Sierra.Router)
}).call(this);
(function() {
	var a = {}.hasOwnProperty,
		b = function(f, d) {
			for (var c in d) {
				if (a.call(d, c)) {
					f[c] = d[c]
				}
			}
			function e() {
				this.constructor = f
			}
			e.prototype = d.prototype;
			f.prototype = new e();
			f.__super__ = d.prototype;
			return f
		};
	Sierra.Routers.Wizard = (function(d) {
		b(c, d);

		function c() {
			return c.__super__.constructor.apply(this, arguments)
		}
		c.prototype.authorize = true;
		c.prototype.view = "Wizard";
		c.prototype.routes = {
			wizard: "wizard",
			quickstart: "quickstart"
		};
		c.prototype.quickstart = function() {
			return FUI.render(new Sierra.Views.Wizard.Page())
		};
		c.prototype.wizard = function() {
			return Sierra.navigate("quickstart")
		};
		return c
	})(Sierra.Router)
}).call(this);